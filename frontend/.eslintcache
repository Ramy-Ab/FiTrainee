[{"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\index.js":"1","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\store.js":"2","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\App.js":"4","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\cartReducers.js":"6","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\orderReducers.js":"8","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Header.js":"9","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\LoginScreen.js":"10","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\HomeScreen.js":"11","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Footer.js":"12","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductScreen.js":"13","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\PaymentScreen.js":"14","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProfileScreen.js":"15","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\PlaceOrderScreen.js":"17","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\UserListScreen.js":"18","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\UserEditScreen.js":"19","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\OrderScreen.js":"20","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ShippingScreen.js":"21","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\RegisterScreen.js":"22","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductListScreen.js":"23","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductEditScreen.js":"24","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\OrderListScreen.js":"25","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\FoodAiScreen.jsx":"26","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\cartConstants.js":"27","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\userConstants.js":"28","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\productConstants.js":"29","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Loader.js":"30","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\orderConstants.js":"31","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Message.js":"32","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FormContainer.js":"33","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\SearchBox.js":"34","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Product.js":"35","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\ProductCarousel.js":"36","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\CheckoutSteps.js":"37","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Rating.js":"38","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Paginate.js":"39","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\userActions.js":"40","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\cartActions.js":"41","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\orderActions.js":"42","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\productActions.js":"43","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodTable\\FoodTable.jsx":"44","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodRecognition\\FoodRecognition.jsx":"45","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\ImageLinkForm\\ImageLinkForm.jsx":"46","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodTableR\\FoodTableR.jsx":"47","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\FoodReducer.js":"48","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\foodConstant.js":"49","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\foodAction.js":"50","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\HomePageScreen\\HomePageScreen.jsx":"51","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\NavBar.jsx":"52","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Headers.jsx":"53","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Feature.jsx":"54","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FeaturesBox.jsx":"55","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Offer.jsx":"56","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\About.jsx":"57","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Contact.jsx":"58","E:\\PFE-test\\frontend\\src\\index.js":"59","E:\\PFE-test\\frontend\\src\\reportWebVitals.js":"60","E:\\PFE-test\\frontend\\src\\App.js":"61","E:\\PFE-test\\frontend\\src\\store.js":"62","E:\\PFE-test\\frontend\\src\\screens\\HomeScreen.js":"63","E:\\PFE-test\\frontend\\src\\screens\\CartScreen.js":"64","E:\\PFE-test\\frontend\\src\\screens\\ProductScreen.js":"65","E:\\PFE-test\\frontend\\src\\screens\\LoginScreen.js":"66","E:\\PFE-test\\frontend\\src\\screens\\RegisterScreen.js":"67","E:\\PFE-test\\frontend\\src\\screens\\ProfileScreen.js":"68","E:\\PFE-test\\frontend\\src\\screens\\PaymentScreen.js":"69","E:\\PFE-test\\frontend\\src\\screens\\ShippingScreen.js":"70","E:\\PFE-test\\frontend\\src\\screens\\PlaceOrderScreen.js":"71","E:\\PFE-test\\frontend\\src\\screens\\OrderScreen.js":"72","E:\\PFE-test\\frontend\\src\\screens\\UserListScreen.js":"73","E:\\PFE-test\\frontend\\src\\screens\\UserEditScreen.js":"74","E:\\PFE-test\\frontend\\src\\screens\\ProductListScreen.js":"75","E:\\PFE-test\\frontend\\src\\screens\\ProductEditScreen.js":"76","E:\\PFE-test\\frontend\\src\\screens\\OrderListScreen.js":"77","E:\\PFE-test\\frontend\\src\\components\\Footer.js":"78","E:\\PFE-test\\frontend\\src\\reducers\\cartReducers.js":"79","E:\\PFE-test\\frontend\\src\\reducers\\productReducers.js":"80","E:\\PFE-test\\frontend\\src\\reducers\\userReducers.js":"81","E:\\PFE-test\\frontend\\src\\reducers\\orderReducers.js":"82","E:\\PFE-test\\frontend\\src\\reducers\\FoodReducer.js":"83","E:\\PFE-test\\frontend\\src\\components\\NavBar.jsx":"84","E:\\PFE-test\\frontend\\src\\screens\\FoodAiScreen.jsx":"85","E:\\PFE-test\\frontend\\src\\screens\\HomePageScreen\\HomePageScreen.jsx":"86","E:\\PFE-test\\frontend\\src\\components\\Loader.js":"87","E:\\PFE-test\\frontend\\src\\components\\Message.js":"88","E:\\PFE-test\\frontend\\src\\components\\Paginate.js":"89","E:\\PFE-test\\frontend\\src\\components\\ProductCarousel.js":"90","E:\\PFE-test\\frontend\\src\\components\\Product.js":"91","E:\\PFE-test\\frontend\\src\\components\\Rating.js":"92","E:\\PFE-test\\frontend\\src\\components\\FormContainer.js":"93","E:\\PFE-test\\frontend\\src\\actions\\cartActions.js":"94","E:\\PFE-test\\frontend\\src\\actions\\orderActions.js":"95","E:\\PFE-test\\frontend\\src\\actions\\productActions.js":"96","E:\\PFE-test\\frontend\\src\\constants\\foodConstant.js":"97","E:\\PFE-test\\frontend\\src\\constants\\cartConstants.js":"98","E:\\PFE-test\\frontend\\src\\actions\\userActions.js":"99","E:\\PFE-test\\frontend\\src\\constants\\productConstants.js":"100","E:\\PFE-test\\frontend\\src\\constants\\orderConstants.js":"101","E:\\PFE-test\\frontend\\src\\constants\\userConstants.js":"102","E:\\PFE-test\\frontend\\src\\components\\CheckoutSteps.js":"103","E:\\PFE-test\\frontend\\src\\components\\Contact.jsx":"104","E:\\PFE-test\\frontend\\src\\components\\About.jsx":"105","E:\\PFE-test\\frontend\\src\\components\\FoodTableR\\FoodTableR.jsx":"106","E:\\PFE-test\\frontend\\src\\components\\ImageLinkForm\\ImageLinkForm.jsx":"107","E:\\PFE-test\\frontend\\src\\components\\Offer.jsx":"108","E:\\PFE-test\\frontend\\src\\components\\Feature.jsx":"109","E:\\PFE-test\\frontend\\src\\components\\Headers.jsx":"110","E:\\PFE-test\\frontend\\src\\components\\FoodRecognition\\FoodRecognition.jsx":"111","E:\\PFE-test\\frontend\\src\\actions\\foodAction.js":"112","E:\\PFE-test\\frontend\\src\\components\\FeaturesBox.jsx":"113","E:\\PFE-test\\frontend\\src\\components\\Header.js":"114","E:\\PFE-test\\frontend\\src\\components\\SearchBox.js":"115","E:\\PFE-test\\frontend\\src\\screens\\Dashboard.js":"116","E:\\PFE-test\\frontend\\src\\components\\Orders.jsx":"117","E:\\PFE-test\\frontend\\src\\components\\NameCustomComponent .jsx":"118","E:\\PFE-test\\frontend\\src\\components\\Users.jsx":"119","E:\\PFE-test\\frontend\\src\\components\\ProductsList.jsx":"120","E:\\PFE-test\\frontend\\src\\components\\employeeService.js":"121","E:\\PFE-test\\frontend\\src\\components\\PageHeader.js":"122","E:\\PFE-test\\frontend\\src\\components\\FormProductEdit.jsx":"123","E:\\PFE-test\\frontend\\src\\components\\ProfileAdmin.jsx":"124","E:\\PFE-test\\frontend\\src\\components\\PersonalInfo.jsx":"125","E:\\PFE-test\\frontend\\src\\components\\Activities.jsx":"126","E:\\PFE-test\\frontend\\src\\components\\Consultation.jsx":"127","E:\\PFE-test\\frontend\\src\\components\\TrainingPlan.jsx":"128","E:\\PFE-test\\frontend\\src\\components\\TraineeDetails.jsx":"129","E:\\PFE-test\\frontend\\src\\screens\\TraineeScreen.jsx":"130","E:\\PFE-test\\frontend\\src\\components\\SideBar.jsx":"131","E:\\PFE-test\\frontend\\src\\screens\\traineeOrderScreen.jsx":"132","E:\\PFE-test\\frontend\\src\\screens\\MotionHoc.js":"133","E:\\PFE-test\\frontend\\src\\components\\NavbarTrainee.jsx":"134","E:\\PFE-test\\frontend\\src\\components\\SidebarData.js":"135","E:\\PFE-test\\frontend\\src\\screens\\ObjectifScreen.jsx":"136","E:\\PFE-test\\frontend\\src\\screens\\ProgressScreen.jsx":"137","E:\\PFE-test\\frontend\\src\\components\\Side.jsx":"138","E:\\PFE-test\\frontend\\src\\components\\WeightDialog.jsx":"139","E:\\PFE-test\\frontend\\src\\components\\NutritionsDialog.jsx":"140","E:\\PFE-test\\frontend\\src\\components\\FoodList.jsx":"141"},{"size":616,"mtime":1620751009456,"results":"142","hashOfConfig":"143"},{"size":2527,"mtime":1620491035784,"results":"144","hashOfConfig":"143"},{"size":362,"mtime":1616760778000,"results":"145","hashOfConfig":"143"},{"size":2407,"mtime":1620811199544,"results":"146","hashOfConfig":"143"},{"size":4080,"mtime":1616760778000,"results":"147","hashOfConfig":"143"},{"size":1486,"mtime":1616760778000,"results":"148","hashOfConfig":"143"},{"size":3926,"mtime":1616760778000,"results":"149","hashOfConfig":"143"},{"size":4079,"mtime":1616760778000,"results":"150","hashOfConfig":"143"},{"size":3200,"mtime":1620062340078,"results":"151","hashOfConfig":"143"},{"size":2549,"mtime":1616760778000,"results":"152","hashOfConfig":"143"},{"size":1553,"mtime":1616760778000,"results":"153","hashOfConfig":"143"},{"size":1914,"mtime":1620301940004,"results":"154","hashOfConfig":"143"},{"size":11494,"mtime":1616760778000,"results":"155","hashOfConfig":"143"},{"size":1705,"mtime":1616760778000,"results":"156","hashOfConfig":"143"},{"size":6774,"mtime":1616760778000,"results":"157","hashOfConfig":"143"},{"size":4721,"mtime":1616760778000,"results":"158","hashOfConfig":"143"},{"size":6564,"mtime":1616760778000,"results":"159","hashOfConfig":"143"},{"size":3511,"mtime":1616760778000,"results":"160","hashOfConfig":"143"},{"size":3912,"mtime":1616760778000,"results":"161","hashOfConfig":"143"},{"size":9903,"mtime":1616760778000,"results":"162","hashOfConfig":"143"},{"size":3176,"mtime":1616760778000,"results":"163","hashOfConfig":"143"},{"size":3922,"mtime":1616760778000,"results":"164","hashOfConfig":"143"},{"size":5007,"mtime":1620555104308,"results":"165","hashOfConfig":"143"},{"size":7916,"mtime":1616760778000,"results":"166","hashOfConfig":"143"},{"size":3541,"mtime":1616760778000,"results":"167","hashOfConfig":"143"},{"size":13213,"mtime":1620817695181,"results":"168","hashOfConfig":"143"},{"size":287,"mtime":1616760778000,"results":"169","hashOfConfig":"143"},{"size":1479,"mtime":1616760778000,"results":"170","hashOfConfig":"143"},{"size":1502,"mtime":1616760778000,"results":"171","hashOfConfig":"143"},{"size":458,"mtime":1616760778000,"results":"172","hashOfConfig":"143"},{"size":1240,"mtime":1616760778000,"results":"173","hashOfConfig":"143"},{"size":228,"mtime":1616760778000,"results":"174","hashOfConfig":"143"},{"size":378,"mtime":1616760778000,"results":"175","hashOfConfig":"143"},{"size":984,"mtime":1616760778000,"results":"176","hashOfConfig":"143"},{"size":1008,"mtime":1616760778000,"results":"177","hashOfConfig":"143"},{"size":1419,"mtime":1616760778000,"results":"178","hashOfConfig":"143"},{"size":1593,"mtime":1616760778000,"results":"179","hashOfConfig":"143"},{"size":1886,"mtime":1616760778000,"results":"180","hashOfConfig":"143"},{"size":859,"mtime":1616760778000,"results":"181","hashOfConfig":"143"},{"size":7370,"mtime":1616760778000,"results":"182","hashOfConfig":"143"},{"size":1310,"mtime":1616760778000,"results":"183","hashOfConfig":"143"},{"size":6009,"mtime":1616760778000,"results":"184","hashOfConfig":"143"},{"size":5931,"mtime":1616760778000,"results":"185","hashOfConfig":"143"},{"size":7108,"mtime":1620487925801,"results":"186","hashOfConfig":"143"},{"size":422,"mtime":1620055224723,"results":"187","hashOfConfig":"143"},{"size":870,"mtime":1620729329361,"results":"188","hashOfConfig":"143"},{"size":2270,"mtime":1620575619800,"results":"189","hashOfConfig":"143"},{"size":776,"mtime":1620556134573,"results":"190","hashOfConfig":"143"},{"size":184,"mtime":1620489607807,"results":"191","hashOfConfig":"143"},{"size":916,"mtime":1620556020067,"results":"192","hashOfConfig":"143"},{"size":593,"mtime":1620740035724,"results":"193","hashOfConfig":"143"},{"size":1424,"mtime":1620741067262,"results":"194","hashOfConfig":"143"},{"size":574,"mtime":1620738732599,"results":"195","hashOfConfig":"143"},{"size":739,"mtime":1620754206663,"results":"196","hashOfConfig":"143"},{"size":455,"mtime":1620736581910,"results":"197","hashOfConfig":"143"},{"size":473,"mtime":1620737322629,"results":"198","hashOfConfig":"143"},{"size":724,"mtime":1620739639336,"results":"199","hashOfConfig":"143"},{"size":496,"mtime":1620740572773,"results":"200","hashOfConfig":"143"},{"size":717,"mtime":1621875333322,"results":"201","hashOfConfig":"202"},{"size":362,"mtime":1620790246000,"results":"203","hashOfConfig":"202"},{"size":3358,"mtime":1624442908681,"results":"204","hashOfConfig":"202"},{"size":2752,"mtime":1624311051293,"results":"205","hashOfConfig":"202"},{"size":1460,"mtime":1622292649733,"results":"206","hashOfConfig":"202"},{"size":4029,"mtime":1622385889723,"results":"207","hashOfConfig":"202"},{"size":9084,"mtime":1624281023809,"results":"208","hashOfConfig":"202"},{"size":2567,"mtime":1624283135774,"results":"209","hashOfConfig":"202"},{"size":7676,"mtime":1624357563564,"results":"210","hashOfConfig":"202"},{"size":6851,"mtime":1623850510367,"results":"211","hashOfConfig":"202"},{"size":1575,"mtime":1624281930625,"results":"212","hashOfConfig":"202"},{"size":2861,"mtime":1624281167024,"results":"213","hashOfConfig":"202"},{"size":5597,"mtime":1624282046752,"results":"214","hashOfConfig":"202"},{"size":10221,"mtime":1621522032719,"results":"215","hashOfConfig":"202"},{"size":3533,"mtime":1621876596332,"results":"216","hashOfConfig":"202"},{"size":3912,"mtime":1620790246000,"results":"217","hashOfConfig":"202"},{"size":5007,"mtime":1620790246000,"results":"218","hashOfConfig":"202"},{"size":7916,"mtime":1620790246000,"results":"219","hashOfConfig":"202"},{"size":3541,"mtime":1620790246000,"results":"220","hashOfConfig":"202"},{"size":1488,"mtime":1624279666654,"results":"221","hashOfConfig":"202"},{"size":1486,"mtime":1620790246000,"results":"222","hashOfConfig":"202"},{"size":4080,"mtime":1620790246000,"results":"223","hashOfConfig":"202"},{"size":5629,"mtime":1624311049424,"results":"224","hashOfConfig":"202"},{"size":4079,"mtime":1620790246000,"results":"225","hashOfConfig":"202"},{"size":717,"mtime":1621862159680,"results":"226","hashOfConfig":"202"},{"size":4010,"mtime":1624273892037,"results":"227","hashOfConfig":"202"},{"size":12809,"mtime":1625618749031,"results":"228","hashOfConfig":"202"},{"size":598,"mtime":1621177354991,"results":"229","hashOfConfig":"202"},{"size":458,"mtime":1620790246000,"results":"230","hashOfConfig":"202"},{"size":228,"mtime":1620790246000,"results":"231","hashOfConfig":"202"},{"size":924,"mtime":1621441468224,"results":"232","hashOfConfig":"202"},{"size":1449,"mtime":1621433412074,"results":"233","hashOfConfig":"202"},{"size":951,"mtime":1624280516695,"results":"234","hashOfConfig":"202"},{"size":1886,"mtime":1620790246000,"results":"235","hashOfConfig":"202"},{"size":332,"mtime":1622384201963,"results":"236","hashOfConfig":"202"},{"size":1310,"mtime":1620790246000,"results":"237","hashOfConfig":"202"},{"size":6057,"mtime":1621864822101,"results":"238","hashOfConfig":"202"},{"size":5931,"mtime":1620790246000,"results":"239","hashOfConfig":"202"},{"size":182,"mtime":1620790246000,"results":"240","hashOfConfig":"202"},{"size":287,"mtime":1620790246000,"results":"241","hashOfConfig":"202"},{"size":10170,"mtime":1624311607821,"results":"242","hashOfConfig":"202"},{"size":1502,"mtime":1620790246000,"results":"243","hashOfConfig":"202"},{"size":1240,"mtime":1620790246000,"results":"244","hashOfConfig":"202"},{"size":2345,"mtime":1624308827345,"results":"245","hashOfConfig":"202"},{"size":1296,"mtime":1624281857185,"results":"246","hashOfConfig":"202"},{"size":479,"mtime":1620790246000,"results":"247","hashOfConfig":"202"},{"size":684,"mtime":1624270387991,"results":"248","hashOfConfig":"202"},{"size":2164,"mtime":1624446600354,"results":"249","hashOfConfig":"202"},{"size":841,"mtime":1620790246000,"results":"250","hashOfConfig":"202"},{"size":421,"mtime":1624268878065,"results":"251","hashOfConfig":"202"},{"size":1087,"mtime":1624268784102,"results":"252","hashOfConfig":"202"},{"size":556,"mtime":1620790246000,"results":"253","hashOfConfig":"202"},{"size":407,"mtime":1620790246000,"results":"254","hashOfConfig":"202"},{"size":818,"mtime":1621862130036,"results":"255","hashOfConfig":"202"},{"size":344,"mtime":1624267653451,"results":"256","hashOfConfig":"202"},{"size":3200,"mtime":1620790246000,"results":"257","hashOfConfig":"202"},{"size":865,"mtime":1625602587533,"results":"258","hashOfConfig":"202"},{"size":7771,"mtime":1624784256152,"results":"259","hashOfConfig":"202"},{"size":2853,"mtime":1625618047176,"results":"260","hashOfConfig":"202"},{"size":406,"mtime":1622231765857,"results":"261","hashOfConfig":"202"},{"size":9341,"mtime":1623024981306,"results":"262","hashOfConfig":"202"},{"size":13391,"mtime":1624784923835,"results":"263","hashOfConfig":"202"},{"size":977,"mtime":1597354944000,"results":"264","hashOfConfig":"202"},{"size":1363,"mtime":1597354944000,"results":"265","hashOfConfig":"202"},{"size":2145,"mtime":1621966293376,"results":"266","hashOfConfig":"202"},{"size":6115,"mtime":1622216893282,"results":"267","hashOfConfig":"202"},{"size":3395,"mtime":1624357850812,"results":"268","hashOfConfig":"202"},{"size":3982,"mtime":1622668621320,"results":"269","hashOfConfig":"202"},{"size":4432,"mtime":1622669989939,"results":"270","hashOfConfig":"202"},{"size":2039,"mtime":1625615065515,"results":"271","hashOfConfig":"202"},{"size":6258,"mtime":1624119816305,"results":"272","hashOfConfig":"202"},{"size":13368,"mtime":1625607226994,"results":"273","hashOfConfig":"202"},{"size":6732,"mtime":1623166185248,"results":"274","hashOfConfig":"202"},{"size":3238,"mtime":1625608470757,"results":"275","hashOfConfig":"202"},{"size":544,"mtime":1621996798000,"results":"276","hashOfConfig":"202"},{"size":1432,"mtime":1623105677770,"results":"277","hashOfConfig":"202"},{"size":892,"mtime":1623105638438,"results":"278","hashOfConfig":"202"},{"size":20889,"mtime":1625618809413,"results":"279","hashOfConfig":"202"},{"size":2407,"mtime":1624787449682,"results":"280","hashOfConfig":"202"},{"size":2102,"mtime":1623228545611,"results":"281","hashOfConfig":"202"},{"size":5220,"mtime":1624458117934,"results":"282","hashOfConfig":"202"},{"size":5445,"mtime":1624787889745,"results":"283","hashOfConfig":"202"},{"size":2344,"mtime":1625042745169,"results":"284","hashOfConfig":"202"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},"1x9vvrj",{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"287"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"287"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"287"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"287"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"287"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"287"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"287"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"287"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"287"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"287"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"287"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"287"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"287"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"287"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"287"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"287"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"287"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"287"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"287"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"287"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"287"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"287"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"429"},"1ecs3li",{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"429"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"429"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"429"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"429"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"429"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"429"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"429"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"429"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"429"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"429"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"429"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"429"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"429"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"429"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"429"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"429"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"429"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"429"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"429"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"429"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"429"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"429"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"429"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"429"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"429"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"562","messages":"563","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"429"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"429"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"429"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"579","messages":"580","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"429"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"429"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"429"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"429"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"429"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"596","messages":"597","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"429"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"429"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"429"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"609"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"616","messages":"617","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"429"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"429"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"429"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"429"},"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\index.js",[],["630","631"],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\store.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\App.js",["632"],"import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport FoodAiScreen from './screens/FoodAiScreen'\nimport HomePageScreen from './screens/HomePageScreen/HomePageScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <main className=\"py-3\">\n        \n          <Route path='/gym' component={HomePageScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/foodai' component={FoodAiScreen}/>  \n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n      \n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Header.js",["633"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>ProShop</Navbar.Brand>\n                    </LinkContainer>\n\n                    <LinkContainer to='/foodai'>\n                        <Navbar.Brand>Food AI</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n",["634","635"],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\HomeScreen.js",["636"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && <ProductCarousel />}\n\n            <h1>Latest Products</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Footer.js",["637","638","639","640","641","642"],"import React from \"react\";\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <div>\n        <section className=\"contact-area\" id=\"contact\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-lg-6 offset-lg-3\">\n                    <div className=\"contact-content text-center\">\n                        <a href=\"#\">\n                            <img src=\"https://i.ibb.co/QDy827D/ak-logo.png\" alt=\"logo\"/>\n                        </a>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis ipsum </p>\n                        <div className=\"hr\"></div>\n                        <h6>1120 Lorem ipsum dolor sit amet, KC 179050, Chandigarh.</h6>\n                        <h6>+01 2345 6789 12<span>|</span>+01 2345 6789 12</h6>\n                        <div className=\"contact-social\">\n                            <ul>\n                                <li><a className=\"hover-target\" href=\"\"><i className=\"fab fa-facebook-f\"></i></a></li>\n                                <li><a className=\"hover-target\" href=\"\"><i className=\"fab fa-linkedin-in\"></i></a></li>\n                                <li><a className=\"hover-target\" href=\"\"><i className=\"fab fa-github\"></i></a></li>\n                                <li><a className=\"hover-target\" href=\"\"><i className=\"fab fa-behance\"></i></a></li>\n                                <li><a className=\"hover-target\" href=\"\"><i className=\"fab fa-pinterest-p\"></i></a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <footer>\n        <p>Copyright &copy; 2019 <img src=\"https://i.ibb.co/QDy827D/ak-logo.png\" alt=\"logo\"/> All Rights Reserved.</p>\n    </footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductScreen.js",["643"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\PaymentScreen.js",["644"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProfileScreen.js",["645","646"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\PlaceOrderScreen.js",["647","648"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\UserListScreen.js",["649"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\UserEditScreen.js",["650"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\OrderScreen.js",["651"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ShippingScreen.js",["652"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\RegisterScreen.js",["653"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductListScreen.js",["654"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\OrderListScreen.js",["655"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\FoodAiScreen.jsx",["656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671"],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Message.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Product.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\userActions.js",["672"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\orderActions.js",["673","674","675"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\productActions.js",["676"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodTable\\FoodTable.jsx",["677"],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodRecognition\\FoodRecognition.jsx",["678","679"],"import React from 'react'\r\nimport './FoodRecognition.css'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nfunction FoodRecognition({imageUrl}) {\r\n    return (\r\n        <div className='center ma centred'>\r\n            <div className='absolute mt2 center'>\r\n            <img className='inputimage'  src={imageUrl} width='500px' height='auto'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodRecognition\r\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\ImageLinkForm\\ImageLinkForm.jsx",["680","681"],"import React,{useState} from 'react'\r\nimport './ImageLinkForm.css'\r\n\r\nfunction ImageLinkForm({onInputChange,onButtonSubmit}) {\r\n\r\n\r\n    const fileSelectedHandler = (e) => {\r\n        console.log(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p className='f3 c foodP'>\r\n                {'This Food Ai will classify your food'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n                    <button\r\n                    className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}\r\n                    >Detect</button>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm\r\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodTableR\\FoodTableR.jsx",["682","683","684","685","686"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { foodNutritionList } from \"../../actions/foodAction\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./FoodTableR.css\";\r\n\r\nfunction FoodTableR({result}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const foodNutrition = useSelector((state) => state.foodNutrition);\r\n  const {success, error, loading, nutritions } = foodNutrition;\r\n\r\n  \r\n  console.log(result);\r\n\r\n  useEffect(()=>{\r\n    if(result)\r\n    {console.log(\"useEffect trigred\");\r\n    console.log('state', loading, success)\r\n    // console.log('function',  foodNutritionList(result))\r\n    if(result){\r\n      dispatch(foodNutritionList(result));}\r\n    } else{\r\n      dispatch(foodNutritionList(\"pizza\"));\r\n    }\r\n   \r\n\r\n    \r\n  },[result])\r\n\r\n   useEffect(() => {\r\n      if (!loading && success){\r\n    console.log(\"nutritions : \",nutritions[0]);\r\n    console.log(\"sugar : \",nutritions[0].sugar_g);\r\n    }else if(!(loading && success)){\r\n      console.log(\"error\",error);\r\n    }\r\n   }, [success])\r\n\r\n  return (\r\n    <div>\r\n       {loading && <Loader />}\r\n       <div className='item'>\r\n        <div className='item-top'>\r\n          <div className='item-head'>\r\n            <h4>{nutritions[0]?.name}</h4>\r\n          </div>\r\n          \r\n          <div className='item-content'>\r\n            \r\n            <div className='item-info'>\r\n              <span className='item-info-a'>{nutritions[0]?.calories}</span>\r\n              <span className='item-info-b'>Calories</span>\r\n            </div>\r\n            \r\n            <div className='item-info'>\r\n              <span className='item-info-a'>{nutritions[0]?.carbohydrates_total_g}</span>\r\n              <span className='item-info-b'>Carbs</span>\r\n            </div>\r\n            \r\n            <div className='item-info'>\r\n              <span className='item-info-a'>{nutritions[0]?.protein_g}</span>\r\n              <span className='item-info-b'>Protein</span>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n        \r\n     \r\n      </div> \r\n      \r\n      {console.log(\"object\")}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodTableR;\r\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\FoodReducer.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\foodConstant.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\foodAction.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\HomePageScreen\\HomePageScreen.jsx",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\NavBar.jsx",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Headers.jsx",["687"],"import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div id=\"heading\">\r\n            <div className='pr-heading'>\r\n                <h1 className='h2-header'>SETUP UP YOUR</h1>\r\n                <h1><span className='span-header'>FITNESS</span> WITH US</h1>\r\n                <p className='details'>Build Your Body And Fitness With Professional Traier</p>\r\n                <div className='pr-btns'>\r\n                    <a href=\"#\" className='pr-btn'>JOIN US</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Feature.jsx",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FeaturesBox.jsx",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Offer.jsx",["688"],"import React from 'react'\r\n\r\nfunction Offer() {\r\n    return (\r\n        <div id='offer'>\r\n            <div className='pr-heading'>\r\n                <h1>A big <span>Offer</span> FOR THIS SUMMER</h1>\r\n                <p className='details'>Lorem ipsum dolor sit amet </p> \r\n                <div className='pr-btns'>\r\n                    <a href=\"#\" className='pr-btn'>JOIN NOW</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Offer\r\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\About.jsx",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Contact.jsx",[],"E:\\PFE-test\\frontend\\src\\index.js",["689","690"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["691","692"],"E:\\PFE-test\\frontend\\src\\reportWebVitals.js",[],"E:\\PFE-test\\frontend\\src\\App.js",["693","694","695","696"],"import { Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport FoodAiScreen from \"./screens/FoodAiScreen\";\nimport HomePageScreen from \"./screens/HomePageScreen/HomePageScreen\";\nimport Dashboard from \"./screens/Dashboard\";\nimport TraineeScreen from \"./screens/TraineeScreen\";\nimport traineeOrderScreen from \"./screens/traineeOrderScreen\";\nimport ObjectifScreen from \"./screens/ObjectifScreen\";\nimport ProgressScreen from \"./screens/ProgressScreen\";\n\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <Router>\n      {window.location.href.split(\"/\")[4] === \"dashboard\" ? \"\" : <NavBar />}\n      <main className=\" mt-5 py-3-main\">\n        <Route path=\"/dashboard\" component={Dashboard} exact />\n        <Route path=\"/shop\" component={HomeScreen} exact />\n        <Route path=\"/\" component={HomePageScreen} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} exact />\n        <Route path=\"/trainee\" component={TraineeScreen} exact />\n        <Route path=\"/trainee/orders\" component={traineeOrderScreen} />\n        <Route path=\"/trainee/objectif\" component={ObjectifScreen} />\n        <Route path=\"/trainee/progress\" component={ProgressScreen} />\n\n        <Route path=\"/profile\" component={ProfileScreen} />\n        <Route path=\"/shipping\" component={ShippingScreen} />\n        <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n        <Route path=\"/order/:id\" component={OrderScreen} />\n        <Route path=\"/payment\" component={PaymentScreen} />\n        <Route path=\"/product/:id\" component={ProductScreen} />\n        <Route path=\"/cart/:id?\" component={CartScreen} />\n        <Route path=\"/foodai\" component={FoodAiScreen} />\n        <Route path=\"/admin/userlist\" component={UserListScreen} />\n        <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n\n        <Route path=\"/admin/productlist\" component={ProductListScreen} />\n        <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n\n        <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n      </main>\n      {window.location.href.split(\"/\")[4] === \"\"\n        ? console.log(\"true\")\n        : console.log(\"false\")}\n\n      {window.location.href.split(\"/\")[4] === \"\" ? <Footer /> : \"\"}\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\PFE-test\\frontend\\src\\store.js",[],"E:\\PFE-test\\frontend\\src\\screens\\HomeScreen.js",["697"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport SearchBox from \"../components/SearchBox\";\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport { listProducts } from \"../actions/productActions\";\n\nfunction HomeScreen({ history }) {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products, page, pages } = productList;\n\n  let keyword = history.location.search;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword));\n  }, [dispatch, keyword]);\n\n  return (\n    <div>\n      {!keyword && <ProductCarousel />}\n      <SearchBox />\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Container>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate page={page} pages={pages} keyword={keyword} />\n        </Container>\n      )}\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","E:\\PFE-test\\frontend\\src\\screens\\CartScreen.js",[],"E:\\PFE-test\\frontend\\src\\screens\\ProductScreen.js",["698"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  Form,\n  Container,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\n\nfunction ProductScreen({ match, history }) {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <h3>{product.name}</h3>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n\n            {/* <Col md={3}>\n                                    <ListGroup variant=\"flush\" className='custom-d'>\n                                        <ListGroup.Item className='custom-d'>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item className='custom-d'>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item className='custom-d'>\n                                            Price: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item md={6} className='custom-d'>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col> */}\n            <Col md={2}></Col>\n\n            <Col md={3}>\n              <Card className=\"custom-d br4\">\n                <ListGroup className=\"custom-d\" variant=\"flush\">\n                  <ListGroup.Item className=\"custom-d\">\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item className=\"custom-d\">\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item className=\"custom-d\">\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col xs=\"auto\" className=\" my-1\">\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item className=\"custom-d\">\n                    <Rating\n                      value={product.rating}\n                      text={`${product.numReviews} reviews`}\n                      color={\"#f8e825\"}\n                    />\n                  </ListGroup.Item>\n                  <ListGroup.Item className=\"custom-d\">\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      disabled={product.countInStock == 0}\n                      type=\"button\"\n                    >\n                      Add to Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <h4 className=\"h-white mt-3\">Description :</h4>\n            <Col md={8} className=\"custom-d ml-3 mb-5 mt-3 br4 p-4 h-white\">\n              {product.description}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <h4>Reviews</h4>\n              {product.reviews.length === 0 && (\n                <Message variant=\"info\">No Reviews</Message>\n              )}\n\n              <ListGroup variant=\"flush\" className=\"custom-d br4 \">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id} className=\"custom-d\">\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} color=\"#f8e825\" />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n\n                <ListGroup.Item className=\"custom-d\">\n                  <h4>Write a review</h4>\n\n                  {loadingProductReview && <Loader />}\n                  {successProductReview && (\n                    <Message variant=\"success\">Review Submitted</Message>\n                  )}\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"5\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n\n                      <Button\n                        className=\"btn-block\"\n                        disabled={loadingProductReview}\n                        type=\"submit\"\n                        variant=\"primary\"\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant=\"info\">\n                      Please <Link to=\"/login\">login</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default ProductScreen;\n","E:\\PFE-test\\frontend\\src\\screens\\LoginScreen.js",[],"E:\\PFE-test\\frontend\\src\\screens\\RegisterScreen.js",["699","700"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button as ButtonB, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { register, traineeInfo } from \"../actions/userActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BasicButtonGroup from \"../components/PersonalInfo\";\nimport Activities from \"../components/Activities\";\nimport Consultation from \"../components/Consultation\";\nimport TrainingPlan from \"../components/TrainingPlan\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"black\",\n    width: \"100%\",\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    backgroundColor: \"black\",\n  },\n}));\n\nfunction getSteps() {\n  return [\n    \"setting up your account\",\n    \"Personal Info\",\n    \"Your Activities\",\n    \"Your Objectives\",\n    \"Training Plan\",\n  ];\n}\n\nfunction RegisterScreen({ location, history }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { error, loading, userInfo } = userRegister;\n\n  const UserTrainee = useSelector((state) => state.UserTrainee);\n  const { trainee } = UserTrainee;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  useEffect(() => {\n    dispatch(traineeInfo({ ...trainee, name, email, password }));\n  }, [name, email, password]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      console.log(trainee);\n      dispatch(register(trainee));\n    }\n  };\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <div>\n            <h1>Sign Up</h1>\n            {message && <Message variant=\"danger\">{message}</Message>}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"name\"\n                  placeholder=\"Enter name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  required\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  required\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"passwordConfirm\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  required\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              {/* <ButtonB type=\"submit\" variant=\"primary\">\n                Register\n              </ButtonB> */}\n            </Form>\n          </div>\n        );\n      case 1:\n        return <BasicButtonGroup />;\n      case 2:\n        return <Activities />;\n      case 3:\n        return <Consultation />;\n      case 4:\n        return <TrainingPlan />;\n      default:\n        return \"Unknown stepIndex\";\n    }\n  }\n\n  return (\n    <div className=\"login-header mt-5\">\n      <FormContainer>\n        <div className=\"login-form pl-5 pr-5  pt-1 mt-5\">\n          <div className={classes.root}>\n            <Stepper\n              activeStep={activeStep}\n              alternativeLabel\n              className=\"stepper\"\n            >\n              {steps.map((label) => (\n                <Step className=\"h-white\" key={label}>\n                  <StepLabel className=\"h-white\">{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <div>\n              {activeStep === steps.length ? (\n                <div>\n                  <Typography className={classes.instructions}>\n                    All steps completed\n                  </Typography>\n                  <ButtonB\n                    type=\"submit\"\n                    variant=\"primary\"\n                    onClick={submitHandler}\n                  >\n                    Register\n                  </ButtonB>\n                  <Button style={{ color: \"white\" }} onClick={handleReset}>\n                    Reset\n                  </Button>\n                </div>\n              ) : (\n                <div>\n                  <Typography className={classes.instructions}>\n                    {getStepContent(activeStep)}\n                  </Typography>\n                  <div>\n                    <Button\n                      style={{ color: \"white\" }}\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.backButton}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <Row className=\"py-3\">\n            <Col col-md-3>\n              <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n                Sign In{\" \"}\n                <p style={{ color: \"#797c80\", fontSize: \"12px\" }}>\n                  if you already have acount\n                </p>\n              </Link>\n            </Col>\n          </Row>\n        </div>\n      </FormContainer>\n    </div>\n  );\n}\n\nexport default RegisterScreen;\n","E:\\PFE-test\\frontend\\src\\screens\\ProfileScreen.js",["701","702"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table , Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()  \n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Container className=\"mt-5 mb-5\">\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n        </Container>\n    )\n}\n\nexport default ProfileScreen","E:\\PFE-test\\frontend\\src\\screens\\PaymentScreen.js",["703"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\n\nfunction PaymentScreen({ history }) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <div className=\"custom-d p-5 br3 h-white\">\n        <Form onSubmit={submitHandler}>\n          <Form.Group>\n            <Form.Label as=\"legend\">Select Method</Form.Label>\n            <Col>\n              <Form.Check\n                type=\"radio\"\n                label=\"PayPal or Credit Card\"\n                id=\"paypal\"\n                name=\"paymentMethod\"\n                checked\n                onChange={(e) => setPaymentMethod(e.target.value)}\n              ></Form.Check>\n            </Col>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\" className=\"btn-block \">\n            Continue\n          </Button>\n        </Form>\n      </div>\n    </FormContainer>\n  );\n}\n\nexport default PaymentScreen;\n","E:\\PFE-test\\frontend\\src\\screens\\ShippingScreen.js",["704"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\n\nfunction ShippingScreen({ history }) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer className=\"mb-5\">\n      <CheckoutSteps step1 step2 />\n      <div className=\"custom-d p-5 br4\">\n        <h1>Shipping</h1>\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"address\" className=\"h-white\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter address\"\n              value={address ? address : \"\"}\n              onChange={(e) => setAddress(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"city\" className=\"h-white\">\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter city\"\n              value={city ? city : \"\"}\n              onChange={(e) => setCity(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"postalCode\" className=\"h-white\">\n            <Form.Label>Postal Code</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter postal code\"\n              value={postalCode ? postalCode : \"\"}\n              onChange={(e) => setPostalCode(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"country\" className=\"h-white\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter country\"\n              value={country ? country : \"\"}\n              onChange={(e) => setCountry(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\" className=\"btn-block \">\n            Continue\n          </Button>\n        </Form>\n      </div>\n    </FormContainer>\n  );\n}\n\nexport default ShippingScreen;\n","E:\\PFE-test\\frontend\\src\\screens\\PlaceOrderScreen.js",["705","706"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n  Container,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { createOrder } from \"../actions/orderActions\";\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\n\nfunction PlaceOrderScreen({ history }) {\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, error, success } = orderCreate;\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n\n  cart.itemsPrice = cart.cartItems\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\n    .toFixed(2);\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\n  cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  if (!cart.paymentMethod) {\n    history.push(\"/payment\");\n  }\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n      dispatch({ type: ORDER_CREATE_RESET });\n    }\n  }, [success, history]);\n\n  const placeOrder = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <Container>\n      <CheckoutSteps step1 step2 step3 step4 className=\"mt-5\" />\n      <Row className=\"mt-5 mb-5 \">\n        <Col md={8} className=\"br4\">\n          <ListGroup variant=\"flush\" className=\"custom-d br3\">\n            <ListGroup.Item className=\"custom-d\">\n              <h2>Shipping</h2>\n\n              <p>\n                <strong>Shipping: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\n                {\"  \"}\n                {cart.shippingAddress.postalCode},{\"  \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item className=\"custom-d\">\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item className=\"custom-d\">\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message variant=\"info\">Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\" className=\"custom-d\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index} className=\"custom-d\">\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${item.price} = $\n                          {(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card className=\"custom-d br5 \">\n            <ListGroup variant=\"flush\" className=\"custom-d br3\">\n              <ListGroup.Item className=\"custom-d\">\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item className=\"custom-d\">\n                <Row>\n                  <Col>Items:</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item className=\"custom-d\">\n                <Row>\n                  <Col>Shipping:</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item className=\"custom-d\">\n                <Row>\n                  <Col>Tax:</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item className=\"custom-d\">\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item className=\"custom-d\">\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item className=\"custom-d\">\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrder}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default PlaceOrderScreen;\n","E:\\PFE-test\\frontend\\src\\screens\\OrderScreen.js",["707"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <Container>\n                    <h1>Order: {order.Id}</h1>\n                    <Row className=\"mb-5\">\n                        <Col md={8}>\n                            <ListGroup variant='flush' >\n                                <ListGroup.Item className='custom-d'>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item className='custom-d'>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item className='custom-d'>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush' className='custom-d'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index} className='custom-d'>\n                                                        <Row >\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4} >\n                            <Card >\n                                <ListGroup variant='flush' className='custom-d'>\n                                    <ListGroup.Item className='custom-d'>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item className='custom-d'>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item >\n\n                                    <ListGroup.Item className='custom-d'>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item className='custom-d'>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item className='custom-d'>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item className='custom-d'>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item className='custom-d'>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n}\n\nexport default OrderScreen\n","E:\\PFE-test\\frontend\\src\\screens\\UserListScreen.js",["708"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button,Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <Container>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </Container>\n    )\n}\n\nexport default UserListScreen\n","E:\\PFE-test\\frontend\\src\\screens\\UserEditScreen.js",["709"],"E:\\PFE-test\\frontend\\src\\screens\\ProductListScreen.js",["710"],"E:\\PFE-test\\frontend\\src\\screens\\ProductEditScreen.js",[],"E:\\PFE-test\\frontend\\src\\screens\\OrderListScreen.js",["711"],"E:\\PFE-test\\frontend\\src\\components\\Footer.js",["712","713","714"],"import React from \"react\";\nimport \"./Footer.css\";\nimport logo from \"../images/logo.png\";\n\nfunction Footer() {\n  return (\n    <div>\n      <section className=\"contact-area\" id=\"contact\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 offset-lg-3\">\n              <div className=\"contact-content text-center\">\n                <a href=\"#\">\n                  <img src={logo} alt=\"logo\" />\n                </a>\n\n                <div className=\"hr\"></div>\n                <h6>A coté Station Naftal Boukhadra, El bouni, Annaba.</h6>\n                <h6>\n                  +213 656267769<span></span>\n                </h6>\n                <div className=\"contact-social\">\n                  <ul className=\"mb-1\">\n                    <li>\n                      <a className=\"hover-target\" href=\"\">\n                        <i className=\"fab fa-facebook-f\"></i>\n                      </a>\n                    </li>\n                    <li>\n                      <a className=\"hover-target\" href=\"\">\n                        <i className=\"fab fa-pinterest-p\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <footer>\n        <p>\n          Copyright &copy; 2021 <img src={logo} alt=\"logo\" /> All Rights\n          Reserved.\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","E:\\PFE-test\\frontend\\src\\reducers\\cartReducers.js",[],"E:\\PFE-test\\frontend\\src\\reducers\\productReducers.js",[],"E:\\PFE-test\\frontend\\src\\reducers\\userReducers.js",[],"E:\\PFE-test\\frontend\\src\\reducers\\orderReducers.js",[],"E:\\PFE-test\\frontend\\src\\reducers\\FoodReducer.js",[],"E:\\PFE-test\\frontend\\src\\components\\NavBar.jsx",["715","716","717","718","719"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport logo from \"../images/logo.png\";\nimport { Link } from \"react-scroll\";\nimport { Link as LinkR, useHistory } from \"react-router-dom\";\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { logout } from \"../actions/userActions\";\nimport SearchBox from \"./SearchBox\";\nfunction NavBar({ history }) {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n  history = useHistory();\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    history.push(\"/\");\n  };\n\n  const [nav, setNav] = useState(false);\n\n  const changeBackground = () => {\n    if (window.scrollY >= 50) {\n      setNav(true);\n    } else {\n      setNav(false);\n    }\n  };\n  window.addEventListener(\"scroll\", changeBackground);\n\n  return (\n    <nav className={nav ? \"nav active\" : \"nav\"}>\n      <LinkR to=\"/\" className=\"logo\">\n        <img src={logo} alt=\"\" />\n      </LinkR>\n      <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\n      <label className=\"menu-icon\" for=\"menu-btn\">\n        <span className=\"nav-icon\"></span>\n      </label>\n      <ul className=\"menu\">\n        {/* <li className='nav-li'><Link to='features' smooth={true} duration={1000}>Features</Link></li>\n                <li className='nav-li'><Link to='offer' smooth={true} duration={1000}>Offer</Link></li> */}\n        {/* <li className=\"nav-li\">\n          <Link to=\"about\" smooth={true} duration={1000}>\n            About\n          </Link>\n        </li> */}\n        <li className=\"nav-li foodai-li\">\n          <LinkR className=\"foodai-li\" to=\"/foodai\">\n            FoodAi\n          </LinkR>\n        </li>\n        <li className=\"nav-li foodai-li\">\n          <LinkR className=\"foodai-li\" to=\"/shop\">\n            Shop\n          </LinkR>\n        </li>\n        <li className=\"nav-li\">\n          <LinkR className=\"foodai-li\" to=\"/cart\">\n            <i className=\"fas fa-shopping-cart\"></i>\n          </LinkR>\n        </li>\n        <li className=\"nav-li\">\n          <Link to=\"contact\" smooth={true} duration={1000}>\n            Contact\n          </Link>\n        </li>\n\n        {userInfo && !userInfo.isAdmin && (\n          <NavDropdown title={userInfo.name} id=\"username\">\n            <LinkContainer to=\"/trainee\" className=\"NavDropdown\">\n              <NavDropdown.Item>Profile</NavDropdown.Item>\n            </LinkContainer>\n\n            <NavDropdown.Item className=\"NavDropdown\" onClick={logoutHandler}>\n              Logout\n            </NavDropdown.Item>\n          </NavDropdown>\n        )}\n\n        {!userInfo && (\n          <LinkContainer to=\"/login\">\n            <li className=\"nav-li foodai-li\">\n              <LinkR className=\"foodai-li\" to=\"/login\">\n                LogIn\n              </LinkR>\n            </li>\n          </LinkContainer>\n        )}\n\n        {userInfo && userInfo.isAdmin && (\n          <NavDropdown title=\"Admin\" id=\"adminmenue\">\n            <LinkContainer to=\"/dashboard\">\n              <NavDropdown.Item>Dashboard</NavDropdown.Item>\n            </LinkContainer>\n            <NavDropdown.Item className=\"NavDropdown\" onClick={logoutHandler}>\n              Logout\n            </NavDropdown.Item>\n            <LinkContainer to=\"/admin/userlist\">\n              <NavDropdown.Item>Users</NavDropdown.Item>\n            </LinkContainer>\n\n            <LinkContainer to=\"/admin/productlist\">\n              <NavDropdown.Item>Products</NavDropdown.Item>\n            </LinkContainer>\n\n            <LinkContainer to=\"/admin/orderlist\">\n              <NavDropdown.Item>Orders</NavDropdown.Item>\n            </LinkContainer>\n          </NavDropdown>\n        )}\n        {/* <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                </LinkContainer> */}\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","E:\\PFE-test\\frontend\\src\\screens\\FoodAiScreen.jsx",["720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735"],"E:\\PFE-test\\frontend\\src\\screens\\HomePageScreen\\HomePageScreen.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\Loader.js",[],"E:\\PFE-test\\frontend\\src\\components\\Message.js",[],"E:\\PFE-test\\frontend\\src\\components\\Paginate.js",[],"E:\\PFE-test\\frontend\\src\\components\\ProductCarousel.js",[],"E:\\PFE-test\\frontend\\src\\components\\Product.js",["736"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"./Rating\";\nimport { Link } from \"react-router-dom\";\n\nfunction Product({ product }) {\n  return (\n    <Card className=\"my-3 p-3 rounded br3 \" className=\"custom-dd\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title className=\"card-title\" as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as=\"div\" className=\"h-white\">\n          <div className=\"my-3\">\n            <Rating\n              value={product.rating}\n              text={`${product.numReviews} reviews`}\n              color={\"#f8e825\"}\n            />\n          </div>\n        </Card.Text>\n\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Product;\n","E:\\PFE-test\\frontend\\src\\components\\Rating.js",[],"E:\\PFE-test\\frontend\\src\\components\\FormContainer.js",[],"E:\\PFE-test\\frontend\\src\\actions\\cartActions.js",[],"E:\\PFE-test\\frontend\\src\\actions\\orderActions.js",["737","738","739"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n        \n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n        console.log('finish call api')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","E:\\PFE-test\\frontend\\src\\actions\\productActions.js",["740"],"E:\\PFE-test\\frontend\\src\\constants\\foodConstant.js",[],"E:\\PFE-test\\frontend\\src\\constants\\cartConstants.js",[],"E:\\PFE-test\\frontend\\src\\actions\\userActions.js",["741"],"import axios from \"axios\";\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  TRAINEE_INFO_REQUEST,\n  TRAINEE_INFO_SUCCESS,\n  TRAINEE_INFO_FAIL,\n  TRAINEE_UPDATE_REQUEST,\n  TRAINEE_UPDATE_SUCCESS,\n  TRAINEE_UPDATE_FAIL,\n  TRAINEE_UPDATE_WEIGHT_REQUEST,\n  TRAINEE_UPDATE_WEIGHT_SUCCESS,\n  TRAINEE_UPDATE_WEIGHT_FAIL,\n  TRAINEE_UPDATE_NUTRITION_REQUEST,\n  TRAINEE_UPDATE_NUTRITION_SUCCESS,\n  TRAINEE_UPDATE_NUTRITION_FAIL,\n} from \"../constants/userConstants\";\n\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login/\",\n      { username: email, password: password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (info) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    console.log(\"dataaaa : \", info);\n\n    const { data } = await axios.post(\"/api/users/register/\", info, config);\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}/`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/profile/update/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/users/delete/${id}/`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/update/${user._id}/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const traineeInfo = (data) => async (dispatch) => {\n  dispatch({\n    type: \"trainee_info\",\n    payload: data,\n  });\n};\n\nexport const getTraineeInfo = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TRAINEE_INFO_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    console.log(\"before axios\");\n    const { data } = await axios.get(`/api/users/trainee/${id}`, config);\n    console.log(\"data in action : \", data);\n\n    dispatch({\n      type: TRAINEE_INFO_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(\"eror dispatch : \", error);\n    dispatch({\n      type: TRAINEE_INFO_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateTraineProfile = (user, id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TRAINEE_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/updatetrainee/${id}/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: TRAINEE_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: TRAINEE_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateTraineWeight = (user, id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TRAINEE_UPDATE_WEIGHT_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/updateweight/${id}/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: TRAINEE_UPDATE_WEIGHT_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TRAINEE_UPDATE_WEIGHT_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateTraineNutrition =\n  (user, id) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: TRAINEE_UPDATE_NUTRITION_REQUEST,\n      });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/users/updatenutritions/${id}/`,\n        user,\n        config\n      );\n\n      dispatch({\n        type: TRAINEE_UPDATE_NUTRITION_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: TRAINEE_UPDATE_NUTRITION_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n","E:\\PFE-test\\frontend\\src\\constants\\productConstants.js",[],"E:\\PFE-test\\frontend\\src\\constants\\orderConstants.js",[],"E:\\PFE-test\\frontend\\src\\constants\\userConstants.js",[],"E:\\PFE-test\\frontend\\src\\components\\CheckoutSteps.js",[],"E:\\PFE-test\\frontend\\src\\components\\Contact.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\About.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\FoodTableR\\FoodTableR.jsx",["742","743","744","745","746"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { foodNutritionList } from \"../../actions/foodAction\";\nimport { Button } from \"react-bootstrap\";\nimport \"./FoodTableR.css\";\n\nfunction FoodTableR({ result }) {\n  const dispatch = useDispatch();\n\n  const foodNutrition = useSelector((state) => state.foodNutrition);\n  const { success, error, loading, nutritions } = foodNutrition;\n\n  console.log(result);\n\n  useEffect(() => {\n    if (result) {\n      console.log(\"useEffect trigred\");\n      console.log(\"state\", loading, success);\n      // console.log('function',  foodNutritionList(result))\n      if (result) {\n        dispatch(foodNutritionList(result));\n      }\n    } else {\n      dispatch(foodNutritionList(\"pizza\"));\n    }\n  }, [result]);\n\n  useEffect(() => {\n    if (!loading && success) {\n      console.log(\"nutritions : \", nutritions[0]);\n      console.log(\"sugar : \", nutritions[0].sugar_g);\n    } else if (!(loading && success)) {\n      console.log(\"error\", error);\n    }\n  }, [success]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <div className=\"item\">\n        <div className=\"item-top\">\n          <div className=\"item-head\">\n            <h4>{nutritions[0]?.name}</h4>\n          </div>\n\n          <div className=\"item-content\">\n            <div className=\"item-info\">\n              <span className=\"item-info-a\">{nutritions[0]?.calories}</span>\n              <span className=\"item-info-b\">Calories</span>\n            </div>\n\n            <div className=\"item-info\">\n              <span className=\"item-info-a\">\n                {nutritions[0]?.carbohydrates_total_g}\n              </span>\n              <span className=\"item-info-b\">Carbs</span>\n            </div>\n\n            <div className=\"item-info\">\n              <span className=\"item-info-a\">{nutritions[0]?.protein_g}</span>\n              <span className=\"item-info-b\">Protein</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {console.log(\"object\")}\n    </div>\n  );\n}\n\nexport default FoodTableR;\n","E:\\PFE-test\\frontend\\src\\components\\ImageLinkForm\\ImageLinkForm.jsx",["747","748"],"import React,{useState} from 'react'\nimport './ImageLinkForm.css'\n\nfunction ImageLinkForm({onInputChange,onButtonSubmit}) {\n\n\n    const fileSelectedHandler = (e) => {\n        console.log(e.target.files[0]);\n    }\n\n    return (\n        <div>\n            <p className='f3 c foodP'>\n                {'This Food Ai will classify your food'}\n            </p>\n            <div className='center'>\n                <div className='form center pa4 br3 shadow-5'>\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\n                    <button\n                    className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}\n                    >Detect</button>\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageLinkForm\n","E:\\PFE-test\\frontend\\src\\components\\Offer.jsx",["749"],"import React from \"react\";\n\nfunction Offer() {\n  return (\n    <div id=\"offer\">\n      <div className=\"pr-heading\">\n        <h1>\n          A big <span>Offer</span> FOR THIS SUMMER\n        </h1>\n        <p className=\"details\">Get it Now !</p>\n        <div className=\"pr-btns\">\n          <a href=\"#\" className=\"pr-btn\">\n            JOIN NOW\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Offer;\n","E:\\PFE-test\\frontend\\src\\components\\Feature.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\Headers.jsx",["750"],"import React from 'react'\n\nfunction Header() {\n    return (\n        <div id=\"heading\">\n            <div className='pr-heading'>\n                <h1 className='h2-header'>SETUP UP YOUR</h1>\n                <h1><span className='span-header'>FITNESS</span> WITH US</h1>\n                <p className='details'>Build Your Body And Fitness With Professional Traier</p>\n                <div className='pr-btns'>\n                    <a href=\"#\" className='pr-btn'>JOIN US</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","E:\\PFE-test\\frontend\\src\\components\\FoodRecognition\\FoodRecognition.jsx",["751","752"],"import React from 'react'\nimport './FoodRecognition.css'\nimport {useDropzone} from 'react-dropzone'\n\nfunction FoodRecognition({imageUrl}) {\n    return (\n        <div className='center ma centred'>\n            <div className='absolute mt2 center'>\n            <img className='inputimage'  src={imageUrl} width='500px' height='auto'/>\n            </div>\n        </div>\n    )\n}\n\nexport default FoodRecognition\n","E:\\PFE-test\\frontend\\src\\actions\\foodAction.js",[],"E:\\PFE-test\\frontend\\src\\components\\FeaturesBox.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\Header.js",["753"],"E:\\PFE-test\\frontend\\src\\components\\SearchBox.js",["754"],"E:\\PFE-test\\frontend\\src\\screens\\Dashboard.js",["755","756","757","758","759","760","761","762","763","764","765","766","767"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Loader from \"../components/Loader\";\r\nimport OrderListScreen from \"./OrderListScreen\";\r\nimport Orders from \"../components/Orders\";\r\nimport Users from \"../components/Users\";\r\nimport ProductList from \"../components/ProductsList\";\r\nimport NameCustomComponent from \"../components/NameCustomComponent \";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport ProfileAdmin from \"../components/ProfileAdmin\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst drawerComponents = {\r\n  Orders: { icon: <DescriptionIcon />, component: <Orders /> },\r\n  Users: { icon: <PeopleIcon />, component: <Users /> },\r\n  Products: { icon: <ShoppingCartIcon />, component: <ProductList /> },\r\n  Trainees: { icon: <AccountCircleIcon />, component: <ProfileAdmin /> },\r\n};\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ColorDrawer = withStyles((theme) => ({\r\n  paper: {\r\n    color: \"white\",\r\n    backgroundColor: \"red\",\r\n  },\r\n}))(Drawer);\r\n\r\nexport default function Dashboard({ history }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [drawerText, setDrawerText] = useState(\"Orders\");\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDrawerCompent = (text) => {\r\n    setDrawerText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar className=\"dashboard-style\">\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, {\r\n                [classes.hide]: open,\r\n              })}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap className=\"h-white\">\r\n              Dashboard\r\n            </Typography>\r\n            <Avatar style={{ backgroundColor: \"green\" }}>\r\n              {\" \"}\r\n              {userInfo.name[0]}\r\n            </Avatar>\r\n            {userInfo ? (\r\n              <NavDropdown title={userInfo.name} id=\"username\">\r\n                {/* <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer> */}\r\n\r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <ColorDrawer\r\n          className=\"drawer-style\"\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronRightIcon />\r\n              ) : (\r\n                <ChevronLeftIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {Object.keys(drawerComponents).map((drawerComponentKey) => (\r\n              <ListItem\r\n                button\r\n                key={drawerComponentKey}\r\n                onClick={() => handleDrawerCompent(drawerComponentKey)}\r\n              >\r\n                <ListItemIcon>\r\n                  {drawerComponents[drawerComponentKey].icon}\r\n                </ListItemIcon>\r\n                <ListItemText primary={drawerComponentKey} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n        </ColorDrawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {drawerComponents[drawerText].component}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\PFE-test\\frontend\\src\\components\\Orders.jsx",["768","769","770"],"E:\\PFE-test\\frontend\\src\\components\\NameCustomComponent .jsx",[],"E:\\PFE-test\\frontend\\src\\components\\Users.jsx",["771","772","773","774","775","776","777","778","779","780","781","782","783"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NameCustomComponent from \"../components/NameCustomComponent \";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TraineeDetails from \"./TraineeDetails\";\r\n\r\nexport const Users = (history) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: errorDetails, loading: loadingDetails, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShowClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n      console.log(\"useeffect:\", userList[\"users\"]);\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  useEffect(() => {\r\n    {\r\n      console.log(\"useeffect2\");\r\n    }\r\n\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      dispatch(listUsers());\r\n    } else {\r\n      if (!user.name || user._id !== Number(userId)) {\r\n        // dispatch(getUserDetails(16))\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [userId, successUpdate]);\r\n\r\n  useEffect(() => {\r\n    setName(user.name);\r\n    setEmail(user.email);\r\n    setIsAdmin(user.isAdmin);\r\n  }, [user]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setOpen(false);\r\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\r\n  };\r\n\r\n  const handleShowCloseDelete = () => {\r\n    setShow(false);\r\n    dispatch(deleteUser(userId));\r\n  };\r\n\r\n  // console.log(orderList[\"orders\"])\r\n\r\n  // console.log('data',data)\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      field: \"_id\",\r\n    },\r\n\r\n    {\r\n      title: \"Name\",\r\n      field: \"username\",\r\n      render: (row) => <NameCustomComponent name={row.name} />,\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n    },\r\n\r\n    {\r\n      title: \"Admin\",\r\n      field: \"isAdmin\",\r\n      render: (row) =>\r\n        row.isAdmin ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ backgroundColor: \"#357a38\" }}\r\n          >\r\n            Admin\r\n          </Button>\r\n        ) : (\r\n          <Button variant=\"contained\" color=\"secondary\">\r\n            User\r\n          </Button>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleShowClose} className=\"mt-5\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title style={{ color: \"white\" }}>\r\n            Delete User{\" \"}\r\n            <i\r\n              style={{ color: \"#ff7676\" }}\r\n              class=\"fas fa-exclamation-triangle\"\r\n            ></i>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure , you want to delete this user !</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleShowClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={handleShowCloseDelete}\r\n            style={{ backgroundColor: \"red\", color: \"white\" }}\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <MaterialTable\r\n          title=\"Material Table\"\r\n          style={{ color: \"black\" }}\r\n          title=\"All Users\"\r\n          data={users}\r\n          columns={columns}\r\n          detailPanel={[\r\n            {\r\n              tooltip: \"Show Name\",\r\n              render: (rowData) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      fontSize: 12,\r\n                      textAlign: \"center\",\r\n                      color: \"#000000\",\r\n                      backgroundColor: \"#ffffff\",\r\n                    }}\r\n                  >\r\n                    <TraineeDetails id={rowData._id} />\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n          ]}\r\n          actions={[\r\n            (rowData) => ({\r\n              icon: \"edit\",\r\n              tooltip: \"Edit User\",\r\n              onClick: () => {\r\n                console.log(\"user id : \", rowData._id);\r\n                dispatch(getUserDetails(rowData._id));\r\n                setUserId(rowData._id);\r\n                console.log(\"rowData : \", rowData._id);\r\n                setOpen(true);\r\n              },\r\n            }),\r\n            (rowData) => ({\r\n              icon: \"delete\",\r\n              tooltip: \"Delete User\",\r\n              onClick: () => {\r\n                setUserId(rowData._id);\r\n                setShow(true);\r\n              },\r\n              disabled: rowData.isAdmin == true,\r\n            }),\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            exportButton: true,\r\n            actionsColumnIndex: -1,\r\n            addRowPosition: \"first\",\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <Dialog\r\n        className=\"col-md-12\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle\r\n          className=\"col-md-12\"\r\n          id=\"form-dialog-title\"\r\n          style={{ backgroundColor: \"black\" }}\r\n        >\r\n          Edit User\r\n        </DialogTitle>\r\n        <DialogContent className=\"col-md-12\">\r\n          {/* <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  type=\"email\"\r\n                  fullWidth\r\n                /> */}\r\n          <div className=\"col-md-12\">\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n              <Form className=\"col-md-12\">\r\n                <Form.Group controlId=\"name\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"isadmin\">\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Is Admin\"\r\n                    checked={isAdmin}\r\n                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                  ></Form.Check>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={submitHandler} color=\"primary\" variant=\"raised\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default Users;\r\n","E:\\PFE-test\\frontend\\src\\components\\ProductsList.jsx",["784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NameCustomComponent from \"./NameCustomComponent \";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n  listProductDetails,\r\n  updateProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\nimport FormProductEdit from \"./FormProductEdit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nexport const ProductsList = ({ history, match }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const {\r\n    error: errorDetails,\r\n    loading: loadingDetails,\r\n    product,\r\n  } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const [productId, setProductId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(listProducts());\r\n\r\n      console.log(\"updated\");\r\n      // history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== Number(productId)) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n      }\r\n    }\r\n\r\n    console.log(\"useeffect 1\");\r\n  }, [dispatch, productId, history, successUpdate]);\r\n\r\n  useEffect(() => {\r\n    setName(product.name);\r\n    setPrice(product.price);\r\n    setImage(product.image);\r\n    setBrand(product.brand);\r\n    setCategory(product.category);\r\n    setCountInStock(product.countInStock);\r\n    setDescription(product.description);\r\n    console.log(\"rerender dispatch \");\r\n  }, [product]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", file);\r\n    formData.append(\"product_id\", productId);\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/products/upload/\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      setProductId(createdProduct._id);\r\n      setOpen(true);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n  ]);\r\n\r\n  // let keyword = history.location.search\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listProducts());\r\n      console.log(\"useeffect:\", productList[\"products\"]);\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, successDelete, userInfo]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    dispatch(createProduct());\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseChange = () => {\r\n    setOpen(false);\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShowClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleShowCloseDelete = () => {\r\n    setShow(false);\r\n    dispatch(deleteProduct(productId));\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      field: \"_id\",\r\n    },\r\n\r\n    {\r\n      title: \"Name\",\r\n      field: \"name\",\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      field: \"price\",\r\n    },\r\n    {\r\n      title: \"Left\",\r\n      field: \"countInStock\",\r\n    },\r\n\r\n    {\r\n      title: \"Preview\",\r\n      field: \"image\",\r\n      render: (row) => <img src={row.image} style={{ height: \"50px\" }}></img>,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleShowClose} className=\"mt-5\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Delete Product{\" \"}\r\n            <i\r\n              style={{ color: \"#ff7676\" }}\r\n              class=\"fas fa-exclamation-triangle\"\r\n            ></i>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure , you want to delete this Product !\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleShowClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={handleShowCloseDelete}\r\n            style={{ backgroundColor: \"red\", color: \"white\" }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Button variant=\"fab\" color=\"primary\" mini onClick={handleClickOpen}>\r\n            <Icon style={{ fontSize: 40 }} color=\"primary\">\r\n              add_circle\r\n            </Icon>\r\n          </Button>\r\n          {/* <FormAddProduct/> */}\r\n          {/* <Button variant='fab' color='primary' mini onClick={handleClickOpen}>\r\n            <Icon style={{ fontSize: 40 }} color=\"primary\">add_circle</Icon>\r\n\r\n        </Button> */}\r\n          <MaterialTable\r\n            title=\"Material Table\"\r\n            title=\"All Products\"\r\n            data={productList[\"products\"]}\r\n            columns={columns}\r\n            actions={[\r\n              (rowData) => ({\r\n                icon: \"edit\",\r\n                tooltip: \"Edit User\",\r\n                onClick: () => {\r\n                  console.log(rowData._id);\r\n                  setProductId(rowData._id);\r\n                  setOpen(true);\r\n                },\r\n              }),\r\n              (rowData) => ({\r\n                icon: \"delete\",\r\n                tooltip: \"Delete User\",\r\n                onClick: () => {\r\n                  setShow(true);\r\n                  console.log(\"rowdata : \", rowData._id);\r\n                  let id;\r\n                  setProductId(rowData._id);\r\n                  //   setProductId((prevState) => {\r\n\r\n                  //       return rowData._id\r\n                  //   })\r\n                  console.log(\"product id : \", productId);\r\n\r\n                  //   if (\r\n                  //     window.confirm(\r\n                  //       \"Are you sure you want to delete this Product?\"\r\n                  //     )\r\n                  //   ) {\r\n                  //     dispatch(deleteProduct(rowData._id));\r\n                  //     console.log(rowData._id);\r\n                  //   }\r\n                },\r\n                disabled: rowData.isAdmin == true,\r\n              }),\r\n            ]}\r\n            options={{\r\n              filtering: true,\r\n              exportButton: true,\r\n              actionsColumnIndex: -1,\r\n              addRowPosition: \"first\",\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        {console.log(\"dialog open \", open)}\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          {/* <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  type=\"email\"\r\n                  fullWidth\r\n                /> */}\r\n          <FormContainer>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : errorDetails ? (\r\n              <Message variant=\"danger\">{errorDetails}</Message>\r\n            ) : (\r\n              <Form>\r\n                <Form.Group controlId=\"name\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"price\">\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"Enter price\"\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"image\">\r\n                  <Form.Label>Image</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter image\"\r\n                    value={image}\r\n                    onChange={(e) => setImage(e.target.value)}\r\n                  ></Form.Control>\r\n\r\n                  <Form.File\r\n                    id=\"image-file\"\r\n                    label=\"Choose File\"\r\n                    custom\r\n                    onChange={uploadFileHandler}\r\n                  ></Form.File>\r\n                  {uploading && <Loader />}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"brand\">\r\n                  <Form.Label>Brand</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter brand\"\r\n                    value={brand}\r\n                    onChange={(e) => setBrand(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"countinstock\">\r\n                  <Form.Label>Stock</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"Enter stock\"\r\n                    value={countInStock}\r\n                    onChange={(e) => setCountInStock(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"category\">\r\n                  <Form.Label>Category</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter category\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"description\">\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter description\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </FormContainer>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCloseChange} color=\"primary\" variant=\"raised\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductsList;\r\n","E:\\PFE-test\\frontend\\src\\components\\employeeService.js",[],"E:\\PFE-test\\frontend\\src\\components\\PageHeader.js",["807"],"E:\\PFE-test\\frontend\\src\\components\\FormProductEdit.jsx",["808","809","810","811","812"],"import React,{useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Paper } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle'; \r\nimport Button from '@material-ui/core/Button';\r\nimport { Fragment } from 'react';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nfunction FormProductEdit({show}) {\r\n\r\n    const [open, setOpen] = React.useState(true);\r\n    console.log('showww',open)\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n        <Button variant='fab' color='primary' mini onClick={handleClickOpen}>\r\n            <Icon style={{ fontSize: 40 }} color=\"primary\">add_circle</Icon>\r\n\r\n        </Button>\r\n\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" variant='raised'>\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>   \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FormProductEdit\r\n","E:\\PFE-test\\frontend\\src\\components\\ProfileAdmin.jsx",["813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829"],"import React,{useState,useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Row, Col, Table , Container } from 'react-bootstrap'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ProfileAdmin({history}) {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { error, loading, user } = userDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n        history.push('/login')\r\n    } else {\r\n        if (!user || !user.name || success || userInfo._id !== user._id) {\r\n            dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n            dispatch(getUserDetails('profile'))\r\n        } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n    }\r\n}, [dispatch, history, userInfo, user, success])\r\n\r\nconst submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password != confirmPassword) {\r\n        setMessage('Passwords do not match')\r\n    } else {\r\n        dispatch(updateUserProfile({\r\n            'id': user._id,\r\n            'name': name,\r\n            'email': email,\r\n            'password': password\r\n        }))\r\n        setMessage('')\r\n        dispatch(getUserDetails('profile'))\r\n    }\r\n\r\n}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={3} >\r\n        <Row className=\"justify-content-center\">\r\n        <Col md={4} className=\"text-center justify-content-center\">\r\n        \r\n                <h2 style={{color : 'black'}}>User Profile</h2>\r\n                <Avatar style={{backgroundColor:\"green\"}} md=\"3\" style={{marginLeft : '45%' , backgroundColor:'green',height:'50px',width:'50px'}}> {userInfo.name[0]}</Avatar>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name' >\r\n                        <Form.Label >Name</Form.Label>\r\n                        <Form.Control\r\n                            size='lg'\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                          \r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            size='lg'\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            size='lg'\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            size='lg'\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant=\"contained\" color=\"primary\"  size=\"large\"  startIcon={<SaveIcon />}>\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n\r\n        \r\n        \r\n     \r\n      </Paper>\r\n    </div>\r\n  );\r\n}","E:\\PFE-test\\frontend\\src\\components\\PersonalInfo.jsx",["830","831"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { traineeInfo } from \"../actions/userActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport \"date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicButtonGroup() {\r\n  const classes = useStyles();\r\n  const [sex, setSex] = React.useState(\"btn1\");\r\n\r\n  const btns = [\"Male\", \"Female\", \"Other\"];\r\n\r\n  const [birthDate, setBirthDate] = useState(new Date(\"2014-08-18T21:11:54\"));\r\n\r\n  const [height, setHeight] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [weightGoal, setWeightGoal] = useState(\"\");\r\n\r\n  const handleDateChange = (date) => {\r\n    setBirthDate(date);\r\n  };\r\n  const UserTrainee = useSelector((state) => state.UserTrainee);\r\n  const { trainee } = UserTrainee;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(\r\n      traineeInfo({ ...trainee, height, weight, weightGoal, birthDate, sex })\r\n    );\r\n  }, [height, weight, weightGoal, birthDate, sex]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      Sex :\r\n      <ButtonGroup\r\n        color=\"primary\"\r\n        label=\"sex\"\r\n        aria-label=\"outlined primary button group\"\r\n      >\r\n        {btns.map((btn) => (\r\n          <Button\r\n            onClick={() => setSex(btn)}\r\n            variant={btn === sex ? \"contained\" : \"outlined\"}\r\n          >\r\n            {btn}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container justify=\"space-around\">\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"MM/dd/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"Date picker inline\"\r\n            value={birthDate}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </MuiPickersUtilsProvider>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          className=\"h-white\"\r\n          id=\"standard-basic\"\r\n          label=\"height\"\r\n          value={height}\r\n          onChange={(e) => {\r\n            setHeight(e.target.value);\r\n          }}\r\n        />\r\n        cm\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"weight\"\r\n          value={weight}\r\n          onChange={(e) => {\r\n            setWeight(e.target.value);\r\n          }}\r\n        />\r\n        Kg\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"weight Goal\"\r\n          value={weightGoal}\r\n          onChange={(e) => {\r\n            setWeightGoal(e.target.value);\r\n          }}\r\n        />\r\n        Kg\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","E:\\PFE-test\\frontend\\src\\components\\Activities.jsx",["832","833"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { traineeInfo } from \"../actions/userActions\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: \"50%\",\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow:\r\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n    backgroundColor: \"#f5f8fa\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n    \"$root.Mui-focusVisible &\": {\r\n      outline: \"2px auto rgba(19,124,189,.6)\",\r\n      outlineOffset: 2,\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n    \"input:disabled ~ &\": {\r\n      boxShadow: \"none\",\r\n      background: \"rgba(206,217,224,.5)\",\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: \"#137cbd\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage: \"radial-gradient(#fff,#fff 28%,transparent 32%)\",\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n});\r\n\r\n// Inspired by blueprintjs\r\nfunction StyledRadio(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Radio\r\n      className={classes.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n      icon={<span className={classes.icon} />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function Activities() {\r\n  const [activitie, setActivitie] = React.useState(\"Lightly Active\");\r\n\r\n  const UserTrainee = useSelector((state) => state.UserTrainee);\r\n  const { trainee } = UserTrainee;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(traineeInfo({ ...trainee, activitie }));\r\n  }, [activitie]);\r\n\r\n  console.log(activitie);\r\n  const handleRadioChange = (event) => {\r\n    setActivitie(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">How Are You ?</FormLabel>\r\n      <RadioGroup\r\n        onChange={handleRadioChange}\r\n        defaultValue={activitie}\r\n        aria-label=\"gender\"\r\n        name=\"customized-radios\"\r\n      >\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Sedentary\"\r\n            control={<StyledRadio />}\r\n            label=\"Sedentary\"\r\n          />\r\n          <p className=\"text-radio\">\r\n            Work a desk job and do very little exercise or housework\r\n          </p>\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Lightly Active\"\r\n            control={<StyledRadio />}\r\n            label=\"Lightly Active\"\r\n          />\r\n          <p className=\"text-radio\">Exercise 3x a week </p>\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Moderately Active\"\r\n            control={<StyledRadio />}\r\n            label=\"Moderately Active\"\r\n          />\r\n          <p className=\"text-radio\">Exercise 4-5x per week </p>\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Very Active\"\r\n            control={<StyledRadio />}\r\n            label=\"Very Active\"\r\n          />\r\n          <p className=\"text-radio\">Exercise 6-7x per week </p>\r\n        </div>\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","E:\\PFE-test\\frontend\\src\\components\\Consultation.jsx",["834","835","836","837","838","839","840"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { traineeInfo } from \"../actions/userActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: \"50%\",\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow:\r\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n    backgroundColor: \"#f5f8fa\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n    \"$root.Mui-focusVisible &\": {\r\n      outline: \"2px auto rgba(19,124,189,.6)\",\r\n      outlineOffset: 2,\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n    \"input:disabled ~ &\": {\r\n      boxShadow: \"none\",\r\n      background: \"rgba(206,217,224,.5)\",\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: \"#137cbd\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage: \"radial-gradient(#fff,#fff 28%,transparent 32%)\",\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n}));\r\n\r\n// Inspired by blueprintjs\r\nfunction StyledRadio(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Radio\r\n      className={classes.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n      icon={<span className={classes.icon} />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function Consultation() {\r\n  const classes = useStyles();\r\n  const [objective, setObjective] = React.useState(\"Gain Muscles\");\r\n  const [experience, setExperience] = React.useState(\"yes\");\r\n\r\n  const UserTrainee = useSelector((state) => state.UserTrainee);\r\n  const { trainee } = UserTrainee;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(traineeInfo({ ...trainee, objective, experience }));\r\n  }, [objective, experience]);\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">How Are You ?</FormLabel>\r\n      <RadioGroup\r\n        onChange={(e) => {\r\n          setObjective(e.target.value);\r\n        }}\r\n        defaultValue={objective}\r\n        aria-label=\"objectif\"\r\n        name=\"customized-radios\"\r\n      >\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Gain Muscles\"\r\n            control={<StyledRadio />}\r\n            label=\"Gain Muscles\"\r\n          />\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Health (General)\"\r\n            control={<StyledRadio />}\r\n            label=\"Health (General)\"\r\n          />\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Muscular strength/power\"\r\n            control={<StyledRadio />}\r\n            label=\"Muscular strength/power\"\r\n          />\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Weight loss\"\r\n            control={<StyledRadio />}\r\n            label=\"Weight loss\"\r\n          />\r\n        </div>\r\n      </RadioGroup>\r\n\r\n      <h4>Do you have experience with exercise ?</h4>\r\n      <div class=\"select\">\r\n        <select\r\n          name=\"slct\"\r\n          id=\"slct\"\r\n          onChange={(e) => {\r\n            setExperience(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"yes\">Yes</option>\r\n          <option value=\"no\">No</option>\r\n        </select>\r\n      </div>\r\n    </FormControl>\r\n  );\r\n}\r\n","E:\\PFE-test\\frontend\\src\\components\\TrainingPlan.jsx",["841"],"E:\\PFE-test\\frontend\\src\\components\\TraineeDetails.jsx",["842","843","844","845","846"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Form, Modal, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getTraineeInfo } from \"../actions/userActions\";\r\nfunction TraineeDetails({ id }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const traineeInfo = useSelector((state) => state.traineeInfo);\r\n  const { loading, success, error, personelInfo } = traineeInfo;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [height, setHeight] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [weightGoal, setWeightGoal] = useState(\"\");\r\n  const [birthDate, setBirthDate] = useState(\"\");\r\n  const [sex, setSex] = useState(\"\");\r\n  const [activitie, setActivitie] = useState(\"\");\r\n  const [objective, setObjective] = useState(\"\");\r\n  const [experience, setExperience] = useState(\"\");\r\n  const [equipement, setEquipement] = useState(\"\");\r\n  const [days, setDays] = useState(\"\");\r\n  const [healthIssues, setHealthIssues] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getTraineeInfo(id));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (traineeInfo !== undefined) {\r\n      try {\r\n        console.log(\"personelInfo : \", personelInfo);\r\n        setName(personelInfo.first_name);\r\n        setEmail(personelInfo.email);\r\n        setHeight(personelInfo[\"userProfile\"].height);\r\n        setWeight(personelInfo[\"userProfile\"].weight);\r\n        setWeightGoal(personelInfo[\"userProfile\"].weightGoal);\r\n        setBirthDate(personelInfo[\"userProfile\"].birthDate);\r\n        setSex(personelInfo[\"userProfile\"].sex);\r\n        setActivitie(personelInfo[\"userProfile\"].activitie);\r\n        setObjective(personelInfo[\"userProfile\"].objective);\r\n        setExperience(personelInfo[\"userProfile\"].experience);\r\n        setEquipement(personelInfo[\"userProfile\"].equipement);\r\n        setHealthIssues(personelInfo[\"userProfile\"].healthIssues);\r\n        setDays(personelInfo[\"userProfile\"].days);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [success]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Personal Info :</h1>\r\n      <Form className=\"pb-5 justify-content-md-center\">\r\n        <Row className=\"col-md-6 justify-content-md-center\">\r\n          <Col>\r\n            <Form.Label>Name : </Form.Label>\r\n            <Form.Control\r\n              className=\"justify-content-md-center\"\r\n              value={name}\r\n              readOnly\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Form.Label>Email address : </Form.Label>\r\n            <Form.Control\r\n              className=\"justify-content-md-center\"\r\n              value={email}\r\n              readOnly\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"col-md-6 justify-content-md-center\">\r\n          <Col>\r\n            <Form.Label>Height : </Form.Label>\r\n            <Form.Control\r\n              readOnly\r\n              className=\"justify-content-md-center\"\r\n              value={height}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Form.Label>Weight : </Form.Label>\r\n            <Form.Control\r\n              className=\"justify-content-md-center\"\r\n              value={weight}\r\n              readOnly\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"col-md-3 justify-content-md-center\">\r\n          <Col>\r\n            <Form.Label>Weight Goal : </Form.Label>\r\n            <Form.Control\r\n              className=\"justify-content-md-center\"\r\n              value={weightGoal}\r\n              readOnly\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"col-md-6 justify-content-md-center\">\r\n          <Col className=\"col-md-4\">\r\n            <Form.Label>Birthdate : </Form.Label>\r\n            <Form.Control\r\n              className=\"justify-content-md-center\"\r\n              value={birthDate}\r\n              readOnly\r\n            />\r\n          </Col>\r\n          <Col className=\"col-md-2\">\r\n            <Form.Label>Sex : </Form.Label>\r\n            <Form.Control\r\n              className=\"justify-content-md-center\"\r\n              value={sex}\r\n              readOnly\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"col-md-6 justify-content-md-center\">\r\n          <Col>\r\n            <Form.Label>Activitie : </Form.Label>\r\n            <Form.Control\r\n              className=\"justify-content-md-center\"\r\n              value={activitie}\r\n              readOnly\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Form.Label>Experience : </Form.Label>\r\n            <Form.Control\r\n              className=\"justify-content-md-center\"\r\n              value={experience}\r\n              readOnly\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"col-md-6 justify-content-md-center\">\r\n          <Col className=\"col-md-4\">\r\n            <Form.Label>Equipement : </Form.Label>\r\n            <Form.Control\r\n              className=\"justify-content-md-center\"\r\n              value={equipement}\r\n              readOnly\r\n            />\r\n          </Col>\r\n          <Col className=\"col-md-2\">\r\n            <Form.Label>Days : </Form.Label>\r\n            <Form.Control\r\n              className=\"justify-content-md-center\"\r\n              value={days}\r\n              readOnly\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"col-md-6 justify-content-md-center\">\r\n          <Col className=\"col-md-6\">\r\n            <Form.Label>Objective : </Form.Label>\r\n            <Form.Control\r\n              placeholder=\"Enter Objective\"\r\n              className=\"justify-content-md-center\"\r\n              value={objective}\r\n              onChange={(e) => setObjective(e.target.value)}\r\n              readOnly\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"col-md-6 justify-content-md-center\">\r\n          <Col className=\"col-md-5\">\r\n            <Form.Label>Health Issues : </Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              aria-label=\"With textarea\"\r\n              value={healthIssues}\r\n              readOnly\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TraineeDetails;\r\n","E:\\PFE-test\\frontend\\src\\screens\\TraineeScreen.jsx",["847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873"],"import React, { useState, useEffect } from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTraineeInfo, updateTraineProfile } from \"../actions/userActions\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport styled from \"styled-components\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport Side from \"../components/Side\";\r\nimport TraineeOrder from \"./traineeOrderScreen\";\r\nimport NavbarTrainee from \"../components/NavbarTrainee\";\r\nimport { Form, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport profilIcon from \"../assets/profilIcon.svg\";\r\nimport resume from \"../assets/resume.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction TraineeScreen() {\r\n  const classes = useStyles();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: errorUser, loading: loadingUser, user } = userDetails;\r\n\r\n  const traineeInfo = useSelector((state) => state.traineeInfo);\r\n  const { loading, success, error, personelInfo } = traineeInfo;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [height, setHeight] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [weightGoal, setWeightGoal] = useState(\"\");\r\n  const [birthDate, setBirthDate] = useState(\"\");\r\n  const [sex, setSex] = useState(\"\");\r\n  const [activitie, setActivitie] = useState(\"\");\r\n  const [experience, setExperience] = useState(\"\");\r\n  const [equipement, setEquipement] = useState(\"\");\r\n  const [days, setDays] = useState(\"\");\r\n  const [healthIssues, setHealthIssues] = useState(\"\");\r\n  const [objective, setObjective] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(getTraineeInfo(userInfo.id));\r\n    console.log(\"dispatched\");\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (traineeInfo !== undefined) {\r\n      try {\r\n        console.log(\"personelInfo : \", traineeInfo);\r\n        setName(personelInfo.first_name);\r\n        setEmail(personelInfo.email);\r\n        setHeight(personelInfo[\"userProfile\"].height);\r\n        setWeight(personelInfo[\"userProfile\"].weight);\r\n        setWeightGoal(personelInfo[\"userProfile\"].weightGoal);\r\n        setBirthDate(personelInfo[\"userProfile\"].birthDate);\r\n        setSex(personelInfo[\"userProfile\"].sex);\r\n        setActivitie(personelInfo[\"userProfile\"].activitie);\r\n        setExperience(personelInfo[\"userProfile\"].experience);\r\n        setEquipement(personelInfo[\"userProfile\"].equipement);\r\n        setHealthIssues(personelInfo[\"userProfile\"].healthIssues);\r\n        setDays(personelInfo[\"userProfile\"].days);\r\n        setObjective(personelInfo[\"userProfile\"].objective);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [success]);\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(\r\n      updateTraineProfile(\r\n        {\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n          height: height,\r\n          weight: weight,\r\n          weightGoal: weightGoal,\r\n          birthDate: birthDate,\r\n          sex: sex,\r\n          activitie: activitie,\r\n          experience: experience,\r\n          equipement: equipement,\r\n          days: days,\r\n          healthIssues: healthIssues,\r\n          objective: objective,\r\n        },\r\n        userInfo.id\r\n      )\r\n    );\r\n  };\r\n  console.log(\"printing info :\", {\r\n    name: name,\r\n    email: email,\r\n    password: password,\r\n    height: height,\r\n    weight: weight,\r\n    birthDate: birthDate,\r\n    sex: sex,\r\n    activitie: activitie,\r\n    experience: experience,\r\n    equipement: equipement,\r\n    days: days,\r\n    healthIssues: healthIssues,\r\n  });\r\n\r\n  return (\r\n    <div className=\"traineDash\">\r\n      <Row>\r\n        <Col className=\"col-md-2\">\r\n          <Side />\r\n        </Col>\r\n        <Col className=\"col-md-4 p-5 left\">\r\n          <Paper elevation={3}>\r\n            <Row className=\"justify-content-center\">\r\n              <Col md={10} className=\"text-center justify-content-center\">\r\n                <h2 className=\"h-black\">User Profile</h2>\r\n                <img\r\n                  src={profilIcon}\r\n                  alt=\"profileIcon\"\r\n                  style={{ height: \"70px\", weight: \"70px\" }}\r\n                />\r\n\r\n                {/* {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />} */}\r\n                <Form>\r\n                  <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      size=\"lg\"\r\n                      required\r\n                      type=\"name\"\r\n                      placeholder=\"Enter name\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                      size=\"lg\"\r\n                      required\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      size=\"lg\"\r\n                      type=\"password\"\r\n                      placeholder=\"Enter Password\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"passwordConfirm\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                      size=\"lg\"\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      value={confirmPassword}\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleUpdate}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Paper>\r\n        </Col>\r\n        <Col className=\"col-md-6   p-5 left\">\r\n          <Paper elevation={3}>\r\n            <Row className=\"justify-content-center text-center\">\r\n              <h2 className=\"h-black\">Personal Info :</h2>\r\n              <img\r\n                className=\"mb-2\"\r\n                src={resume}\r\n                alt=\"resume\"\r\n                style={{ height: \"70px\", weight: \"70px\" }}\r\n              />\r\n            </Row>\r\n            <Row className=\"col-md-12 justify-content-md-center\">\r\n              <Col>\r\n                <Form.Label>Height : </Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter Height\"\r\n                  // readOnly\r\n                  className=\"justify-content-md-center\"\r\n                  value={height}\r\n                  onChange={(e) => setHeight(e.target.value)}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Weight : </Form.Label>\r\n                <Form.Control\r\n                  className=\"justify-content-md-center\"\r\n                  placeholder=\"Enter Weight\"\r\n                  value={weight}\r\n                  onChange={(e) => setWeight(e.target.value)}\r\n                  // readOnly\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"col-md-6 justify-content-md-center\">\r\n              <Col>\r\n                <Form.Label>Weight Goal : </Form.Label>\r\n                <Form.Control\r\n                  className=\"justify-content-md-center\"\r\n                  placeholder=\"Enter Weight Goal\"\r\n                  value={weightGoal}\r\n                  onChange={(e) => setWeightGoal(e.target.value)}\r\n                  // readOnly\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"col-md-12 justify-content-md-center\">\r\n              <Col className=\"col-md-4\">\r\n                <Form.Label>Birthdate : </Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter Birthdate\"\r\n                  className=\"justify-content-md-center\"\r\n                  value={birthDate}\r\n                  onChange={(e) => setBirthDate(e.target.value)}\r\n                  // readOnly\r\n                />\r\n              </Col>\r\n              <Col className=\"col-md-2\">\r\n                <Form.Label>Sex : </Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter Sex\"\r\n                  className=\"justify-content-md-center\"\r\n                  value={sex}\r\n                  onChange={(e) => setSex(e.target.value)}\r\n                  // readOnly\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"col-md-12 justify-content-md-center\">\r\n              <Col>\r\n                <Form.Label>Activitie : </Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter Activitie\"\r\n                  className=\"justify-content-md-center\"\r\n                  value={activitie}\r\n                  onChange={(e) => setActivitie(e.target.value)}\r\n                  // readOnly\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Experience : </Form.Label>\r\n                <Form.Control\r\n                  className=\"justify-content-md-center\"\r\n                  placeholder=\"Enter Experience\"\r\n                  value={experience}\r\n                  onChange={(e) => setExperience(e.target.value)}\r\n                  // readOnly\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"col-md-12 justify-content-md-center\">\r\n              <Col className=\"col-md-4\">\r\n                <Form.Label>Equipement : </Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter Equipement\"\r\n                  className=\"justify-content-md-center\"\r\n                  value={equipement}\r\n                  onChange={(e) => setEquipement(e.target.value)}\r\n                  // readOnly\r\n                />\r\n              </Col>\r\n              <Col className=\"col-md-2\">\r\n                <Form.Label>Days : </Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter Days\"\r\n                  className=\"justify-content-md-center\"\r\n                  value={days}\r\n                  onChange={(e) => setDays(e.target.value)}\r\n                  // readOnly\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"col-md-12 justify-content-md-center\">\r\n              <Col className=\"col-md-6\">\r\n                <Form.Label>Objective : </Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Enter Objective\"\r\n                  className=\"justify-content-md-center\"\r\n                  value={objective}\r\n                  onChange={(e) => setObjective(e.target.value)}\r\n                  // readOnly\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"col-md-12 justify-content-md-center\">\r\n              <Col className=\"col-md-7\">\r\n                <Form.Label>Health Issues : </Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"write here\"\r\n                  as=\"textarea\"\r\n                  aria-label=\"With textarea\"\r\n                  value={healthIssues}\r\n                  onChange={(e) => setHealthIssues(e.target.value)}\r\n                  // readOnly\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Paper>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TraineeScreen;\r\n","E:\\PFE-test\\frontend\\src\\components\\SideBar.jsx",["874"],"import React, { useState } from \"react\";\r\nimport logo from \"../assets/logo.svg\";\r\nimport Home from \"../assets/home-solid.svg\";\r\nimport profil from \"../assets/profil.svg\";\r\nimport objectif from \"../assets/objectif.png\";\r\nimport progression from \"../assets/progression.svg\";\r\nimport Documents from \"../assets/draft.svg\";\r\nimport PowerOff from \"../assets/power-off-solid.svg\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  .active {\r\n    border-right: 4px solid var(--white);\r\n    img {\r\n      filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(93deg)\r\n        brightness(103%) contrast(103%);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: var(--black);\r\n  border: none;\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n  border-radius: 50%;\r\n  margin: 0.5rem 0 0 0.5rem;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  &::before,\r\n  &::after {\r\n    content: \"\";\r\n    background-color: var(--white);\r\n    height: 2px;\r\n    width: 1rem;\r\n    position: absolute;\r\n    transition: all 0.3s ease;\r\n  }\r\n  &::before {\r\n    top: ${(props) => (props.clicked ? \"1.5\" : \"1rem\")};\r\n    transform: ${(props) => (props.clicked ? \"rotate(135deg)\" : \"rotate(0)\")};\r\n  }\r\n  &::after {\r\n    top: ${(props) => (props.clicked ? \"1.2\" : \"1.5rem\")};\r\n    transform: ${(props) => (props.clicked ? \"rotate(-135deg)\" : \"rotate(0)\")};\r\n  }\r\n`;\r\n\r\nconst SidebarContainer = styled.div`\r\n  background-color: var(--black);\r\n  width: 3.5rem;\r\n  height: 80vh;\r\n  margin-top: 1rem;\r\n  border-radius: 0 30px 30px 0;\r\n  padding: 1rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  width: 2rem;\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst SlickBar = styled.ul`\r\n  color: var(--white);\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: var(--black);\r\n  padding: 2rem 0;\r\n  position: absolute;\r\n  top: 6rem;\r\n  left: 0;\r\n  width: ${(props) => (props.clicked ? \"12rem\" : \"3.5rem\")};\r\n  transition: all 0.5s ease;\r\n  border-radius: 0 30px 30px 0;\r\n`;\r\n\r\nconst Item = styled(NavLink)`\r\n  text-decoration: none;\r\n  color: var(--white);\r\n  width: 100%;\r\n  padding: 1rem 0;\r\n  cursor: pointer;\r\n  display: flex;\r\n  padding-left: 1rem;\r\n  &:hover {\r\n    border-right: 4px solid var(--white);\r\n    img {\r\n      filter: invert(100%) sepia(0%) saturate(0%) hue-rotate(93deg)\r\n        brightness(103%) contrast(103%);\r\n    }\r\n  }\r\n  img {\r\n    width: 1.2rem;\r\n    height: auto;\r\n    filter: invert(92%) sepia(4%) saturate(1033%) hue-rotate(169deg)\r\n      brightness(78%) contrast(85%);\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  width: ${(props) => (props.clicked ? \"100%\" : \"0\")};\r\n  overflow: hidden;\r\n  margin-left: ${(props) => (props.clicked ? \"1.5rem\" : \"0\")};\r\n  transition: all 0.3s ease;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  width: ${(props) => (props.clicked ? \"14rem\" : \"3rem\")};\r\n  height: 3rem;\r\n  padding: 0.5rem 1rem;\r\n  /* border: 2px solid var(--white); */\r\n  border-radius: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: ${(props) => (props.clicked ? \"9rem\" : \"0\")};\r\n  background-color: var(--black);\r\n  color: var(--white);\r\n  transition: all 0.3s ease;\r\n  img {\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    &:hover {\r\n      border: 2px solid var(--grey);\r\n      padding: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: ${(props) => (props.clicked ? \"flex\" : \"none\")};\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  padding: 0 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  h4 {\r\n    display: inline-block;\r\n  }\r\n  a {\r\n    font-size: 0.8rem;\r\n    text-decoration: none;\r\n    color: var(--grey);\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Logout = styled.button`\r\n  border: none;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background-color: transparent;\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n    filter: invert(15%) sepia(70%) saturate(6573%) hue-rotate(2deg)\r\n      brightness(100%) contrast(126%);\r\n    transition: all 0.3s ease;\r\n    &:hover {\r\n      border: none;\r\n      padding: 0;\r\n      opacity: 0.5;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SideBar = () => {\r\n  const [click, setClick] = useState(false);\r\n  const handleClick = () => setClick(!click);\r\n\r\n  const [profileClick, setprofileClick] = useState(false);\r\n  const handleProfileClick = () => setprofileClick(!profileClick);\r\n\r\n  return (\r\n    <Container>\r\n      <Button clicked={click} onClick={() => handleClick()}>\r\n        Click\r\n      </Button>\r\n      <SidebarContainer>\r\n        <Logo>\r\n          <img src={logo} alt=\"logo\" />\r\n        </Logo>\r\n        <SlickBar clicked={click}>\r\n          <Item\r\n            onClick={() => setClick(false)}\r\n            exact\r\n            activeClassName=\"active\"\r\n            to=\"/trainee\"\r\n          >\r\n            <img src={profil} alt=\"Profile\" />\r\n            <Text clicked={click}>Profile</Text>\r\n          </Item>\r\n          <Item\r\n            onClick={() => setClick(false)}\r\n            activeClassName=\"active\"\r\n            to=\"/trainee/objectif\"\r\n          >\r\n            <img src={objectif} alt=\"objectif\" />\r\n            <Text clicked={click}>Objectif</Text>\r\n          </Item>\r\n          <Item\r\n            onClick={() => setClick(false)}\r\n            activeClassName=\"active\"\r\n            to=\"/trainee/progress\"\r\n          >\r\n            <img src={progression} alt=\"Progres\" />\r\n            <Text clicked={click}>Progres</Text>\r\n          </Item>\r\n\r\n          <Item\r\n            onClick={() => setClick(false)}\r\n            activeClassName=\"active\"\r\n            to=\"/trainee/orders\"\r\n          >\r\n            <img src={Documents} alt=\"Orders\" />\r\n            <Text clicked={click}>Orders</Text>\r\n          </Item>\r\n        </SlickBar>\r\n\r\n        <Profile clicked={profileClick}>\r\n          <img\r\n            onClick={() => handleProfileClick()}\r\n            src=\"https://picsum.photos/200\"\r\n            alt=\"Profile\"\r\n          />\r\n          <Details clicked={profileClick}>\r\n            <Name>\r\n              <h4>Jhon&nbsp;Doe</h4>\r\n              <a href=\"/#\">view&nbsp;profile</a>\r\n            </Name>\r\n\r\n            <Logout>\r\n              <img src={PowerOff} alt=\"logout\" />\r\n            </Logout>\r\n          </Details>\r\n        </Profile>\r\n      </SidebarContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","E:\\PFE-test\\frontend\\src\\screens\\traineeOrderScreen.jsx",["875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894"],"E:\\PFE-test\\frontend\\src\\screens\\MotionHoc.js",[],["895","896"],"E:\\PFE-test\\frontend\\src\\components\\NavbarTrainee.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\SidebarData.js",[],"E:\\PFE-test\\frontend\\src\\screens\\ObjectifScreen.jsx",["897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932"],"E:\\PFE-test\\frontend\\src\\screens\\ProgressScreen.jsx",["933","934","935","936"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Side from \"../components/Side\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nfunction ProgressScreen() {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  const chart = () => {\r\n    let weight = [];\r\n    let date = [];\r\n    axios\r\n      .get(`/api/users/getweights/${userInfo.id}/`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        for (const dataObj of res.data) {\r\n          weight.push(parseInt(dataObj.weight));\r\n          date.push(moment(dataObj.date).format(\"DD MMM YYYY\"));\r\n        }\r\n        console.log(\"weight : \", weight);\r\n        console.log(\"date : \", date);\r\n        setChartData({\r\n          labels: date,\r\n          datasets: [\r\n            {\r\n              label: \"Trainee Weight\",\r\n              data: weight,\r\n              backgroundColor: [\"aqua\"],\r\n              borderwidth: 4,\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    chart();\r\n  }, []);\r\n  return (\r\n    <div className=\"traineDash\">\r\n      <Row>\r\n        <Col className=\"col-md-1\">\r\n          <Side />\r\n        </Col>\r\n        <Col className=\"col-md-10  p-5 center mt-5 \">\r\n          <h1 className=\"h-black text-center\"> Weight Progress</h1>\r\n          <div style={{ height: \"60%\", width: \"100%\" }}>\r\n            <Line\r\n              data={chartData}\r\n              options={{\r\n                responsive: true,\r\n                scales: {\r\n                  xAxes: [\r\n                    {\r\n                      type: \"time\",\r\n                      time: {\r\n                        format: \"DD/MM/YYY\",\r\n                        tooltipFormat: \"ll\",\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n                // scales: {\r\n                //   x: {\r\n                //     type: \"timeseries\",\r\n                //   },\r\n                // },\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressScreen;\r\n","E:\\PFE-test\\frontend\\src\\components\\Side.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\WeightDialog.jsx",["937","938","939","940","941","942","943","944","945","946","947"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTraineeInfo, updateTraineWeight } from \"../actions/userActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport {\r\n  InputGroup,\r\n  FormControl,\r\n  Button as RButton,\r\n  Spinner,\r\n  Form,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function WeightDialog({ setOpenWeight, openedWeight }) {\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: errorUser, loading: loadingUser, user } = userDetails;\r\n\r\n  const traineeInfo = useSelector((state) => state.traineeInfo);\r\n  const { loading, success, error, personelInfo } = traineeInfo;\r\n\r\n  // const [openWeight, setOpenWeight] = React.useState(openedWeight);\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [weightGoal, setWeightGoal] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(getTraineeInfo(userInfo.id));\r\n    console.log(\"dispatched\");\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (traineeInfo !== undefined) {\r\n      try {\r\n        console.log(\"personelInfo : \", traineeInfo);\r\n        setWeight(personelInfo[\"userProfile\"].weight);\r\n        setWeightGoal(personelInfo[\"userProfile\"].weightGoal);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [success]);\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  // const handleClickOpen = () => {\r\n  //   setOpenWeight(true);\r\n  // };\r\n\r\n  const handleClose = () => {\r\n    setOpenWeight(false);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(\r\n      updateTraineWeight(\r\n        {\r\n          weight: weight,\r\n          weightGoal: weightGoal,\r\n        },\r\n        userInfo.id\r\n      )\r\n    );\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    console.log(userInfo.token);\r\n    console.log(userInfo.id);\r\n\r\n    axios\r\n      .post(`/api/users/addweight/${userInfo.id}/`, { weight: weight }, config)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setOpenWeight(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {console.log(\"openWeight in dialog: \", openedWeight)}\r\n\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={openedWeight}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle\r\n          id=\"responsive-dialog-title\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          <p className=\"h-black \"> {\"Edit Weight\"} </p>\r\n        </DialogTitle>\r\n        <DialogContent className=\"text-center justify-content-center\">\r\n          <DialogContentText>\r\n            You can set your actual weight and your goal here\r\n          </DialogContentText>\r\n          <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>\r\n            weight\r\n          </Form.Label>\r\n          <InputGroup\r\n            className=\"mb-2 col-md-8 text-center\"\r\n            style={{ left: \"25%\" }}\r\n          >\r\n            <FormControl\r\n              id=\"inlineFormInputGroupUsername1\"\r\n              placeholder=\"your actual weight ...\"\r\n              value={weight}\r\n              onChange={(e) => setWeight(e.target.value)}\r\n            />\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text style={{ marginLeft: \"0\" }}>kg</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n          </InputGroup>\r\n          <p className=\"h-black mt-4 ml-2\">And</p>\r\n          <InputGroup\r\n            className=\"mb-2 col-md-8 text-center\"\r\n            style={{ left: \"25%\" }}\r\n          >\r\n            <FormControl\r\n              id=\"inlineFormInputGroupUsername2\"\r\n              placeholder=\"your goal weight ...\"\r\n              value={weightGoal}\r\n              onChange={(e) => setWeightGoal(e.target.value)}\r\n            />\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text style={{ marginLeft: \"0\" }}>kg</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n          </InputGroup>\r\n        </DialogContent>\r\n        <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={handleUpdate}\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\PFE-test\\frontend\\src\\components\\NutritionsDialog.jsx",["948","949","950","951","952","953","954","955","956","957","958","959"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTraineeInfo, updateTraineNutrition } from \"../actions/userActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport {\r\n  InputGroup,\r\n  FormControl,\r\n  Button as RButton,\r\n  Spinner,\r\n  Form,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function NutritionsDialog({\r\n  setOpenNutritions,\r\n  openedNutritions,\r\n}) {\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: errorUser, loading: loadingUser, user } = userDetails;\r\n\r\n  const traineeInfo = useSelector((state) => state.traineeInfo);\r\n  const { loading, success, error, personelInfo } = traineeInfo;\r\n\r\n  // const [openWeight, setOpenWeight] = React.useState(openedWeight);\r\n  const [calories, setCalories] = useState(\"\");\r\n  const [proteines, setProteines] = useState(\"\");\r\n  const [carbs, setCarbs] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(getTraineeInfo(userInfo.id));\r\n    console.log(\"dispatched\");\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (traineeInfo !== undefined) {\r\n      try {\r\n        console.log(\"personelInfo : \", personelInfo[\"userProfile\"]);\r\n        setCalories(personelInfo[\"userProfile\"].calories);\r\n        setProteines(personelInfo[\"userProfile\"].proteines);\r\n        setCarbs(personelInfo[\"userProfile\"].carbs);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [success]);\r\n\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const handleClose = () => {\r\n    setOpenNutritions(false);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(\r\n      updateTraineNutrition(\r\n        {\r\n          calories: calories,\r\n          proteines: proteines,\r\n          carbs: carbs,\r\n        },\r\n        userInfo.id\r\n      )\r\n    );\r\n    setOpenNutritions(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={openedNutritions}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle\r\n          id=\"responsive-dialog-title\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          <p className=\"h-black \"> {\"Edit Daily Nutritions\"} </p>\r\n        </DialogTitle>\r\n        <DialogContent className=\"text-center justify-content-center\">\r\n          <DialogContentText>\r\n            You can set your Daily Nutritions goals from here\r\n          </DialogContentText>\r\n          <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>\r\n            Nutritions\r\n          </Form.Label>\r\n          <InputGroup\r\n            className=\"mb-2 col-md-8 text-center\"\r\n            style={{ left: \"25%\" }}\r\n          >\r\n            <FormControl\r\n              value={calories}\r\n              onChange={(e) => {\r\n                setCalories(e.target.value);\r\n              }}\r\n              id=\"inlineFormInputGroupUsername1\"\r\n              placeholder=\"Calories goal ...\"\r\n            />\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text style={{ marginLeft: \"0\" }}>\r\n                Kcal\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n          </InputGroup>\r\n          <InputGroup\r\n            className=\"mb-2 col-md-8 text-center\"\r\n            style={{ left: \"25%\" }}\r\n          >\r\n            <FormControl\r\n              value={proteines}\r\n              onChange={(e) => {\r\n                setProteines(e.target.value);\r\n              }}\r\n              id=\"inlineFormInputGroupUsername2\"\r\n              placeholder=\"Protéine goal ...\"\r\n            />\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text style={{ marginLeft: \"0\" }}>g</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n          </InputGroup>\r\n          <InputGroup\r\n            className=\"mb-2 col-md-8 text-center\"\r\n            style={{ left: \"25%\" }}\r\n          >\r\n            <FormControl\r\n              value={carbs}\r\n              onChange={(e) => {\r\n                setCarbs(e.target.value);\r\n              }}\r\n              id=\"inlineFormInputGroupUsername3\"\r\n              placeholder=\"Carbs goal ...\"\r\n            />\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text style={{ marginLeft: \"0\" }}>g</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n          </InputGroup>\r\n        </DialogContent>\r\n        <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={handleUpdate}\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\PFE-test\\frontend\\src\\components\\FoodList.jsx",["960","961","962","963","964","965","966","967","968","969","970","971","972","973"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  InputGroup,\r\n  FormControl,\r\n  Button as RButton,\r\n  Spinner,\r\n  Form,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport diet from \"../assets/diet.svg\";\r\nimport { Progress } from \"antd\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nfunction FoodList({ calorie, carb, proteine, foodName, foodWeight }) {\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: errorUser, loading: loadingUser, user } = userDetails;\r\n\r\n  const traineeInfo = useSelector((state) => state.traineeInfo);\r\n  const { loading, success, error, personelInfo } = traineeInfo;\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"col-md-12 \">\r\n        <Col className=\"col-md-1\">\r\n          <img src={diet} alt=\"diet\" style={{ height: \"50px\" }} />\r\n        </Col>\r\n        <Col className=\"col-md-4 mt-1\">\r\n          <p\r\n            style={{\r\n              marginBottom: \"auto\",\r\n              color: \"#303133\",\r\n              fontSize: \"18px\",\r\n              textTransform: \"capitalize\",\r\n            }}\r\n          >\r\n            {foodName}\r\n          </p>\r\n          <p\r\n            style={{\r\n              color: \"#303333\",\r\n              fontSize: \"11px\",\r\n            }}\r\n          >\r\n            {foodWeight} g\r\n          </p>\r\n        </Col>\r\n\r\n        <Col className=\"col-md-1 progress50\">\r\n          <Progress\r\n            className=\"\"\r\n            style={{ height: \"50px\", weight: \"50px\" }}\r\n            type=\"circle\"\r\n            percent={99}\r\n            format={(percent) => `${calorie} Calories`}\r\n          />\r\n        </Col>\r\n        <Col className=\"col-md-1 progress50\">\r\n          <Progress\r\n            className=\"\"\r\n            style={{ height: \"50px\", weight: \"50px\" }}\r\n            type=\"circle\"\r\n            strokeColor=\"red\"\r\n            percent={99}\r\n            format={(percent) => `${proteine} Proteines`}\r\n          />\r\n        </Col>\r\n        <Col className=\"col-md-1 progress50\">\r\n          <Progress\r\n            className=\"\"\r\n            style={{ height: \"50px\", weight: \"50px\" }}\r\n            type=\"circle\"\r\n            strokeColor=\"black\"\r\n            percent={99}\r\n            format={(percent) => `${carb} Carbs`}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodList;\r\n",{"ruleId":"974","replacedBy":"975"},{"ruleId":"976","replacedBy":"977"},{"ruleId":"978","severity":1,"message":"979","line":1,"column":10,"nodeType":"980","messageId":"981","endLine":1,"endColumn":19},{"ruleId":"978","severity":1,"message":"982","line":3,"column":34,"nodeType":"980","messageId":"981","endLine":3,"endColumn":37},{"ruleId":"974","replacedBy":"983"},{"ruleId":"976","replacedBy":"984"},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"986","severity":1,"message":"987","line":12,"column":25,"nodeType":"988","endLine":12,"endColumn":37},{"ruleId":"986","severity":1,"message":"987","line":21,"column":37,"nodeType":"988","endLine":21,"endColumn":73},{"ruleId":"986","severity":1,"message":"987","line":22,"column":37,"nodeType":"988","endLine":22,"endColumn":73},{"ruleId":"986","severity":1,"message":"987","line":23,"column":37,"nodeType":"988","endLine":23,"endColumn":73},{"ruleId":"986","severity":1,"message":"987","line":24,"column":37,"nodeType":"988","endLine":24,"endColumn":73},{"ruleId":"986","severity":1,"message":"987","line":25,"column":37,"nodeType":"988","endLine":25,"endColumn":73},{"ruleId":"989","severity":1,"message":"990","line":142,"column":84,"nodeType":"991","messageId":"992","endLine":142,"endColumn":86},{"ruleId":"978","severity":1,"message":"993","line":1,"column":27,"nodeType":"980","messageId":"981","endLine":1,"endColumn":36},{"ruleId":"978","severity":1,"message":"994","line":2,"column":10,"nodeType":"980","messageId":"981","endLine":2,"endColumn":14},{"ruleId":"989","severity":1,"message":"995","line":53,"column":22,"nodeType":"991","messageId":"992","endLine":53,"endColumn":24},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"996","severity":1,"message":"997","line":35,"column":8,"nodeType":"998","endLine":35,"endColumn":26,"suggestions":"999"},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"996","severity":1,"message":"1000","line":43,"column":8,"nodeType":"998","endLine":43,"endColumn":46,"suggestions":"1001"},{"ruleId":"996","severity":1,"message":"1002","line":65,"column":8,"nodeType":"998","endLine":65,"endColumn":62,"suggestions":"1003"},{"ruleId":"978","severity":1,"message":"993","line":1,"column":27,"nodeType":"980","messageId":"981","endLine":1,"endColumn":36},{"ruleId":"989","severity":1,"message":"995","line":34,"column":22,"nodeType":"991","messageId":"992","endLine":34,"endColumn":24},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"978","severity":1,"message":"1004","line":2,"column":8,"nodeType":"980","messageId":"981","endLine":2,"endColumn":21},{"ruleId":"978","severity":1,"message":"1005","line":4,"column":8,"nodeType":"980","messageId":"981","endLine":4,"endColumn":23},{"ruleId":"978","severity":1,"message":"1006","line":13,"column":8,"nodeType":"980","messageId":"981","endLine":13,"endColumn":14},{"ruleId":"978","severity":1,"message":"1007","line":14,"column":8,"nodeType":"980","messageId":"981","endLine":14,"endColumn":14},{"ruleId":"978","severity":1,"message":"1008","line":16,"column":8,"nodeType":"980","messageId":"981","endLine":16,"endColumn":15},{"ruleId":"978","severity":1,"message":"1009","line":17,"column":17,"nodeType":"980","messageId":"981","endLine":17,"endColumn":22},{"ruleId":"978","severity":1,"message":"1010","line":84,"column":9,"nodeType":"980","messageId":"981","endLine":84,"endColumn":21},{"ruleId":"978","severity":1,"message":"1011","line":88,"column":9,"nodeType":"980","messageId":"981","endLine":88,"endColumn":22},{"ruleId":"978","severity":1,"message":"1012","line":92,"column":9,"nodeType":"980","messageId":"981","endLine":92,"endColumn":23},{"ruleId":"978","severity":1,"message":"1013","line":97,"column":9,"nodeType":"980","messageId":"981","endLine":97,"endColumn":20},{"ruleId":"978","severity":1,"message":"1014","line":101,"column":9,"nodeType":"980","messageId":"981","endLine":101,"endColumn":22},{"ruleId":"1015","severity":1,"message":"1016","line":251,"column":21,"nodeType":"988","endLine":251,"endColumn":41},{"ruleId":"1015","severity":1,"message":"1016","line":353,"column":21,"nodeType":"988","endLine":353,"endColumn":41},{"ruleId":"1015","severity":1,"message":"1016","line":356,"column":21,"nodeType":"988","endLine":356,"endColumn":41},{"ruleId":"1015","severity":1,"message":"1016","line":359,"column":21,"nodeType":"988","endLine":359,"endColumn":41},{"ruleId":"1015","severity":1,"message":"1016","line":362,"column":21,"nodeType":"988","endLine":362,"endColumn":41},{"ruleId":"978","severity":1,"message":"1017","line":21,"column":5,"nodeType":"980","messageId":"981","endLine":21,"endColumn":30},{"ruleId":"978","severity":1,"message":"1018","line":14,"column":5,"nodeType":"980","messageId":"981","endLine":14,"endColumn":20},{"ruleId":"978","severity":1,"message":"1019","line":19,"column":5,"nodeType":"980","messageId":"981","endLine":19,"endColumn":24},{"ruleId":"978","severity":1,"message":"1020","line":28,"column":5,"nodeType":"980","messageId":"981","endLine":28,"endColumn":24},{"ruleId":"978","severity":1,"message":"1021","line":117,"column":17,"nodeType":"980","messageId":"981","endLine":117,"endColumn":21},{"ruleId":"1022","severity":1,"message":"1023","line":57,"column":31,"nodeType":"1024","messageId":"1025","endLine":57,"endColumn":33},{"ruleId":"978","severity":1,"message":"1026","line":3,"column":9,"nodeType":"980","messageId":"981","endLine":3,"endColumn":20},{"ruleId":"1015","severity":1,"message":"1016","line":9,"column":13,"nodeType":"988","endLine":9,"endColumn":86},{"ruleId":"978","severity":1,"message":"985","line":1,"column":15,"nodeType":"980","messageId":"981","endLine":1,"endColumn":23},{"ruleId":"978","severity":1,"message":"1027","line":7,"column":11,"nodeType":"980","messageId":"981","endLine":7,"endColumn":30},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"978","severity":1,"message":"1028","line":4,"column":8,"nodeType":"980","messageId":"981","endLine":4,"endColumn":15},{"ruleId":"978","severity":1,"message":"1029","line":6,"column":10,"nodeType":"980","messageId":"981","endLine":6,"endColumn":16},{"ruleId":"996","severity":1,"message":"1030","line":31,"column":5,"nodeType":"998","endLine":31,"endColumn":13,"suggestions":"1031"},{"ruleId":"996","severity":1,"message":"1032","line":40,"column":7,"nodeType":"998","endLine":40,"endColumn":16,"suggestions":"1033"},{"ruleId":"986","severity":1,"message":"987","line":11,"column":21,"nodeType":"988","endLine":11,"endColumn":52},{"ruleId":"986","severity":1,"message":"987","line":10,"column":21,"nodeType":"988","endLine":10,"endColumn":52},{"ruleId":"978","severity":1,"message":"1034","line":7,"column":8,"nodeType":"980","messageId":"981","endLine":7,"endColumn":9},{"ruleId":"978","severity":1,"message":"1035","line":8,"column":8,"nodeType":"980","messageId":"981","endLine":8,"endColumn":14},{"ruleId":"974","replacedBy":"1036"},{"ruleId":"976","replacedBy":"1037"},{"ruleId":"978","severity":1,"message":"979","line":1,"column":10,"nodeType":"980","messageId":"981","endLine":1,"endColumn":19},{"ruleId":"978","severity":1,"message":"1038","line":2,"column":10,"nodeType":"980","messageId":"981","endLine":2,"endColumn":21},{"ruleId":"978","severity":1,"message":"1039","line":2,"column":23,"nodeType":"980","messageId":"981","endLine":2,"endColumn":34},{"ruleId":"978","severity":1,"message":"1040","line":5,"column":8,"nodeType":"980","messageId":"981","endLine":5,"endColumn":14},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"989","severity":1,"message":"990","line":158,"column":54,"nodeType":"991","messageId":"992","endLine":158,"endColumn":56},{"ruleId":"996","severity":1,"message":"1041","line":70,"column":6,"nodeType":"998","endLine":70,"endColumn":29,"suggestions":"1042"},{"ruleId":"989","severity":1,"message":"995","line":75,"column":18,"nodeType":"991","messageId":"992","endLine":75,"endColumn":20},{"ruleId":"978","severity":1,"message":"994","line":2,"column":10,"nodeType":"980","messageId":"981","endLine":2,"endColumn":14},{"ruleId":"989","severity":1,"message":"995","line":53,"column":22,"nodeType":"991","messageId":"992","endLine":53,"endColumn":24},{"ruleId":"978","severity":1,"message":"993","line":1,"column":27,"nodeType":"980","messageId":"981","endLine":1,"endColumn":36},{"ruleId":"978","severity":1,"message":"993","line":1,"column":27,"nodeType":"980","messageId":"981","endLine":1,"endColumn":36},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"996","severity":1,"message":"997","line":47,"column":6,"nodeType":"998","endLine":47,"endColumn":24,"suggestions":"1043"},{"ruleId":"996","severity":1,"message":"1002","line":65,"column":8,"nodeType":"998","endLine":65,"endColumn":62,"suggestions":"1044"},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"996","severity":1,"message":"1000","line":43,"column":8,"nodeType":"998","endLine":43,"endColumn":46,"suggestions":"1045"},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"986","severity":1,"message":"987","line":13,"column":17,"nodeType":"988","endLine":13,"endColumn":29},{"ruleId":"986","severity":1,"message":"987","line":25,"column":23,"nodeType":"988","endLine":25,"endColumn":59},{"ruleId":"986","severity":1,"message":"987","line":30,"column":23,"nodeType":"988","endLine":30,"endColumn":59},{"ruleId":"978","severity":1,"message":"1046","line":6,"column":10,"nodeType":"980","messageId":"981","endLine":6,"endColumn":16},{"ruleId":"978","severity":1,"message":"1047","line":6,"column":18,"nodeType":"980","messageId":"981","endLine":6,"endColumn":21},{"ruleId":"978","severity":1,"message":"979","line":6,"column":23,"nodeType":"980","messageId":"981","endLine":6,"endColumn":32},{"ruleId":"978","severity":1,"message":"982","line":6,"column":34,"nodeType":"980","messageId":"981","endLine":6,"endColumn":37},{"ruleId":"978","severity":1,"message":"1048","line":9,"column":8,"nodeType":"980","messageId":"981","endLine":9,"endColumn":17},{"ruleId":"978","severity":1,"message":"1004","line":2,"column":8,"nodeType":"980","messageId":"981","endLine":2,"endColumn":21},{"ruleId":"978","severity":1,"message":"1005","line":4,"column":8,"nodeType":"980","messageId":"981","endLine":4,"endColumn":23},{"ruleId":"978","severity":1,"message":"1006","line":13,"column":8,"nodeType":"980","messageId":"981","endLine":13,"endColumn":14},{"ruleId":"978","severity":1,"message":"1007","line":14,"column":8,"nodeType":"980","messageId":"981","endLine":14,"endColumn":14},{"ruleId":"978","severity":1,"message":"1008","line":16,"column":8,"nodeType":"980","messageId":"981","endLine":16,"endColumn":15},{"ruleId":"978","severity":1,"message":"1009","line":17,"column":18,"nodeType":"980","messageId":"981","endLine":17,"endColumn":23},{"ruleId":"978","severity":1,"message":"1010","line":83,"column":9,"nodeType":"980","messageId":"981","endLine":83,"endColumn":21},{"ruleId":"978","severity":1,"message":"1011","line":87,"column":9,"nodeType":"980","messageId":"981","endLine":87,"endColumn":22},{"ruleId":"978","severity":1,"message":"1012","line":91,"column":9,"nodeType":"980","messageId":"981","endLine":91,"endColumn":23},{"ruleId":"978","severity":1,"message":"1013","line":96,"column":9,"nodeType":"980","messageId":"981","endLine":96,"endColumn":20},{"ruleId":"978","severity":1,"message":"1014","line":100,"column":9,"nodeType":"980","messageId":"981","endLine":100,"endColumn":22},{"ruleId":"1015","severity":1,"message":"1016","line":250,"column":23,"nodeType":"988","endLine":250,"endColumn":43},{"ruleId":"1015","severity":1,"message":"1016","line":356,"column":21,"nodeType":"988","endLine":356,"endColumn":41},{"ruleId":"1015","severity":1,"message":"1016","line":359,"column":21,"nodeType":"988","endLine":359,"endColumn":41},{"ruleId":"1015","severity":1,"message":"1016","line":362,"column":21,"nodeType":"988","endLine":362,"endColumn":41},{"ruleId":"1015","severity":1,"message":"1016","line":365,"column":21,"nodeType":"988","endLine":365,"endColumn":41},{"ruleId":"1049","severity":1,"message":"1050","line":8,"column":45,"nodeType":"1051","endLine":8,"endColumn":66},{"ruleId":"978","severity":1,"message":"1018","line":14,"column":5,"nodeType":"980","messageId":"981","endLine":14,"endColumn":20},{"ruleId":"978","severity":1,"message":"1019","line":19,"column":5,"nodeType":"980","messageId":"981","endLine":19,"endColumn":24},{"ruleId":"978","severity":1,"message":"1020","line":28,"column":5,"nodeType":"980","messageId":"981","endLine":28,"endColumn":24},{"ruleId":"978","severity":1,"message":"1021","line":117,"column":17,"nodeType":"980","messageId":"981","endLine":117,"endColumn":21},{"ruleId":"978","severity":1,"message":"1017","line":17,"column":3,"nodeType":"980","messageId":"981","endLine":17,"endColumn":28},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"978","severity":1,"message":"1028","line":4,"column":8,"nodeType":"980","messageId":"981","endLine":4,"endColumn":15},{"ruleId":"978","severity":1,"message":"1029","line":6,"column":10,"nodeType":"980","messageId":"981","endLine":6,"endColumn":16},{"ruleId":"996","severity":1,"message":"1030","line":28,"column":6,"nodeType":"998","endLine":28,"endColumn":14,"suggestions":"1052"},{"ruleId":"996","severity":1,"message":"1032","line":37,"column":6,"nodeType":"998","endLine":37,"endColumn":15,"suggestions":"1053"},{"ruleId":"978","severity":1,"message":"985","line":1,"column":15,"nodeType":"980","messageId":"981","endLine":1,"endColumn":23},{"ruleId":"978","severity":1,"message":"1027","line":7,"column":11,"nodeType":"980","messageId":"981","endLine":7,"endColumn":30},{"ruleId":"986","severity":1,"message":"987","line":12,"column":11,"nodeType":"988","endLine":12,"endColumn":42},{"ruleId":"986","severity":1,"message":"987","line":11,"column":21,"nodeType":"988","endLine":11,"endColumn":52},{"ruleId":"978","severity":1,"message":"1026","line":3,"column":9,"nodeType":"980","messageId":"981","endLine":3,"endColumn":20},{"ruleId":"1015","severity":1,"message":"1016","line":9,"column":13,"nodeType":"988","endLine":9,"endColumn":86},{"ruleId":"978","severity":1,"message":"982","line":3,"column":34,"nodeType":"980","messageId":"981","endLine":3,"endColumn":37},{"ruleId":"978","severity":1,"message":"1029","line":2,"column":10,"nodeType":"980","messageId":"981","endLine":2,"endColumn":16},{"ruleId":"978","severity":1,"message":"1054","line":20,"column":8,"nodeType":"980","messageId":"981","endLine":20,"endColumn":17},{"ruleId":"978","severity":1,"message":"1055","line":21,"column":10,"nodeType":"980","messageId":"981","endLine":21,"endColumn":15},{"ruleId":"978","severity":1,"message":"1056","line":22,"column":8,"nodeType":"980","messageId":"981","endLine":22,"endColumn":16},{"ruleId":"978","severity":1,"message":"1057","line":26,"column":8,"nodeType":"980","messageId":"981","endLine":26,"endColumn":25},{"ruleId":"978","severity":1,"message":"1058","line":28,"column":8,"nodeType":"980","messageId":"981","endLine":28,"endColumn":14},{"ruleId":"978","severity":1,"message":"1059","line":29,"column":8,"nodeType":"980","messageId":"981","endLine":29,"endColumn":23},{"ruleId":"978","severity":1,"message":"1060","line":33,"column":8,"nodeType":"980","messageId":"981","endLine":33,"endColumn":27},{"ruleId":"978","severity":1,"message":"1046","line":35,"column":10,"nodeType":"980","messageId":"981","endLine":35,"endColumn":16},{"ruleId":"978","severity":1,"message":"1047","line":35,"column":18,"nodeType":"980","messageId":"981","endLine":35,"endColumn":21},{"ruleId":"978","severity":1,"message":"979","line":35,"column":23,"nodeType":"980","messageId":"981","endLine":35,"endColumn":32},{"ruleId":"978","severity":1,"message":"982","line":35,"column":34,"nodeType":"980","messageId":"981","endLine":35,"endColumn":37},{"ruleId":"978","severity":1,"message":"1061","line":36,"column":10,"nodeType":"980","messageId":"981","endLine":36,"endColumn":23},{"ruleId":"1049","severity":1,"message":"1050","line":193,"column":11,"nodeType":"1051","endLine":196,"endColumn":14},{"ruleId":"978","severity":1,"message":"1062","line":14,"column":27,"nodeType":"980","messageId":"981","endLine":14,"endColumn":33},{"ruleId":"996","severity":1,"message":"1063","line":32,"column":6,"nodeType":"998","endLine":32,"endColumn":35,"suggestions":"1064"},{"ruleId":"1049","severity":1,"message":"1050","line":96,"column":11,"nodeType":"1051","endLine":96,"endColumn":29},{"ruleId":"978","severity":1,"message":"1065","line":10,"column":8,"nodeType":"980","messageId":"981","endLine":10,"endColumn":17},{"ruleId":"978","severity":1,"message":"1066","line":14,"column":8,"nodeType":"980","messageId":"981","endLine":14,"endColumn":25},{"ruleId":"978","severity":1,"message":"1067","line":18,"column":8,"nodeType":"980","messageId":"981","endLine":18,"endColumn":21},{"ruleId":"978","severity":1,"message":"1068","line":19,"column":8,"nodeType":"980","messageId":"981","endLine":19,"endColumn":12},{"ruleId":"978","severity":1,"message":"1069","line":39,"column":18,"nodeType":"980","messageId":"981","endLine":39,"endColumn":30},{"ruleId":"978","severity":1,"message":"1070","line":39,"column":41,"nodeType":"980","messageId":"981","endLine":39,"endColumn":55},{"ruleId":"978","severity":1,"message":"1071","line":55,"column":9,"nodeType":"980","messageId":"981","endLine":55,"endColumn":19},{"ruleId":"996","severity":1,"message":"1072","line":64,"column":6,"nodeType":"998","endLine":64,"endColumn":50,"suggestions":"1073"},{"ruleId":"1074","severity":1,"message":"1075","line":67,"column":5,"nodeType":"1076","messageId":"1077","endLine":69,"endColumn":6},{"ruleId":"996","severity":1,"message":"1078","line":83,"column":6,"nodeType":"998","endLine":83,"endColumn":29,"suggestions":"1079"},{"ruleId":"978","severity":1,"message":"1080","line":91,"column":9,"nodeType":"980","messageId":"981","endLine":91,"endColumn":24},{"ruleId":"1049","severity":1,"message":"1050","line":185,"column":11,"nodeType":"1051","endLine":185,"endColumn":28},{"ruleId":"989","severity":1,"message":"990","line":226,"column":41,"nodeType":"991","messageId":"992","endLine":226,"endColumn":43},{"ruleId":"978","severity":1,"message":"1060","line":5,"column":8,"nodeType":"980","messageId":"981","endLine":5,"endColumn":27},{"ruleId":"978","severity":1,"message":"1081","line":6,"column":10,"nodeType":"980","messageId":"981","endLine":6,"endColumn":19},{"ruleId":"978","severity":1,"message":"1082","line":6,"column":21,"nodeType":"980","messageId":"981","endLine":6,"endColumn":31},{"ruleId":"978","severity":1,"message":"1083","line":18,"column":8,"nodeType":"980","messageId":"981","endLine":18,"endColumn":23},{"ruleId":"978","severity":1,"message":"1065","line":19,"column":8,"nodeType":"980","messageId":"981","endLine":19,"endColumn":17},{"ruleId":"978","severity":1,"message":"1066","line":23,"column":8,"nodeType":"980","messageId":"981","endLine":23,"endColumn":25},{"ruleId":"978","severity":1,"message":"1084","line":43,"column":27,"nodeType":"980","messageId":"981","endLine":43,"endColumn":35},{"ruleId":"978","severity":1,"message":"1085","line":43,"column":37,"nodeType":"980","messageId":"981","endLine":43,"endColumn":42},{"ruleId":"978","severity":1,"message":"1086","line":43,"column":44,"nodeType":"980","messageId":"981","endLine":43,"endColumn":48},{"ruleId":"978","severity":1,"message":"1087","line":47,"column":14,"nodeType":"980","messageId":"981","endLine":47,"endColumn":27},{"ruleId":"978","severity":1,"message":"1088","line":48,"column":12,"nodeType":"980","messageId":"981","endLine":48,"endColumn":23},{"ruleId":"978","severity":1,"message":"1089","line":54,"column":14,"nodeType":"980","messageId":"981","endLine":54,"endColumn":27},{"ruleId":"978","severity":1,"message":"1090","line":55,"column":12,"nodeType":"980","messageId":"981","endLine":55,"endColumn":23},{"ruleId":"978","severity":1,"message":"1070","line":63,"column":14,"nodeType":"980","messageId":"981","endLine":63,"endColumn":28},{"ruleId":"978","severity":1,"message":"1091","line":77,"column":10,"nodeType":"980","messageId":"981","endLine":77,"endColumn":18},{"ruleId":"978","severity":1,"message":"1092","line":77,"column":20,"nodeType":"980","messageId":"981","endLine":77,"endColumn":31},{"ruleId":"996","severity":1,"message":"1093","line":96,"column":6,"nodeType":"998","endLine":96,"endColumn":51,"suggestions":"1094"},{"ruleId":"996","severity":1,"message":"1095","line":167,"column":6,"nodeType":"998","endLine":167,"endColumn":41,"suggestions":"1096"},{"ruleId":"978","severity":1,"message":"1071","line":199,"column":9,"nodeType":"980","messageId":"981","endLine":199,"endColumn":19},{"ruleId":"1015","severity":1,"message":"1016","line":228,"column":24,"nodeType":"988","endLine":228,"endColumn":72},{"ruleId":"1049","severity":1,"message":"1050","line":278,"column":13,"nodeType":"1051","endLine":278,"endColumn":33},{"ruleId":"978","severity":1,"message":"1097","line":297,"column":23,"nodeType":"980","messageId":"981","endLine":297,"endColumn":25},{"ruleId":"989","severity":1,"message":"990","line":314,"column":43,"nodeType":"991","messageId":"992","endLine":314,"endColumn":45},{"ruleId":"978","severity":1,"message":"1029","line":2,"column":47,"nodeType":"980","messageId":"981","endLine":2,"endColumn":53},{"ruleId":"978","severity":1,"message":"985","line":1,"column":15,"nodeType":"980","messageId":"981","endLine":1,"endColumn":23},{"ruleId":"978","severity":1,"message":"1098","line":2,"column":10,"nodeType":"980","messageId":"981","endLine":2,"endColumn":20},{"ruleId":"978","severity":1,"message":"1055","line":3,"column":10,"nodeType":"980","messageId":"981","endLine":3,"endColumn":15},{"ruleId":"978","severity":1,"message":"1099","line":12,"column":8,"nodeType":"980","messageId":"981","endLine":12,"endColumn":18},{"ruleId":"978","severity":1,"message":"1100","line":28,"column":11,"nodeType":"980","messageId":"981","endLine":28,"endColumn":23},{"ruleId":"978","severity":1,"message":"1101","line":3,"column":26,"nodeType":"980","messageId":"981","endLine":3,"endColumn":31},{"ruleId":"978","severity":1,"message":"979","line":3,"column":34,"nodeType":"980","messageId":"981","endLine":3,"endColumn":43},{"ruleId":"978","severity":1,"message":"1102","line":4,"column":10,"nodeType":"980","messageId":"981","endLine":4,"endColumn":22},{"ruleId":"978","severity":1,"message":"1103","line":4,"column":24,"nodeType":"980","messageId":"981","endLine":4,"endColumn":30},{"ruleId":"978","severity":1,"message":"1104","line":4,"column":32,"nodeType":"980","messageId":"981","endLine":4,"endColumn":38},{"ruleId":"978","severity":1,"message":"1105","line":4,"column":40,"nodeType":"980","messageId":"981","endLine":4,"endColumn":46},{"ruleId":"978","severity":1,"message":"1106","line":4,"column":48,"nodeType":"980","messageId":"981","endLine":4,"endColumn":56},{"ruleId":"978","severity":1,"message":"1107","line":11,"column":8,"nodeType":"980","messageId":"981","endLine":11,"endColumn":13},{"ruleId":"978","severity":1,"message":"1108","line":12,"column":8,"nodeType":"980","messageId":"981","endLine":12,"endColumn":18},{"ruleId":"978","severity":1,"message":"1109","line":13,"column":8,"nodeType":"980","messageId":"981","endLine":13,"endColumn":22},{"ruleId":"978","severity":1,"message":"1110","line":14,"column":8,"nodeType":"980","messageId":"981","endLine":14,"endColumn":19},{"ruleId":"978","severity":1,"message":"1065","line":15,"column":8,"nodeType":"980","messageId":"981","endLine":15,"endColumn":17},{"ruleId":"978","severity":1,"message":"1111","line":16,"column":8,"nodeType":"980","messageId":"981","endLine":16,"endColumn":12},{"ruleId":"978","severity":1,"message":"1112","line":17,"column":8,"nodeType":"980","messageId":"981","endLine":17,"endColumn":21},{"ruleId":"978","severity":1,"message":"1068","line":19,"column":8,"nodeType":"980","messageId":"981","endLine":19,"endColumn":12},{"ruleId":"989","severity":1,"message":"995","line":72,"column":18,"nodeType":"991","messageId":"992","endLine":72,"endColumn":20},{"ruleId":"1049","severity":1,"message":"1050","line":94,"column":66,"nodeType":"1051","endLine":94,"endColumn":147},{"ruleId":"978","severity":1,"message":"1113","line":13,"column":3,"nodeType":"980","messageId":"981","endLine":13,"endColumn":21},{"ruleId":"996","severity":1,"message":"1041","line":52,"column":6,"nodeType":"998","endLine":52,"endColumn":50,"suggestions":"1114"},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"996","severity":1,"message":"1041","line":81,"column":6,"nodeType":"998","endLine":81,"endColumn":17,"suggestions":"1115"},{"ruleId":"978","severity":1,"message":"985","line":1,"column":17,"nodeType":"980","messageId":"981","endLine":1,"endColumn":25},{"ruleId":"978","severity":1,"message":"1108","line":10,"column":8,"nodeType":"980","messageId":"981","endLine":10,"endColumn":18},{"ruleId":"978","severity":1,"message":"1116","line":11,"column":8,"nodeType":"980","messageId":"981","endLine":11,"endColumn":16},{"ruleId":"978","severity":1,"message":"1117","line":12,"column":8,"nodeType":"980","messageId":"981","endLine":12,"endColumn":14},{"ruleId":"978","severity":1,"message":"1029","line":13,"column":8,"nodeType":"980","messageId":"981","endLine":13,"endColumn":14},{"ruleId":"978","severity":1,"message":"1118","line":85,"column":9,"nodeType":"980","messageId":"981","endLine":85,"endColumn":16},{"ruleId":"996","severity":1,"message":"1041","line":95,"column":6,"nodeType":"998","endLine":95,"endColumn":29,"suggestions":"1119"},{"ruleId":"996","severity":1,"message":"1041","line":17,"column":6,"nodeType":"998","endLine":17,"endColumn":38,"suggestions":"1120"},{"ruleId":"978","severity":1,"message":"1121","line":3,"column":16,"nodeType":"980","messageId":"981","endLine":3,"endColumn":21},{"ruleId":"978","severity":1,"message":"1122","line":10,"column":11,"nodeType":"980","messageId":"981","endLine":10,"endColumn":18},{"ruleId":"978","severity":1,"message":"1123","line":10,"column":29,"nodeType":"980","messageId":"981","endLine":10,"endColumn":34},{"ruleId":"996","severity":1,"message":"1124","line":28,"column":6,"nodeType":"998","endLine":28,"endColumn":16,"suggestions":"1125"},{"ruleId":"996","severity":1,"message":"1126","line":51,"column":6,"nodeType":"998","endLine":51,"endColumn":15,"suggestions":"1127"},{"ruleId":"978","severity":1,"message":"1128","line":2,"column":24,"nodeType":"980","messageId":"981","endLine":2,"endColumn":30},{"ruleId":"978","severity":1,"message":"1129","line":2,"column":32,"nodeType":"980","messageId":"981","endLine":2,"endColumn":37},{"ruleId":"978","severity":1,"message":"1130","line":5,"column":10,"nodeType":"980","messageId":"981","endLine":5,"endColumn":24},{"ruleId":"978","severity":1,"message":"1131","line":5,"column":26,"nodeType":"980","messageId":"981","endLine":5,"endColumn":43},{"ruleId":"978","severity":1,"message":"1058","line":6,"column":8,"nodeType":"980","messageId":"981","endLine":6,"endColumn":14},{"ruleId":"978","severity":1,"message":"1028","line":7,"column":8,"nodeType":"980","messageId":"981","endLine":7,"endColumn":15},{"ruleId":"978","severity":1,"message":"1132","line":8,"column":8,"nodeType":"980","messageId":"981","endLine":8,"endColumn":14},{"ruleId":"978","severity":1,"message":"1133","line":9,"column":10,"nodeType":"980","messageId":"981","endLine":9,"endColumn":25},{"ruleId":"978","severity":1,"message":"1134","line":10,"column":8,"nodeType":"980","messageId":"981","endLine":10,"endColumn":15},{"ruleId":"978","severity":1,"message":"1135","line":12,"column":8,"nodeType":"980","messageId":"981","endLine":12,"endColumn":20},{"ruleId":"978","severity":1,"message":"1136","line":13,"column":8,"nodeType":"980","messageId":"981","endLine":13,"endColumn":21},{"ruleId":"978","severity":1,"message":"1137","line":14,"column":26,"nodeType":"980","messageId":"981","endLine":14,"endColumn":36},{"ruleId":"978","severity":1,"message":"1138","line":16,"column":8,"nodeType":"980","messageId":"981","endLine":16,"endColumn":12},{"ruleId":"978","severity":1,"message":"1139","line":17,"column":8,"nodeType":"980","messageId":"981","endLine":17,"endColumn":16},{"ruleId":"978","severity":1,"message":"1140","line":18,"column":8,"nodeType":"980","messageId":"981","endLine":18,"endColumn":20},{"ruleId":"978","severity":1,"message":"1141","line":19,"column":8,"nodeType":"980","messageId":"981","endLine":19,"endColumn":15},{"ruleId":"978","severity":1,"message":"1068","line":22,"column":8,"nodeType":"980","messageId":"981","endLine":22,"endColumn":12},{"ruleId":"978","severity":1,"message":"1142","line":24,"column":8,"nodeType":"980","messageId":"981","endLine":24,"endColumn":14},{"ruleId":"978","severity":1,"message":"1110","line":25,"column":8,"nodeType":"980","messageId":"981","endLine":25,"endColumn":19},{"ruleId":"978","severity":1,"message":"1118","line":38,"column":9,"nodeType":"980","messageId":"981","endLine":38,"endColumn":16},{"ruleId":"978","severity":1,"message":"1143","line":41,"column":18,"nodeType":"980","messageId":"981","endLine":41,"endColumn":27},{"ruleId":"978","severity":1,"message":"1144","line":41,"column":38,"nodeType":"980","messageId":"981","endLine":41,"endColumn":49},{"ruleId":"978","severity":1,"message":"1145","line":41,"column":51,"nodeType":"980","messageId":"981","endLine":41,"endColumn":55},{"ruleId":"978","severity":1,"message":"1122","line":44,"column":11,"nodeType":"980","messageId":"981","endLine":44,"endColumn":18},{"ruleId":"978","severity":1,"message":"1123","line":44,"column":29,"nodeType":"980","messageId":"981","endLine":44,"endColumn":34},{"ruleId":"996","severity":1,"message":"1146","line":70,"column":6,"nodeType":"998","endLine":70,"endColumn":16,"suggestions":"1147"},{"ruleId":"996","severity":1,"message":"1126","line":93,"column":6,"nodeType":"998","endLine":93,"endColumn":15,"suggestions":"1148"},{"ruleId":"978","severity":1,"message":"1149","line":3,"column":8,"nodeType":"980","messageId":"981","endLine":3,"endColumn":12},{"ruleId":"978","severity":1,"message":"994","line":2,"column":10,"nodeType":"980","messageId":"981","endLine":2,"endColumn":14},{"ruleId":"978","severity":1,"message":"1061","line":3,"column":10,"nodeType":"980","messageId":"981","endLine":3,"endColumn":23},{"ruleId":"978","severity":1,"message":"1150","line":5,"column":20,"nodeType":"980","messageId":"981","endLine":5,"endColumn":25},{"ruleId":"978","severity":1,"message":"1151","line":7,"column":10,"nodeType":"980","messageId":"981","endLine":7,"endColumn":20},{"ruleId":"978","severity":1,"message":"1060","line":10,"column":8,"nodeType":"980","messageId":"981","endLine":10,"endColumn":27},{"ruleId":"978","severity":1,"message":"1058","line":11,"column":8,"nodeType":"980","messageId":"981","endLine":11,"endColumn":14},{"ruleId":"978","severity":1,"message":"1028","line":12,"column":8,"nodeType":"980","messageId":"981","endLine":12,"endColumn":15},{"ruleId":"978","severity":1,"message":"1134","line":14,"column":8,"nodeType":"980","messageId":"981","endLine":14,"endColumn":15},{"ruleId":"978","severity":1,"message":"1122","line":20,"column":11,"nodeType":"980","messageId":"981","endLine":20,"endColumn":18},{"ruleId":"978","severity":1,"message":"1123","line":20,"column":20,"nodeType":"980","messageId":"981","endLine":20,"endColumn":25},{"ruleId":"978","severity":1,"message":"1062","line":20,"column":27,"nodeType":"980","messageId":"981","endLine":20,"endColumn":33},{"ruleId":"978","severity":1,"message":"1152","line":24,"column":14,"nodeType":"980","messageId":"981","endLine":24,"endColumn":27},{"ruleId":"978","severity":1,"message":"1153","line":25,"column":12,"nodeType":"980","messageId":"981","endLine":25,"endColumn":23},{"ruleId":"978","severity":1,"message":"1154","line":26,"column":13,"nodeType":"980","messageId":"981","endLine":26,"endColumn":21},{"ruleId":"978","severity":1,"message":"1155","line":30,"column":11,"nodeType":"980","messageId":"981","endLine":30,"endColumn":19},{"ruleId":"978","severity":1,"message":"1021","line":32,"column":10,"nodeType":"980","messageId":"981","endLine":32,"endColumn":14},{"ruleId":"978","severity":1,"message":"1156","line":32,"column":16,"nodeType":"980","messageId":"981","endLine":32,"endColumn":23},{"ruleId":"978","severity":1,"message":"1157","line":33,"column":9,"nodeType":"980","messageId":"981","endLine":33,"endColumn":16},{"ruleId":"996","severity":1,"message":"1158","line":38,"column":6,"nodeType":"998","endLine":38,"endColumn":14,"suggestions":"1159"},{"ruleId":"1049","severity":1,"message":"1050","line":104,"column":13,"nodeType":"1051","endLine":104,"endColumn":31},{"ruleId":"974","replacedBy":"1160"},{"ruleId":"976","replacedBy":"1161"},{"ruleId":"978","severity":1,"message":"1134","line":7,"column":8,"nodeType":"980","messageId":"981","endLine":7,"endColumn":15},{"ruleId":"978","severity":1,"message":"1162","line":9,"column":21,"nodeType":"980","messageId":"981","endLine":9,"endColumn":31},{"ruleId":"978","severity":1,"message":"1104","line":21,"column":10,"nodeType":"980","messageId":"981","endLine":21,"endColumn":16},{"ruleId":"978","severity":1,"message":"1163","line":21,"column":18,"nodeType":"980","messageId":"981","endLine":21,"endColumn":31},{"ruleId":"978","severity":1,"message":"1164","line":21,"column":33,"nodeType":"980","messageId":"981","endLine":21,"endColumn":40},{"ruleId":"978","severity":1,"message":"1055","line":22,"column":8,"nodeType":"980","messageId":"981","endLine":22,"endColumn":13},{"ruleId":"978","severity":1,"message":"1165","line":34,"column":8,"nodeType":"980","messageId":"981","endLine":34,"endColumn":12},{"ruleId":"978","severity":1,"message":"1166","line":47,"column":7,"nodeType":"980","messageId":"981","endLine":47,"endColumn":13},{"ruleId":"978","severity":1,"message":"1167","line":53,"column":10,"nodeType":"980","messageId":"981","endLine":53,"endColumn":18},{"ruleId":"978","severity":1,"message":"1168","line":53,"column":20,"nodeType":"980","messageId":"981","endLine":53,"endColumn":31},{"ruleId":"978","severity":1,"message":"1169","line":54,"column":10,"nodeType":"980","messageId":"981","endLine":54,"endColumn":19},{"ruleId":"978","severity":1,"message":"1170","line":54,"column":21,"nodeType":"980","messageId":"981","endLine":54,"endColumn":33},{"ruleId":"978","severity":1,"message":"1171","line":55,"column":10,"nodeType":"980","messageId":"981","endLine":55,"endColumn":31},{"ruleId":"978","severity":1,"message":"1172","line":55,"column":33,"nodeType":"980","messageId":"981","endLine":55,"endColumn":57},{"ruleId":"978","severity":1,"message":"1143","line":57,"column":18,"nodeType":"980","messageId":"981","endLine":57,"endColumn":27},{"ruleId":"978","severity":1,"message":"1144","line":57,"column":38,"nodeType":"980","messageId":"981","endLine":57,"endColumn":49},{"ruleId":"978","severity":1,"message":"1145","line":57,"column":51,"nodeType":"980","messageId":"981","endLine":57,"endColumn":55},{"ruleId":"978","severity":1,"message":"1173","line":62,"column":10,"nodeType":"980","messageId":"981","endLine":62,"endColumn":22},{"ruleId":"978","severity":1,"message":"1174","line":62,"column":24,"nodeType":"980","messageId":"981","endLine":62,"endColumn":39},{"ruleId":"978","severity":1,"message":"1175","line":63,"column":10,"nodeType":"980","messageId":"981","endLine":63,"endColumn":23},{"ruleId":"978","severity":1,"message":"1176","line":63,"column":25,"nodeType":"980","messageId":"981","endLine":63,"endColumn":41},{"ruleId":"978","severity":1,"message":"1177","line":64,"column":10,"nodeType":"980","messageId":"981","endLine":64,"endColumn":19},{"ruleId":"978","severity":1,"message":"1178","line":64,"column":21,"nodeType":"980","messageId":"981","endLine":64,"endColumn":33},{"ruleId":"978","severity":1,"message":"1179","line":71,"column":14,"nodeType":"980","messageId":"981","endLine":71,"endColumn":25},{"ruleId":"978","severity":1,"message":"1180","line":73,"column":12,"nodeType":"980","messageId":"981","endLine":73,"endColumn":21},{"ruleId":"996","severity":1,"message":"1181","line":87,"column":6,"nodeType":"998","endLine":87,"endColumn":8,"suggestions":"1182"},{"ruleId":"996","severity":1,"message":"1126","line":99,"column":6,"nodeType":"998","endLine":99,"endColumn":19,"suggestions":"1183"},{"ruleId":"996","severity":1,"message":"1030","line":174,"column":6,"nodeType":"998","endLine":174,"endColumn":14,"suggestions":"1184"},{"ruleId":"996","severity":1,"message":"1146","line":185,"column":6,"nodeType":"998","endLine":185,"endColumn":8,"suggestions":"1185"},{"ruleId":"996","severity":1,"message":"1032","line":196,"column":6,"nodeType":"998","endLine":196,"endColumn":15,"suggestions":"1186"},{"ruleId":"978","severity":1,"message":"1010","line":253,"column":9,"nodeType":"980","messageId":"981","endLine":253,"endColumn":21},{"ruleId":"978","severity":1,"message":"1011","line":257,"column":9,"nodeType":"980","messageId":"981","endLine":257,"endColumn":22},{"ruleId":"978","severity":1,"message":"1012","line":261,"column":9,"nodeType":"980","messageId":"981","endLine":261,"endColumn":23},{"ruleId":"978","severity":1,"message":"1013","line":266,"column":9,"nodeType":"980","messageId":"981","endLine":266,"endColumn":20},{"ruleId":"978","severity":1,"message":"1014","line":270,"column":9,"nodeType":"980","messageId":"981","endLine":270,"endColumn":22},{"ruleId":"1015","severity":1,"message":"1016","line":536,"column":23,"nodeType":"988","endLine":536,"endColumn":43},{"ruleId":"978","severity":1,"message":"1038","line":2,"column":10,"nodeType":"980","messageId":"981","endLine":2,"endColumn":21},{"ruleId":"978","severity":1,"message":"1134","line":3,"column":8,"nodeType":"980","messageId":"981","endLine":3,"endColumn":15},{"ruleId":"978","severity":1,"message":"1187","line":6,"column":16,"nodeType":"980","messageId":"981","endLine":6,"endColumn":19},{"ruleId":"996","severity":1,"message":"1188","line":48,"column":6,"nodeType":"998","endLine":48,"endColumn":8,"suggestions":"1189"},{"ruleId":"978","severity":1,"message":"1190","line":17,"column":13,"nodeType":"980","messageId":"981","endLine":17,"endColumn":20},{"ruleId":"978","severity":1,"message":"1191","line":18,"column":3,"nodeType":"980","messageId":"981","endLine":18,"endColumn":10},{"ruleId":"978","severity":1,"message":"982","line":20,"column":3,"nodeType":"980","messageId":"981","endLine":20,"endColumn":6},{"ruleId":"978","severity":1,"message":"1192","line":21,"column":3,"nodeType":"980","messageId":"981","endLine":21,"endColumn":6},{"ruleId":"978","severity":1,"message":"1143","line":26,"column":18,"nodeType":"980","messageId":"981","endLine":26,"endColumn":27},{"ruleId":"978","severity":1,"message":"1144","line":26,"column":38,"nodeType":"980","messageId":"981","endLine":26,"endColumn":49},{"ruleId":"978","severity":1,"message":"1145","line":26,"column":51,"nodeType":"980","messageId":"981","endLine":26,"endColumn":55},{"ruleId":"978","severity":1,"message":"1122","line":29,"column":11,"nodeType":"980","messageId":"981","endLine":29,"endColumn":18},{"ruleId":"978","severity":1,"message":"1123","line":29,"column":29,"nodeType":"980","messageId":"981","endLine":29,"endColumn":34},{"ruleId":"996","severity":1,"message":"1146","line":43,"column":6,"nodeType":"998","endLine":43,"endColumn":16,"suggestions":"1193"},{"ruleId":"996","severity":1,"message":"1126","line":55,"column":6,"nodeType":"998","endLine":55,"endColumn":15,"suggestions":"1194"},{"ruleId":"978","severity":1,"message":"1195","line":2,"column":8,"nodeType":"980","messageId":"981","endLine":2,"endColumn":13},{"ruleId":"978","severity":1,"message":"1190","line":17,"column":13,"nodeType":"980","messageId":"981","endLine":17,"endColumn":20},{"ruleId":"978","severity":1,"message":"1191","line":18,"column":3,"nodeType":"980","messageId":"981","endLine":18,"endColumn":10},{"ruleId":"978","severity":1,"message":"982","line":20,"column":3,"nodeType":"980","messageId":"981","endLine":20,"endColumn":6},{"ruleId":"978","severity":1,"message":"1192","line":21,"column":3,"nodeType":"980","messageId":"981","endLine":21,"endColumn":6},{"ruleId":"978","severity":1,"message":"1143","line":29,"column":18,"nodeType":"980","messageId":"981","endLine":29,"endColumn":27},{"ruleId":"978","severity":1,"message":"1144","line":29,"column":38,"nodeType":"980","messageId":"981","endLine":29,"endColumn":49},{"ruleId":"978","severity":1,"message":"1145","line":29,"column":51,"nodeType":"980","messageId":"981","endLine":29,"endColumn":55},{"ruleId":"978","severity":1,"message":"1122","line":32,"column":11,"nodeType":"980","messageId":"981","endLine":32,"endColumn":18},{"ruleId":"978","severity":1,"message":"1123","line":32,"column":29,"nodeType":"980","messageId":"981","endLine":32,"endColumn":34},{"ruleId":"996","severity":1,"message":"1146","line":47,"column":6,"nodeType":"998","endLine":47,"endColumn":16,"suggestions":"1196"},{"ruleId":"996","severity":1,"message":"1126","line":60,"column":6,"nodeType":"998","endLine":60,"endColumn":15,"suggestions":"1197"},{"ruleId":"978","severity":1,"message":"1137","line":4,"column":3,"nodeType":"980","messageId":"981","endLine":4,"endColumn":13},{"ruleId":"978","severity":1,"message":"1110","line":5,"column":3,"nodeType":"980","messageId":"981","endLine":5,"endColumn":14},{"ruleId":"978","severity":1,"message":"1190","line":6,"column":13,"nodeType":"980","messageId":"981","endLine":6,"endColumn":20},{"ruleId":"978","severity":1,"message":"1191","line":7,"column":3,"nodeType":"980","messageId":"981","endLine":7,"endColumn":10},{"ruleId":"978","severity":1,"message":"1198","line":8,"column":3,"nodeType":"980","messageId":"981","endLine":8,"endColumn":7},{"ruleId":"978","severity":1,"message":"1058","line":14,"column":8,"nodeType":"980","messageId":"981","endLine":14,"endColumn":14},{"ruleId":"978","severity":1,"message":"1028","line":15,"column":8,"nodeType":"980","messageId":"981","endLine":15,"endColumn":15},{"ruleId":"978","severity":1,"message":"1143","line":18,"column":18,"nodeType":"980","messageId":"981","endLine":18,"endColumn":27},{"ruleId":"978","severity":1,"message":"1144","line":18,"column":38,"nodeType":"980","messageId":"981","endLine":18,"endColumn":49},{"ruleId":"978","severity":1,"message":"1145","line":18,"column":51,"nodeType":"980","messageId":"981","endLine":18,"endColumn":55},{"ruleId":"978","severity":1,"message":"1122","line":21,"column":11,"nodeType":"980","messageId":"981","endLine":21,"endColumn":18},{"ruleId":"978","severity":1,"message":"1199","line":21,"column":20,"nodeType":"980","messageId":"981","endLine":21,"endColumn":27},{"ruleId":"978","severity":1,"message":"1123","line":21,"column":29,"nodeType":"980","messageId":"981","endLine":21,"endColumn":34},{"ruleId":"978","severity":1,"message":"1200","line":21,"column":36,"nodeType":"980","messageId":"981","endLine":21,"endColumn":48},"no-native-reassign",["1201"],"no-negated-in-lhs",["1202"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.",["1201"],["1202"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Link' is defined but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["1203"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1204"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["1205"],"'ImageLinkForm' is defined but never used.","'FoodRecognition' is defined but never used.","'image5' is defined but never used.","'image6' is defined but never used.","'analimg' is defined but never used.","'Alert' is defined but never used.","'imageHandler' is assigned a value but never used.","'onInputChange' is assigned a value but never used.","'onButtonSubmit' is assigned a value but never used.","'uploadImage' is assigned a value but never used.","'convertBase64' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useDropzone' is defined but never used.","'fileSelectedHandler' is assigned a value but never used.","'Message' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'loading', and 'success'. Either include them or remove the dependency array.",["1206"],"React Hook useEffect has missing dependencies: 'error', 'loading', and 'nutritions'. Either include them or remove the dependency array.",["1207"],"'$' is defined but never used.","'Popper' is defined but never used.",["1201"],["1202"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Header' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'trainee'. Either include them or remove the dependency array.",["1208"],["1209"],["1210"],["1211"],"'Navbar' is defined but never used.","'Nav' is defined but never used.","'SearchBox' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["1212"],["1213"],"'InboxIcon' is defined but never used.","'Paper' is defined but never used.","'MailIcon' is defined but never used.","'DirectionsRunIcon' is defined but never used.","'Loader' is defined but never used.","'OrderListScreen' is defined but never used.","'NameCustomComponent' is defined but never used.","'LinkContainer' is defined but never used.","'orders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'orderList'. Either include them or remove the dependency array.",["1214"],"'TextField' is defined but never used.","'DialogContentText' is defined but never used.","'FormContainer' is defined but never used.","'Icon' is defined but never used.","'errorDetails' is assigned a value but never used.","'loadingDetails' is assigned a value but never used.","'handleShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userList'. Either include it or remove the dependency array.",["1215"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'dispatch', 'user._id', 'user.email', 'user.isAdmin', and 'user.name'. Either include them or remove the dependency array.",["1216"],"'handleClickOpen' is assigned a value but never used.","'listUsers' is defined but never used.","'deleteUser' is defined but never used.","'FormProductEdit' is defined but never used.","'products' is assigned a value but never used.","'pages' is assigned a value but never used.","'page' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'showForm' is assigned a value but never used.","'setShowForm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product._id' and 'product.name'. Either include them or remove the dependency array.",["1217"],"React Hook useEffect has missing dependencies: 'history' and 'productList'. Either include them or remove the dependency array.",["1218"],"'id' is defined but never used.","'makeStyles' is defined but never used.","'PeopleIcon' is defined but never used.","'handleToggle' is assigned a value but never used.","'Table' is defined but never used.","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'MDBBtn' is defined but never used.","'MDBInput' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'FormControl' is defined but never used.","'Grid' is defined but never used.","'AccountCircle' is defined but never used.","'KeyboardTimePicker' is defined but never used.",["1219"],["1220"],"'MenuItem' is defined but never used.","'Select' is defined but never used.","'classes' is assigned a value but never used.",["1221"],["1222"],"'Modal' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1223"],"React Hook useEffect has missing dependencies: 'personelInfo' and 'traineeInfo'. Either include them or remove the dependency array.",["1224"],"'Router' is defined but never used.","'Route' is defined but never used.","'getUserDetails' is defined but never used.","'updateUserProfile' is defined but never used.","'styled' is defined but never used.","'AnimatePresence' is defined but never used.","'SideBar' is defined but never used.","'TraineeOrder' is defined but never used.","'NavbarTrainee' is defined but never used.","'InputGroup' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Divider' is defined but never used.","'Avatar' is defined but never used.","'errorUser' is assigned a value but never used.","'loadingUser' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo.id'. Either include it or remove the dependency array.",["1225"],["1226"],"'Home' is defined but never used.","'Badge' is defined but never used.","'listOrders' is defined but never used.","'loadingOrders' is assigned a value but never used.","'errorOrders' is assigned a value but never used.","'ordersMy' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setData' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderListMy'. Either include them or remove the dependency array. Outer scope values like 'Orders' aren't valid dependencies because mutating them doesn't re-render the component.",["1227"],["1201"],["1202"],"'antDivider' is defined but never used.","'MDBFormInline' is defined but never used.","'MDBIcon' is defined but never used.","'diet' is defined but never used.","'Search' is assigned a value but never used.","'calories' is assigned a value but never used.","'setCalories' is assigned a value but never used.","'protein_g' is assigned a value but never used.","'setProtein_g' is assigned a value but never used.","'carbohydrates_total_g' is assigned a value but never used.","'setCarbohydrates_total_g' is assigned a value but never used.","'calorieTotal' is assigned a value but never used.","'setCalorieTotal' is assigned a value but never used.","'proteineTotal' is assigned a value but never used.","'setProteineTotal' is assigned a value but never used.","'carbTotal' is assigned a value but never used.","'setCarbTotal' is assigned a value but never used.","'loadingInfo' is assigned a value but never used.","'errorInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo.id'. Either include them or remove the dependency array.",["1228"],["1229"],["1230"],["1231"],["1232"],"'Bar' is defined but never used.","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.",["1233"],"'RButton' is defined but never used.","'Spinner' is defined but never used.","'Col' is defined but never used.",["1234"],["1235"],"'axios' is defined but never used.",["1236"],["1237"],"'Form' is defined but never used.","'success' is assigned a value but never used.","'personelInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1238","fix":"1239"},{"desc":"1240","fix":"1241"},{"desc":"1242","fix":"1243"},{"desc":"1244","fix":"1245"},{"desc":"1246","fix":"1247"},{"desc":"1248","fix":"1249"},{"desc":"1238","fix":"1250"},{"desc":"1242","fix":"1251"},{"desc":"1240","fix":"1252"},{"desc":"1244","fix":"1253"},{"desc":"1246","fix":"1254"},{"desc":"1255","fix":"1256"},{"desc":"1257","fix":"1258"},{"desc":"1259","fix":"1260"},{"desc":"1261","fix":"1262"},{"desc":"1263","fix":"1264"},{"desc":"1265","fix":"1266"},{"desc":"1267","fix":"1268"},{"desc":"1269","fix":"1270"},{"desc":"1271","fix":"1272"},{"desc":"1273","fix":"1274"},{"desc":"1275","fix":"1276"},{"desc":"1277","fix":"1278"},{"desc":"1275","fix":"1279"},{"desc":"1280","fix":"1281"},{"desc":"1277","fix":"1282"},{"desc":"1283","fix":"1284"},{"desc":"1244","fix":"1285"},{"desc":"1286","fix":"1287"},{"desc":"1246","fix":"1288"},{"desc":"1289","fix":"1290"},{"desc":"1277","fix":"1291"},{"desc":"1275","fix":"1292"},{"desc":"1277","fix":"1293"},{"desc":"1275","fix":"1294"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"1295","text":"1296"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"1297","text":"1298"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"1299","text":"1300"},"Update the dependencies array to be: [dispatch, loading, result, success]",{"range":"1301","text":"1302"},"Update the dependencies array to be: [error, loading, nutritions, success]",{"range":"1303","text":"1304"},"Update the dependencies array to be: [name, email, password, dispatch, trainee]",{"range":"1305","text":"1306"},{"range":"1307","text":"1296"},{"range":"1308","text":"1300"},{"range":"1309","text":"1298"},{"range":"1310","text":"1302"},{"range":"1311","text":"1304"},"Update the dependencies array to be: [dispatch, userInfo, history, orderList, data]",{"range":"1312","text":"1313"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo, userList]",{"range":"1314","text":"1315"},"Update the dependencies array to be: [userId, successUpdate, dispatch, user.name, user._id, user.email, user.isAdmin]",{"range":"1316","text":"1317"},"Update the dependencies array to be: [dispatch, productId, history, successUpdate, product.name, product._id]",{"range":"1318","text":"1319"},"Update the dependencies array to be: [dispatch, history, productList, successDelete, userInfo]",{"range":"1320","text":"1321"},"Update the dependencies array to be: [height, weight, weightGoal, birthDate, sex, dispatch, trainee]",{"range":"1322","text":"1323"},"Update the dependencies array to be: [activitie, dispatch, trainee]",{"range":"1324","text":"1325"},"Update the dependencies array to be: [objective, experience, dispatch, trainee]",{"range":"1326","text":"1327"},"Update the dependencies array to be: [equipement, days, healthIssues, dispatch, trainee]",{"range":"1328","text":"1329"},"Update the dependencies array to be: [dispatch, id]",{"range":"1330","text":"1331"},"Update the dependencies array to be: [personelInfo, success, traineeInfo]",{"range":"1332","text":"1333"},"Update the dependencies array to be: [dispatch, userInfo.id]",{"range":"1334","text":"1335"},{"range":"1336","text":"1333"},"Update the dependencies array to be: [dispatch, orderListMy]",{"range":"1337","text":"1338"},{"range":"1339","text":"1335"},"Update the dependencies array to be: [personelInfo, successInfo, traineeInfo]",{"range":"1340","text":"1341"},{"range":"1342","text":"1302"},"Update the dependencies array to be: [userInfo.id]",{"range":"1343","text":"1344"},{"range":"1345","text":"1304"},"Update the dependencies array to be: [chart]",{"range":"1346","text":"1347"},{"range":"1348","text":"1335"},{"range":"1349","text":"1333"},{"range":"1350","text":"1335"},{"range":"1351","text":"1333"},[1268,1286],"[success, history, order._id, dispatch]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[2272,2326],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[902,910],"[dispatch, loading, result, success]",[1157,1166],"[error, loading, nutritions, success]",[2226,2249],"[name, email, password, dispatch, trainee]",[1291,1309],[2283,2337],[1432,1470],[888,896],[1142,1151],[1107,1136],"[dispatch, userInfo, history, orderList, data]",[2413,2457],"[dispatch, history, successDelete, userInfo, userList]",[2879,2902],"[userId, successUpdate, dispatch, user.name, user._id, user.email, user.isAdmin]",[3257,3302],"[dispatch, productId, history, successUpdate, product.name, product._id]",[4847,4882],"[dispatch, history, productList, successDelete, userInfo]",[1571,1615],"[height, weight, weightGoal, birthDate, sex, dispatch, trainee]",[2336,2347],"[activitie, dispatch, trainee]",[2810,2833],"[objective, experience, dispatch, trainee]",[676,708],"[equipement, days, healthIssues, dispatch, trainee]",[1149,1159],"[dispatch, id]",[2109,2118],"[personelInfo, success, traineeInfo]",[2897,2907],"[dispatch, userInfo.id]",[3856,3865],[1394,1402],"[dispatch, orderListMy]",[3387,3389],[3716,3729],"[personelInfo, successInfo, traineeInfo]",[5869,5877],[6111,6113],"[userInfo.id]",[6405,6414],[1360,1362],"[chart]",[1616,1626],[1953,1962],[1684,1694],[2093,2102]]