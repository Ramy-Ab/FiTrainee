[{"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\index.js":"1","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\store.js":"2","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\App.js":"4","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\cartReducers.js":"6","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\orderReducers.js":"8","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Header.js":"9","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\LoginScreen.js":"10","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\HomeScreen.js":"11","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Footer.js":"12","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductScreen.js":"13","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\PaymentScreen.js":"14","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProfileScreen.js":"15","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\PlaceOrderScreen.js":"17","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\UserListScreen.js":"18","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\UserEditScreen.js":"19","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\OrderScreen.js":"20","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ShippingScreen.js":"21","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\RegisterScreen.js":"22","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductListScreen.js":"23","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductEditScreen.js":"24","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\OrderListScreen.js":"25","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\FoodAiScreen.jsx":"26","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\cartConstants.js":"27","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\userConstants.js":"28","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\productConstants.js":"29","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Loader.js":"30","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\orderConstants.js":"31","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Message.js":"32","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FormContainer.js":"33","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\SearchBox.js":"34","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Product.js":"35","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\ProductCarousel.js":"36","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\CheckoutSteps.js":"37","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Rating.js":"38","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Paginate.js":"39","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\userActions.js":"40","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\cartActions.js":"41","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\orderActions.js":"42","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\productActions.js":"43","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodTable\\FoodTable.jsx":"44","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodRecognition\\FoodRecognition.jsx":"45","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\ImageLinkForm\\ImageLinkForm.jsx":"46","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodTableR\\FoodTableR.jsx":"47","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\FoodReducer.js":"48","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\foodConstant.js":"49","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\foodAction.js":"50","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\HomePageScreen\\HomePageScreen.jsx":"51","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\NavBar.jsx":"52","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Headers.jsx":"53","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Feature.jsx":"54","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FeaturesBox.jsx":"55","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Offer.jsx":"56","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\About.jsx":"57","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Contact.jsx":"58","E:\\PFE-test\\frontend\\src\\index.js":"59","E:\\PFE-test\\frontend\\src\\reportWebVitals.js":"60","E:\\PFE-test\\frontend\\src\\App.js":"61","E:\\PFE-test\\frontend\\src\\store.js":"62","E:\\PFE-test\\frontend\\src\\screens\\HomeScreen.js":"63","E:\\PFE-test\\frontend\\src\\screens\\CartScreen.js":"64","E:\\PFE-test\\frontend\\src\\screens\\ProductScreen.js":"65","E:\\PFE-test\\frontend\\src\\screens\\LoginScreen.js":"66","E:\\PFE-test\\frontend\\src\\screens\\RegisterScreen.js":"67","E:\\PFE-test\\frontend\\src\\screens\\ProfileScreen.js":"68","E:\\PFE-test\\frontend\\src\\screens\\PaymentScreen.js":"69","E:\\PFE-test\\frontend\\src\\screens\\ShippingScreen.js":"70","E:\\PFE-test\\frontend\\src\\screens\\PlaceOrderScreen.js":"71","E:\\PFE-test\\frontend\\src\\screens\\OrderScreen.js":"72","E:\\PFE-test\\frontend\\src\\screens\\UserListScreen.js":"73","E:\\PFE-test\\frontend\\src\\screens\\UserEditScreen.js":"74","E:\\PFE-test\\frontend\\src\\screens\\ProductListScreen.js":"75","E:\\PFE-test\\frontend\\src\\screens\\ProductEditScreen.js":"76","E:\\PFE-test\\frontend\\src\\screens\\OrderListScreen.js":"77","E:\\PFE-test\\frontend\\src\\components\\Footer.js":"78","E:\\PFE-test\\frontend\\src\\reducers\\cartReducers.js":"79","E:\\PFE-test\\frontend\\src\\reducers\\productReducers.js":"80","E:\\PFE-test\\frontend\\src\\reducers\\userReducers.js":"81","E:\\PFE-test\\frontend\\src\\reducers\\orderReducers.js":"82","E:\\PFE-test\\frontend\\src\\reducers\\FoodReducer.js":"83","E:\\PFE-test\\frontend\\src\\components\\NavBar.jsx":"84","E:\\PFE-test\\frontend\\src\\screens\\FoodAiScreen.jsx":"85","E:\\PFE-test\\frontend\\src\\screens\\HomePageScreen\\HomePageScreen.jsx":"86","E:\\PFE-test\\frontend\\src\\components\\Loader.js":"87","E:\\PFE-test\\frontend\\src\\components\\Message.js":"88","E:\\PFE-test\\frontend\\src\\components\\Paginate.js":"89","E:\\PFE-test\\frontend\\src\\components\\ProductCarousel.js":"90","E:\\PFE-test\\frontend\\src\\components\\Product.js":"91","E:\\PFE-test\\frontend\\src\\components\\Rating.js":"92","E:\\PFE-test\\frontend\\src\\components\\FormContainer.js":"93","E:\\PFE-test\\frontend\\src\\actions\\cartActions.js":"94","E:\\PFE-test\\frontend\\src\\actions\\orderActions.js":"95","E:\\PFE-test\\frontend\\src\\actions\\productActions.js":"96","E:\\PFE-test\\frontend\\src\\constants\\foodConstant.js":"97","E:\\PFE-test\\frontend\\src\\constants\\cartConstants.js":"98","E:\\PFE-test\\frontend\\src\\actions\\userActions.js":"99","E:\\PFE-test\\frontend\\src\\constants\\productConstants.js":"100","E:\\PFE-test\\frontend\\src\\constants\\orderConstants.js":"101","E:\\PFE-test\\frontend\\src\\constants\\userConstants.js":"102","E:\\PFE-test\\frontend\\src\\components\\CheckoutSteps.js":"103","E:\\PFE-test\\frontend\\src\\components\\Contact.jsx":"104","E:\\PFE-test\\frontend\\src\\components\\About.jsx":"105","E:\\PFE-test\\frontend\\src\\components\\FoodTableR\\FoodTableR.jsx":"106","E:\\PFE-test\\frontend\\src\\components\\ImageLinkForm\\ImageLinkForm.jsx":"107","E:\\PFE-test\\frontend\\src\\components\\Offer.jsx":"108","E:\\PFE-test\\frontend\\src\\components\\Feature.jsx":"109","E:\\PFE-test\\frontend\\src\\components\\Headers.jsx":"110","E:\\PFE-test\\frontend\\src\\components\\FoodRecognition\\FoodRecognition.jsx":"111","E:\\PFE-test\\frontend\\src\\actions\\foodAction.js":"112","E:\\PFE-test\\frontend\\src\\components\\FeaturesBox.jsx":"113","E:\\PFE-test\\frontend\\src\\components\\Header.js":"114","E:\\PFE-test\\frontend\\src\\components\\SearchBox.js":"115","E:\\PFE-test\\frontend\\src\\screens\\Dashboard.js":"116","E:\\PFE-test\\frontend\\src\\components\\Orders.jsx":"117","E:\\PFE-test\\frontend\\src\\components\\NameCustomComponent .jsx":"118","E:\\PFE-test\\frontend\\src\\components\\Users.jsx":"119","E:\\PFE-test\\frontend\\src\\components\\ProductsList.jsx":"120","E:\\PFE-test\\frontend\\src\\components\\employeeService.js":"121","E:\\PFE-test\\frontend\\src\\components\\PageHeader.js":"122","E:\\PFE-test\\frontend\\src\\components\\FormProductEdit.jsx":"123","E:\\PFE-test\\frontend\\src\\components\\ProfileAdmin.jsx":"124","E:\\PFE-test\\frontend\\src\\components\\PersonalInfo.jsx":"125","E:\\PFE-test\\frontend\\src\\components\\Activities.jsx":"126","E:\\PFE-test\\frontend\\src\\components\\Consultation.jsx":"127","E:\\PFE-test\\frontend\\src\\components\\TrainingPlan.jsx":"128","E:\\PFE-test\\frontend\\src\\components\\TraineeDetails.jsx":"129"},{"size":616,"mtime":1620751009456,"results":"130","hashOfConfig":"131"},{"size":2527,"mtime":1620491035784,"results":"132","hashOfConfig":"131"},{"size":362,"mtime":1616760778000,"results":"133","hashOfConfig":"131"},{"size":2407,"mtime":1620811199544,"results":"134","hashOfConfig":"131"},{"size":4080,"mtime":1616760778000,"results":"135","hashOfConfig":"131"},{"size":1486,"mtime":1616760778000,"results":"136","hashOfConfig":"131"},{"size":3926,"mtime":1616760778000,"results":"137","hashOfConfig":"131"},{"size":4079,"mtime":1616760778000,"results":"138","hashOfConfig":"131"},{"size":3200,"mtime":1620062340078,"results":"139","hashOfConfig":"131"},{"size":2549,"mtime":1616760778000,"results":"140","hashOfConfig":"131"},{"size":1553,"mtime":1616760778000,"results":"141","hashOfConfig":"131"},{"size":1914,"mtime":1620301940004,"results":"142","hashOfConfig":"131"},{"size":11494,"mtime":1616760778000,"results":"143","hashOfConfig":"131"},{"size":1705,"mtime":1616760778000,"results":"144","hashOfConfig":"131"},{"size":6774,"mtime":1616760778000,"results":"145","hashOfConfig":"131"},{"size":4721,"mtime":1616760778000,"results":"146","hashOfConfig":"131"},{"size":6564,"mtime":1616760778000,"results":"147","hashOfConfig":"131"},{"size":3511,"mtime":1616760778000,"results":"148","hashOfConfig":"131"},{"size":3912,"mtime":1616760778000,"results":"149","hashOfConfig":"131"},{"size":9903,"mtime":1616760778000,"results":"150","hashOfConfig":"131"},{"size":3176,"mtime":1616760778000,"results":"151","hashOfConfig":"131"},{"size":3922,"mtime":1616760778000,"results":"152","hashOfConfig":"131"},{"size":5007,"mtime":1620555104308,"results":"153","hashOfConfig":"131"},{"size":7916,"mtime":1616760778000,"results":"154","hashOfConfig":"131"},{"size":3541,"mtime":1616760778000,"results":"155","hashOfConfig":"131"},{"size":13213,"mtime":1620817695181,"results":"156","hashOfConfig":"131"},{"size":287,"mtime":1616760778000,"results":"157","hashOfConfig":"131"},{"size":1479,"mtime":1616760778000,"results":"158","hashOfConfig":"131"},{"size":1502,"mtime":1616760778000,"results":"159","hashOfConfig":"131"},{"size":458,"mtime":1616760778000,"results":"160","hashOfConfig":"131"},{"size":1240,"mtime":1616760778000,"results":"161","hashOfConfig":"131"},{"size":228,"mtime":1616760778000,"results":"162","hashOfConfig":"131"},{"size":378,"mtime":1616760778000,"results":"163","hashOfConfig":"131"},{"size":984,"mtime":1616760778000,"results":"164","hashOfConfig":"131"},{"size":1008,"mtime":1616760778000,"results":"165","hashOfConfig":"131"},{"size":1419,"mtime":1616760778000,"results":"166","hashOfConfig":"131"},{"size":1593,"mtime":1616760778000,"results":"167","hashOfConfig":"131"},{"size":1886,"mtime":1616760778000,"results":"168","hashOfConfig":"131"},{"size":859,"mtime":1616760778000,"results":"169","hashOfConfig":"131"},{"size":7370,"mtime":1616760778000,"results":"170","hashOfConfig":"131"},{"size":1310,"mtime":1616760778000,"results":"171","hashOfConfig":"131"},{"size":6009,"mtime":1616760778000,"results":"172","hashOfConfig":"131"},{"size":5931,"mtime":1616760778000,"results":"173","hashOfConfig":"131"},{"size":7108,"mtime":1620487925801,"results":"174","hashOfConfig":"131"},{"size":422,"mtime":1620055224723,"results":"175","hashOfConfig":"131"},{"size":870,"mtime":1620729329361,"results":"176","hashOfConfig":"131"},{"size":2270,"mtime":1620575619800,"results":"177","hashOfConfig":"131"},{"size":776,"mtime":1620556134573,"results":"178","hashOfConfig":"131"},{"size":184,"mtime":1620489607807,"results":"179","hashOfConfig":"131"},{"size":916,"mtime":1620556020067,"results":"180","hashOfConfig":"131"},{"size":593,"mtime":1620740035724,"results":"181","hashOfConfig":"131"},{"size":1424,"mtime":1620741067262,"results":"182","hashOfConfig":"131"},{"size":574,"mtime":1620738732599,"results":"183","hashOfConfig":"131"},{"size":739,"mtime":1620754206663,"results":"184","hashOfConfig":"131"},{"size":455,"mtime":1620736581910,"results":"185","hashOfConfig":"131"},{"size":473,"mtime":1620737322629,"results":"186","hashOfConfig":"131"},{"size":724,"mtime":1620739639336,"results":"187","hashOfConfig":"131"},{"size":496,"mtime":1620740572773,"results":"188","hashOfConfig":"131"},{"size":717,"mtime":1621875333322,"results":"189","hashOfConfig":"190"},{"size":362,"mtime":1620790246000,"results":"191","hashOfConfig":"190"},{"size":2744,"mtime":1622386485938,"results":"192","hashOfConfig":"190"},{"size":2556,"mtime":1623017198918,"results":"193","hashOfConfig":"190"},{"size":1460,"mtime":1622292649733,"results":"194","hashOfConfig":"190"},{"size":4029,"mtime":1622385889723,"results":"195","hashOfConfig":"190"},{"size":9047,"mtime":1622386634613,"results":"196","hashOfConfig":"190"},{"size":2562,"mtime":1622382963906,"results":"197","hashOfConfig":"190"},{"size":7223,"mtime":1622758259988,"results":"198","hashOfConfig":"190"},{"size":6849,"mtime":1621605588195,"results":"199","hashOfConfig":"190"},{"size":1793,"mtime":1621520438367,"results":"200","hashOfConfig":"190"},{"size":3282,"mtime":1621520475218,"results":"201","hashOfConfig":"190"},{"size":6954,"mtime":1621722578825,"results":"202","hashOfConfig":"190"},{"size":10221,"mtime":1621522032719,"results":"203","hashOfConfig":"190"},{"size":3533,"mtime":1621876596332,"results":"204","hashOfConfig":"190"},{"size":3912,"mtime":1620790246000,"results":"205","hashOfConfig":"190"},{"size":5007,"mtime":1620790246000,"results":"206","hashOfConfig":"190"},{"size":7916,"mtime":1620790246000,"results":"207","hashOfConfig":"190"},{"size":3541,"mtime":1620790246000,"results":"208","hashOfConfig":"190"},{"size":1914,"mtime":1620790246000,"results":"209","hashOfConfig":"190"},{"size":1486,"mtime":1620790246000,"results":"210","hashOfConfig":"190"},{"size":4080,"mtime":1620790246000,"results":"211","hashOfConfig":"190"},{"size":4211,"mtime":1623019205953,"results":"212","hashOfConfig":"190"},{"size":4079,"mtime":1620790246000,"results":"213","hashOfConfig":"190"},{"size":717,"mtime":1621862159680,"results":"214","hashOfConfig":"190"},{"size":3937,"mtime":1622383342192,"results":"215","hashOfConfig":"190"},{"size":12859,"mtime":1621177450100,"results":"216","hashOfConfig":"190"},{"size":598,"mtime":1621177354991,"results":"217","hashOfConfig":"190"},{"size":458,"mtime":1620790246000,"results":"218","hashOfConfig":"190"},{"size":228,"mtime":1620790246000,"results":"219","hashOfConfig":"190"},{"size":924,"mtime":1621441468224,"results":"220","hashOfConfig":"190"},{"size":1449,"mtime":1621433412074,"results":"221","hashOfConfig":"190"},{"size":1059,"mtime":1621720099364,"results":"222","hashOfConfig":"190"},{"size":1886,"mtime":1620790246000,"results":"223","hashOfConfig":"190"},{"size":332,"mtime":1622384201963,"results":"224","hashOfConfig":"190"},{"size":1310,"mtime":1620790246000,"results":"225","hashOfConfig":"190"},{"size":6057,"mtime":1621864822101,"results":"226","hashOfConfig":"190"},{"size":5931,"mtime":1620790246000,"results":"227","hashOfConfig":"190"},{"size":182,"mtime":1620790246000,"results":"228","hashOfConfig":"190"},{"size":287,"mtime":1620790246000,"results":"229","hashOfConfig":"190"},{"size":7197,"mtime":1623017966047,"results":"230","hashOfConfig":"190"},{"size":1502,"mtime":1620790246000,"results":"231","hashOfConfig":"190"},{"size":1240,"mtime":1620790246000,"results":"232","hashOfConfig":"190"},{"size":1678,"mtime":1623016823256,"results":"233","hashOfConfig":"190"},{"size":1599,"mtime":1621518099152,"results":"234","hashOfConfig":"190"},{"size":479,"mtime":1620790246000,"results":"235","hashOfConfig":"190"},{"size":706,"mtime":1620790246000,"results":"236","hashOfConfig":"190"},{"size":2191,"mtime":1620790246000,"results":"237","hashOfConfig":"190"},{"size":841,"mtime":1620790246000,"results":"238","hashOfConfig":"190"},{"size":456,"mtime":1620790246000,"results":"239","hashOfConfig":"190"},{"size":718,"mtime":1620790246000,"results":"240","hashOfConfig":"190"},{"size":556,"mtime":1620790246000,"results":"241","hashOfConfig":"190"},{"size":407,"mtime":1620790246000,"results":"242","hashOfConfig":"190"},{"size":818,"mtime":1621862130036,"results":"243","hashOfConfig":"190"},{"size":438,"mtime":1620790246000,"results":"244","hashOfConfig":"190"},{"size":3200,"mtime":1620790246000,"results":"245","hashOfConfig":"190"},{"size":860,"mtime":1622293110092,"results":"246","hashOfConfig":"190"},{"size":7499,"mtime":1622759312983,"results":"247","hashOfConfig":"190"},{"size":3830,"mtime":1622226035258,"results":"248","hashOfConfig":"190"},{"size":406,"mtime":1622231765857,"results":"249","hashOfConfig":"190"},{"size":9341,"mtime":1623024981306,"results":"250","hashOfConfig":"190"},{"size":13303,"mtime":1622302409115,"results":"251","hashOfConfig":"190"},{"size":977,"mtime":1597354944000,"results":"252","hashOfConfig":"190"},{"size":1363,"mtime":1597354944000,"results":"253","hashOfConfig":"190"},{"size":2145,"mtime":1621966293376,"results":"254","hashOfConfig":"190"},{"size":6115,"mtime":1622216893282,"results":"255","hashOfConfig":"190"},{"size":3049,"mtime":1622709992729,"results":"256","hashOfConfig":"190"},{"size":3982,"mtime":1622668621320,"results":"257","hashOfConfig":"190"},{"size":4432,"mtime":1622669989939,"results":"258","hashOfConfig":"190"},{"size":2003,"mtime":1622670763473,"results":"259","hashOfConfig":"190"},{"size":5237,"mtime":1623025024811,"results":"260","hashOfConfig":"190"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},"1x9vvrj",{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"263"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"263"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"263"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"263"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"263"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"263"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"263"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"263"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"263"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"263"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"263"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"263"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"263"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"263"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"263"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"263"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"263"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"263"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"263"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"263"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"263"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"263"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"405"},"1ecs3li",{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"405"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"405"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"405"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"405"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"405"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"405"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"405"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"405"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"405"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"405"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"405"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"405"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"405"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"405"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"405"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"405"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"405"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"405"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"405"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"405"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"405"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"405"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"405"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"405"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"405"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"405"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"405"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"405"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"548","messages":"549","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"405"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"555","messages":"556","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"405"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"405"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"405"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"405"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"405"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"405"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\index.js",[],["575","576"],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\store.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\App.js",["577"],"import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport FoodAiScreen from './screens/FoodAiScreen'\nimport HomePageScreen from './screens/HomePageScreen/HomePageScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <main className=\"py-3\">\n        \n          <Route path='/gym' component={HomePageScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/foodai' component={FoodAiScreen}/>  \n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n      \n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Header.js",["578"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction Header() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>ProShop</Navbar.Brand>\n                    </LinkContainer>\n\n                    <LinkContainer to='/foodai'>\n                        <Navbar.Brand>Food AI</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox />\n                        <Nav className=\"ml-auto\">\n\n                            <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown title={userInfo.name} id='username'>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                    <LinkContainer to='/login'>\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                    </LinkContainer>\n                                )}\n\n\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n",["579","580"],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\HomeScreen.js",["581"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    let keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && <ProductCarousel />}\n\n            <h1>Latest Products</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                        <Row>\n                            {products.map(product => (\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                    <Product product={product} />\n                                </Col>\n                            ))}\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Footer.js",["582","583","584","585","586","587"],"import React from \"react\";\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <div>\n        <section className=\"contact-area\" id=\"contact\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-lg-6 offset-lg-3\">\n                    <div className=\"contact-content text-center\">\n                        <a href=\"#\">\n                            <img src=\"https://i.ibb.co/QDy827D/ak-logo.png\" alt=\"logo\"/>\n                        </a>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis ipsum </p>\n                        <div className=\"hr\"></div>\n                        <h6>1120 Lorem ipsum dolor sit amet, KC 179050, Chandigarh.</h6>\n                        <h6>+01 2345 6789 12<span>|</span>+01 2345 6789 12</h6>\n                        <div className=\"contact-social\">\n                            <ul>\n                                <li><a className=\"hover-target\" href=\"\"><i className=\"fab fa-facebook-f\"></i></a></li>\n                                <li><a className=\"hover-target\" href=\"\"><i className=\"fab fa-linkedin-in\"></i></a></li>\n                                <li><a className=\"hover-target\" href=\"\"><i className=\"fab fa-github\"></i></a></li>\n                                <li><a className=\"hover-target\" href=\"\"><i className=\"fab fa-behance\"></i></a></li>\n                                <li><a className=\"hover-target\" href=\"\"><i className=\"fab fa-pinterest-p\"></i></a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <footer>\n        <p>Copyright &copy; 2019 <img src=\"https://i.ibb.co/QDy827D/ak-logo.png\" alt=\"logo\"/> All Rights Reserved.</p>\n    </footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductScreen.js",["588"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\PaymentScreen.js",["589"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProfileScreen.js",["590","591"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\PlaceOrderScreen.js",["592","593"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\UserListScreen.js",["594"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\UserEditScreen.js",["595"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\OrderScreen.js",["596"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ShippingScreen.js",["597"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\RegisterScreen.js",["598"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductListScreen.js",["599"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\OrderListScreen.js",["600"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\FoodAiScreen.jsx",["601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616"],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Message.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Product.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\userActions.js",["617"],"import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\orderActions.js",["618","619","620"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\productActions.js",["621"],"import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodTable\\FoodTable.jsx",["622"],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodRecognition\\FoodRecognition.jsx",["623","624"],"import React from 'react'\r\nimport './FoodRecognition.css'\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nfunction FoodRecognition({imageUrl}) {\r\n    return (\r\n        <div className='center ma centred'>\r\n            <div className='absolute mt2 center'>\r\n            <img className='inputimage'  src={imageUrl} width='500px' height='auto'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodRecognition\r\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\ImageLinkForm\\ImageLinkForm.jsx",["625","626"],"import React,{useState} from 'react'\r\nimport './ImageLinkForm.css'\r\n\r\nfunction ImageLinkForm({onInputChange,onButtonSubmit}) {\r\n\r\n\r\n    const fileSelectedHandler = (e) => {\r\n        console.log(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p className='f3 c foodP'>\r\n                {'This Food Ai will classify your food'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n                    <button\r\n                    className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}\r\n                    >Detect</button>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm\r\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FoodTableR\\FoodTableR.jsx",["627","628","629","630","631"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Message from \"../../components/Message\";\r\nimport { foodNutritionList } from \"../../actions/foodAction\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./FoodTableR.css\";\r\n\r\nfunction FoodTableR({result}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const foodNutrition = useSelector((state) => state.foodNutrition);\r\n  const {success, error, loading, nutritions } = foodNutrition;\r\n\r\n  \r\n  console.log(result);\r\n\r\n  useEffect(()=>{\r\n    if(result)\r\n    {console.log(\"useEffect trigred\");\r\n    console.log('state', loading, success)\r\n    // console.log('function',  foodNutritionList(result))\r\n    if(result){\r\n      dispatch(foodNutritionList(result));}\r\n    } else{\r\n      dispatch(foodNutritionList(\"pizza\"));\r\n    }\r\n   \r\n\r\n    \r\n  },[result])\r\n\r\n   useEffect(() => {\r\n      if (!loading && success){\r\n    console.log(\"nutritions : \",nutritions[0]);\r\n    console.log(\"sugar : \",nutritions[0].sugar_g);\r\n    }else if(!(loading && success)){\r\n      console.log(\"error\",error);\r\n    }\r\n   }, [success])\r\n\r\n  return (\r\n    <div>\r\n       {loading && <Loader />}\r\n       <div className='item'>\r\n        <div className='item-top'>\r\n          <div className='item-head'>\r\n            <h4>{nutritions[0]?.name}</h4>\r\n          </div>\r\n          \r\n          <div className='item-content'>\r\n            \r\n            <div className='item-info'>\r\n              <span className='item-info-a'>{nutritions[0]?.calories}</span>\r\n              <span className='item-info-b'>Calories</span>\r\n            </div>\r\n            \r\n            <div className='item-info'>\r\n              <span className='item-info-a'>{nutritions[0]?.carbohydrates_total_g}</span>\r\n              <span className='item-info-b'>Carbs</span>\r\n            </div>\r\n            \r\n            <div className='item-info'>\r\n              <span className='item-info-a'>{nutritions[0]?.protein_g}</span>\r\n              <span className='item-info-b'>Protein</span>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n        \r\n     \r\n      </div> \r\n      \r\n      {console.log(\"object\")}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoodTableR;\r\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\reducers\\FoodReducer.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\constants\\foodConstant.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\actions\\foodAction.js",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\screens\\HomePageScreen\\HomePageScreen.jsx",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\NavBar.jsx",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Headers.jsx",["632"],"import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div id=\"heading\">\r\n            <div className='pr-heading'>\r\n                <h1 className='h2-header'>SETUP UP YOUR</h1>\r\n                <h1><span className='span-header'>FITNESS</span> WITH US</h1>\r\n                <p className='details'>Build Your Body And Fitness With Professional Traier</p>\r\n                <div className='pr-btns'>\r\n                    <a href=\"#\" className='pr-btn'>JOIN US</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Feature.jsx",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\FeaturesBox.jsx",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Offer.jsx",["633"],"import React from 'react'\r\n\r\nfunction Offer() {\r\n    return (\r\n        <div id='offer'>\r\n            <div className='pr-heading'>\r\n                <h1>A big <span>Offer</span> FOR THIS SUMMER</h1>\r\n                <p className='details'>Lorem ipsum dolor sit amet </p> \r\n                <div className='pr-btns'>\r\n                    <a href=\"#\" className='pr-btn'>JOIN NOW</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Offer\r\n","C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\About.jsx",[],"C:\\Users\\ramy\\Desktop\\Personal_Trainer\\frontend\\src\\components\\Contact.jsx",[],"E:\\PFE-test\\frontend\\src\\index.js",["634","635"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["636","637"],"E:\\PFE-test\\frontend\\src\\reportWebVitals.js",[],"E:\\PFE-test\\frontend\\src\\App.js",["638","639","640","641"],"import { Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport FoodAiScreen from \"./screens/FoodAiScreen\";\nimport HomePageScreen from \"./screens/HomePageScreen/HomePageScreen\";\nimport Dashboard from \"./screens/Dashboard\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <Router>\n      {window.location.href.split(\"/\")[4] === \"dashboard\" ? \"\" : <NavBar />}\n\n      <main className=\" mt-5 py-3-main\">\n        <Route path=\"/dashboard\" component={Dashboard} exact />\n        <Route path=\"/gym\" component={HomePageScreen} exact />\n        <Route path=\"/\" component={HomeScreen} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route path=\"/profile\" component={ProfileScreen} />\n        <Route path=\"/shipping\" component={ShippingScreen} />\n        <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n        <Route path=\"/order/:id\" component={OrderScreen} />\n        <Route path=\"/payment\" component={PaymentScreen} />\n        <Route path=\"/product/:id\" component={ProductScreen} />\n        <Route path=\"/cart/:id?\" component={CartScreen} />\n        <Route path=\"/foodai\" component={FoodAiScreen} />\n        <Route path=\"/admin/userlist\" component={UserListScreen} />\n        <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n\n        <Route path=\"/admin/productlist\" component={ProductListScreen} />\n        <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n\n        <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n      </main>\n\n      {window.location.href.split(\"/\")[4] === \"dashboard\" ? \"\" : <Footer />}\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\PFE-test\\frontend\\src\\store.js",[],"E:\\PFE-test\\frontend\\src\\screens\\HomeScreen.js",["642"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport SearchBox from \"../components/SearchBox\";\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport { listProducts } from \"../actions/productActions\";\n\nfunction HomeScreen({ history }) {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products, page, pages } = productList;\n\n  let keyword = history.location.search;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword));\n  }, [dispatch, keyword]);\n\n  return (\n    <div>\n      {!keyword && <ProductCarousel />}\n      <SearchBox />\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Container>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate page={page} pages={pages} keyword={keyword} />\n        </Container>\n      )}\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","E:\\PFE-test\\frontend\\src\\screens\\CartScreen.js",[],"E:\\PFE-test\\frontend\\src\\screens\\ProductScreen.js",["643"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  Form,\n  Container,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\n\nfunction ProductScreen({ match, history }) {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <h3>{product.name}</h3>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n\n            {/* <Col md={3}>\n                                    <ListGroup variant=\"flush\" className='custom-d'>\n                                        <ListGroup.Item className='custom-d'>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item className='custom-d'>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item className='custom-d'>\n                                            Price: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item md={6} className='custom-d'>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col> */}\n            <Col md={2}></Col>\n\n            <Col md={3}>\n              <Card className=\"custom-d br4\">\n                <ListGroup className=\"custom-d\" variant=\"flush\">\n                  <ListGroup.Item className=\"custom-d\">\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item className=\"custom-d\">\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item className=\"custom-d\">\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col xs=\"auto\" className=\" my-1\">\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item className=\"custom-d\">\n                    <Rating\n                      value={product.rating}\n                      text={`${product.numReviews} reviews`}\n                      color={\"#f8e825\"}\n                    />\n                  </ListGroup.Item>\n                  <ListGroup.Item className=\"custom-d\">\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      disabled={product.countInStock == 0}\n                      type=\"button\"\n                    >\n                      Add to Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <h4>Description :</h4>\n            <Col md={8} className=\"custom-d ml-3 mb-5 mt-3 br4\">\n              {product.description}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <h4>Reviews</h4>\n              {product.reviews.length === 0 && (\n                <Message variant=\"info\">No Reviews</Message>\n              )}\n\n              <ListGroup variant=\"flush\" className=\"custom-d br4 \">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id} className=\"custom-d\">\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} color=\"#f8e825\" />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n\n                <ListGroup.Item className=\"custom-d\">\n                  <h4>Write a review</h4>\n\n                  {loadingProductReview && <Loader />}\n                  {successProductReview && (\n                    <Message variant=\"success\">Review Submitted</Message>\n                  )}\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"5\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n\n                      <Button\n                        className=\"btn-block\"\n                        disabled={loadingProductReview}\n                        type=\"submit\"\n                        variant=\"primary\"\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant=\"info\">\n                      Please <Link to=\"/login\">login</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default ProductScreen;\n","E:\\PFE-test\\frontend\\src\\screens\\LoginScreen.js",[],"E:\\PFE-test\\frontend\\src\\screens\\RegisterScreen.js",["644","645"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button as ButtonB, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { register, traineeInfo } from \"../actions/userActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BasicButtonGroup from \"../components/PersonalInfo\";\nimport Activities from \"../components/Activities\";\nimport Consultation from \"../components/Consultation\";\nimport TrainingPlan from \"../components/TrainingPlan\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"black\",\n    width: \"100%\",\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    backgroundColor: \"black\",\n  },\n}));\n\nfunction getSteps() {\n  return [\n    \"setting up your account\",\n    \"Personal Info\",\n    \"Your Activities\",\n    \"Your Objectives\",\n    \"Training Plan\",\n  ];\n}\n\nfunction RegisterScreen({ location, history }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { error, loading, userInfo } = userRegister;\n\n  const UserTrainee = useSelector((state) => state.UserTrainee);\n  const { trainee } = UserTrainee;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  useEffect(() => {\n    dispatch(traineeInfo({ ...trainee, name, email, password }));\n  }, [name, email, password]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      console.log(trainee);\n      dispatch(register(trainee));\n    }\n  };\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <div>\n            <h1>Sign Up</h1>\n            {message && <Message variant=\"danger\">{message}</Message>}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"name\"\n                  placeholder=\"Enter name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  required\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  required\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"passwordConfirm\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  required\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              {/* <ButtonB type=\"submit\" variant=\"primary\">\n                Register\n              </ButtonB> */}\n            </Form>\n          </div>\n        );\n      case 1:\n        return <BasicButtonGroup />;\n      case 2:\n        return <Activities />;\n      case 3:\n        return <Consultation />;\n      case 4:\n        return <TrainingPlan />;\n      default:\n        return \"Unknown stepIndex\";\n    }\n  }\n\n  return (\n    <div className=\"login-header mt-5\">\n      <FormContainer>\n        <div className=\"login-form pl-5 pr-5 pb-5 pt-1 mt-5\">\n          <div className={classes.root}>\n            <Stepper activeStep={activeStep} alternativeLabel>\n              {steps.map((label) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <div>\n              {activeStep === steps.length ? (\n                <div>\n                  <Typography className={classes.instructions}>\n                    All steps completed\n                  </Typography>\n                  <Button onClick={handleReset}>Reset</Button>\n                </div>\n              ) : (\n                <div>\n                  <Typography className={classes.instructions}>\n                    {getStepContent(activeStep)}\n                  </Typography>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.backButton}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <Row className=\"py-3\">\n            <Col>\n              Have an Account?{\" \"}\n              <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n                Sign In\n              </Link>\n            </Col>\n          </Row>\n        </div>\n      </FormContainer>\n      <ButtonB type=\"submit\" variant=\"primary\" onClick={submitHandler}>\n        Register\n      </ButtonB>\n    </div>\n  );\n}\n\nexport default RegisterScreen;\n","E:\\PFE-test\\frontend\\src\\screens\\ProfileScreen.js",["646","647"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table , Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Container className=\"mt-5 mb-5\">\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n        </Container>\n    )\n}\n\nexport default ProfileScreen","E:\\PFE-test\\frontend\\src\\screens\\PaymentScreen.js",["648"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <div className='custom-d p-5 br3'>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary' className='btn-block '>\n                    Continue\n                </Button>\n            </Form>\n            </div>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","E:\\PFE-test\\frontend\\src\\screens\\ShippingScreen.js",["649"],"import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer className=\"mb-5\">\n            <CheckoutSteps step1 step2 />\n            <div className=\"custom-d p-5 br4\">\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary' className=\"btn-block \">\n                    Continue\n                </Button>\n            </Form>\n            </div>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","E:\\PFE-test\\frontend\\src\\screens\\PlaceOrderScreen.js",["650","651"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <Container>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row className=\"mt-5 mb-5 \">\n                <Col md={8} className=\"br4\">\n                    <ListGroup variant='flush' className='custom-d br3'>\n                        <ListGroup.Item className='custom-d'>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item className='custom-d'>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item className='custom-d'>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush' className='custom-d'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index} className='custom-d'>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card className='custom-d br5 '>\n                        <ListGroup variant='flush' className='custom-d br3'>\n                            <ListGroup.Item className='custom-d'>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item className='custom-d'>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item className='custom-d'>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item className='custom-d'>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item className='custom-d'>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item className='custom-d'>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item className='custom-d'>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default PlaceOrderScreen\n","E:\\PFE-test\\frontend\\src\\screens\\OrderScreen.js",["652"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <Container>\n                    <h1>Order: {order.Id}</h1>\n                    <Row className=\"mb-5\">\n                        <Col md={8}>\n                            <ListGroup variant='flush' >\n                                <ListGroup.Item className='custom-d'>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item className='custom-d'>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item className='custom-d'>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush' className='custom-d'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index} className='custom-d'>\n                                                        <Row >\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4} >\n                            <Card >\n                                <ListGroup variant='flush' className='custom-d'>\n                                    <ListGroup.Item className='custom-d'>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item className='custom-d'>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item >\n\n                                    <ListGroup.Item className='custom-d'>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item className='custom-d'>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item className='custom-d'>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item className='custom-d'>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item className='custom-d'>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n}\n\nexport default OrderScreen\n","E:\\PFE-test\\frontend\\src\\screens\\UserListScreen.js",["653"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button,Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <Container>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </Container>\n    )\n}\n\nexport default UserListScreen\n","E:\\PFE-test\\frontend\\src\\screens\\UserEditScreen.js",["654"],"E:\\PFE-test\\frontend\\src\\screens\\ProductListScreen.js",["655"],"E:\\PFE-test\\frontend\\src\\screens\\ProductEditScreen.js",[],"E:\\PFE-test\\frontend\\src\\screens\\OrderListScreen.js",["656"],"E:\\PFE-test\\frontend\\src\\components\\Footer.js",["657","658","659","660","661","662"],"E:\\PFE-test\\frontend\\src\\reducers\\cartReducers.js",[],"E:\\PFE-test\\frontend\\src\\reducers\\productReducers.js",[],"E:\\PFE-test\\frontend\\src\\reducers\\userReducers.js",[],"E:\\PFE-test\\frontend\\src\\reducers\\orderReducers.js",[],"E:\\PFE-test\\frontend\\src\\reducers\\FoodReducer.js",[],"E:\\PFE-test\\frontend\\src\\components\\NavBar.jsx",["663","664","665","666","667"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport logo from \"../images/logo.png\";\nimport { Link } from \"react-scroll\";\nimport { Link as LinkR } from \"react-router-dom\";\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { logout } from \"../actions/userActions\";\nimport SearchBox from \"./SearchBox\";\nfunction NavBar() {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  const [nav, setNav] = useState(false);\n\n  const changeBackground = () => {\n    if (window.scrollY >= 50) {\n      setNav(true);\n    } else {\n      setNav(false);\n    }\n  };\n  window.addEventListener(\"scroll\", changeBackground);\n\n  return (\n    <nav className={nav ? \"nav active\" : \"nav\"}>\n      <LinkR to=\"/gym\" className=\"logo\">\n        <img src={logo} alt=\"\" />\n      </LinkR>\n      <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\n      <label className=\"menu-icon\" for=\"menu-btn\">\n        <span className=\"nav-icon\"></span>\n      </label>\n      <ul className=\"menu\">\n        {/* <li className='nav-li'><Link to='features' smooth={true} duration={1000}>Features</Link></li>\n                <li className='nav-li'><Link to='offer' smooth={true} duration={1000}>Offer</Link></li> */}\n        {/* <li className=\"nav-li\">\n          <Link to=\"about\" smooth={true} duration={1000}>\n            About\n          </Link>\n        </li> */}\n        <li className=\"nav-li foodai-li\">\n          <LinkR className=\"foodai-li\" to=\"/foodai\">\n            FoodAi\n          </LinkR>\n        </li>\n        <li className=\"nav-li foodai-li\">\n          <LinkR className=\"foodai-li\" to=\"/\">\n            Shop\n          </LinkR>\n        </li>\n        <li className=\"nav-li\">\n          <LinkR className=\"foodai-li\" to=\"/cart\">\n            <i className=\"fas fa-shopping-cart\"></i>\n          </LinkR>\n        </li>\n        <li className=\"nav-li\">\n          <Link to=\"contact\" smooth={true} duration={1000}>\n            Contact\n          </Link>\n        </li>\n\n        {userInfo && !userInfo.isAdmin && (\n          <NavDropdown title={userInfo.name} id=\"username\">\n            <LinkContainer to=\"/profile\" className=\"NavDropdown\">\n              <NavDropdown.Item>Profile</NavDropdown.Item>\n            </LinkContainer>\n\n            <NavDropdown.Item className=\"NavDropdown\" onClick={logoutHandler}>\n              Logout\n            </NavDropdown.Item>\n          </NavDropdown>\n        )}\n\n        {!userInfo && (\n          <LinkContainer to=\"/login\">\n            <li className=\"nav-li foodai-li\">\n              <LinkR className=\"foodai-li\" to=\"/login\">\n                LogIn\n              </LinkR>\n            </li>\n          </LinkContainer>\n        )}\n\n        {userInfo && userInfo.isAdmin && (\n          <NavDropdown title=\"Admin\" id=\"adminmenue\">\n            <LinkContainer to=\"/dashboard\">\n              <NavDropdown.Item>Dashboard</NavDropdown.Item>\n            </LinkContainer>\n            <NavDropdown.Item className=\"NavDropdown\" onClick={logoutHandler}>\n              Logout\n            </NavDropdown.Item>\n            <LinkContainer to=\"/admin/userlist\">\n              <NavDropdown.Item>Users</NavDropdown.Item>\n            </LinkContainer>\n\n            <LinkContainer to=\"/admin/productlist\">\n              <NavDropdown.Item>Products</NavDropdown.Item>\n            </LinkContainer>\n\n            <LinkContainer to=\"/admin/orderlist\">\n              <NavDropdown.Item>Orders</NavDropdown.Item>\n            </LinkContainer>\n          </NavDropdown>\n        )}\n        {/* <LinkContainer to='/cart'>\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                </LinkContainer> */}\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","E:\\PFE-test\\frontend\\src\\screens\\FoodAiScreen.jsx",["668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683"],"import React, { useState } from \"react\";\nimport ImageLinkForm from \"../components/ImageLinkForm/ImageLinkForm\";\nimport Particles from \"react-particles-js\";\nimport FoodRecognition from \"../components/FoodRecognition/FoodRecognition\";\nimport { useDropzone } from \"react-dropzone\";\nimport {Link} from 'react-scroll'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./FoodAiScreen.css\";\nimport image1 from \"../images/Image1.jpeg\";\nimport image2 from \"../images/Image2.jpeg\";\nimport image3 from \"../images/Image3.jpeg\";\nimport image4 from \"../images/Image4.jpeg\";\nimport image5 from \"../images/Image5.jpeg\";\nimport image6 from \"../images/Image6.jpeg\";\nimport upload from \"../images/upload-photo.png\";\nimport analimg from \"../images/analytique.png\";\nimport { Button,Alert,Spinner } from \"react-bootstrap\";\nimport axios from 'axios'\nimport FoodTableR from \"../components/FoodTableR/FoodTableR\";\n\n\nfunction FoodAiScreen() {\n  const [result,setResult] = useState('');\n  const [display, setDisplay] = useState(true);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [send,setSend] = useState(false)\n\n\n  const blobToBase64 = (blob) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    return new Promise((resolve) => {\n      reader.onloadend = () => {\n        resolve(reader.result); \n      };\n    });\n  };\n\n  const onUploadButton = () =>{\n    blobToBase64(Image[0]).then((res) => {\n        sendData(res);\n      });\n  }\n\n  const sendData = (c) => {\n    setSend(true)\n    console.log(\"send_true : \",send);\n    // sending data to machine learning model \n    //test\n    const headers = {\n        'accept' : 'application/json'\n    }\n\n    const fd = new FormData()\n    fd.append('image',c)\n\n    axios.post('/api/foodai/food/',fd,{headers: headers})\n    .then(res => {\n        console.log(\"sending data :      \",res.data)\n        \n        getImageResult(res.data.id)\n        setSend(false)\n        console.log(\"send : \",send);\n        \n    })\n    .catch(err => console.log(err))\n\n    //getting result from model \n\n    const getImageResult = (id) =>{\n      axios.get(`/api/foodai/food/${id}`)\n      .then(res => {\n          console.log(\"receiving data :      \",res.data)\n          \n          setResult(res.data.result)\n      })\n      .catch(err => console.log(err))\n    }\n\n\n  };\n\n  const imageHandler =(e) => {\n    console.log(e.target.files[0]);\n  }\n\n  const onInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const onButtonSubmit = () => {\n    setImageUrl(input);\n    console.log(imageUrl);\n  };\n\n  const uploadImage = async (e) => {\n    console.log(e);\n  };\n\n  const convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  const [Image, setImage] = useState([]);\n  const { getRootProps, getInputProps, isDragAActive } = useDropzone({\n    accept: \"image/*\",\n    onDrop: (acceptedFiles) => {\n      setImage(\n        acceptedFiles.map((upFile) =>\n          Object.assign(upFile, {\n            preview: URL.createObjectURL(upFile),\n          })\n        )\n      );\n    },\n  });\n\n  const hideDropBox = () =>{\n    setDisplay(false)\n    console.log('object');\n  }\n\n  return (\n    <div className=\"foodaiscreen\">\n\n    \n        \n      <Particles className='particles'\n              params={{\n            \t\tparticles: {\n            \t\t\tnumber: {\n                            value: 70,\n                            density: {\n                              enable: true,\n                                 value_area: 700  \n                            }\n                          },\n                          color : \"#ff0000\",\n                          line_linked: {\n                              \n            \t\t\t\tshadow: {\n            \t\t\t\t\tenable: false,\n            \t\t\t\t    color: \"#ff0000\",\n            \t\t\t\t\tblur: 5\n            \t\t\t\t}\n            \t\t\t},\n                          \n                          \n            \t\t}\n            \t}}\n                style={{\n                    width: '100%',\n                    position: \"fixed\",\n                    top: \"0\",\n                    right: \"0\",\n                    bottom: \"0\",\n                    left: \"0\",\n                    // z-index: \"-1\"\n                  }}\n              \n            />\n     \n      <div className=\"center-content api-demo\" id=\"cm_api-fullpage\">\n        <div className=\"section cm_fullheight\">\n          <div className=\"cm_fullheight_center\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-sm-12 features\">\n                  <h1>Features</h1>\n                  <Link to='try' smooth={true} duration={1000}>\n                    <div className='pr-btns'>\n                      <span  className=' button-big animate-scroll pr-btn pr-btn-foodai ' >Try Food AI</span>\n                    </div>\n                  </Link>\n                  \n\n                \n                  <hr />\n                </div>\n              </div>\n              <div className=\"row feature-list\">\n                <div className=\"col-sm-6 col-xs-12 feature\">\n                <i class=\"fas fa-search\"></i>\n                  <h2>Precise Recognition of Food</h2>\n                  <p>\n                    <b>Food AI</b> API utilizes highly trained models that are\n                    not only able to recognize a variety of dishes but has the\n                    granularity to differentiate between different presentation\n                    style, preparation methods, and regional variations.\n                  </p>\n                </div>\n\n                <div className=\"col-sm-6  col-xs-12 feature\">\n                <i class=\"fas fa-atom\"></i>\n                  <h2>Perpetually Evolving Food Identification</h2>\n                  <p>\n                    Food AI API is developed with the latest in machine learning\n                    techniques. With every photo we are able to continuously\n                    improve the accuracy of Food AI API by immediately piping\n                    those photos into our training sets.\n                  </p>\n                </div>\n              </div>\n              <div className=\"row feature-list\">\n                <div className=\"col-sm-6  col-xs-12 feature\">\n                <i class=\"fas fa-pizza-slice\"></i>\n                  <h2>Highly Diverse Food Database</h2>\n                  <p>\n                    Our database encompasses many regional and ethnic specialty\n                    food items. Never before has it been possible to receive\n                    analysis on such a wide selection of foods.\n                  </p>\n                </div>\n\n                <div className=\"col-sm-6  col-xs-12 feature\">\n                <i class=\"fas fa-chart-bar\"></i>\n                  <h2>Rapid Analysis</h2>\n                  <p>\n                    Within a second a photo can become a highly detailed food\n                    profile complete with nutrition information and soon even\n                    more.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"section\" id=\"try\">\n          <div className=\"container\">\n            \n            <div className=\"row api-demo\">\n              <div className=\"col-sm-7\">\n                <h5>You can upload your photo</h5>\n\n                <div className=\"image-dropbox\" onChange={() => {setDisplay(false); console.log(\"display : \",display)}}>\n                    {display && <div \n                    className=\"placeholder\"\n                    {...getRootProps()}\n                    style={{ display: { display } ? \"block\" : \"none\" }}\n                  >\n                    <img src={upload} />\n                    <input {...getInputProps()}  />\n                    {isDragAActive ? (\n                      <p>Drop the Image here ...</p>\n                    ) : (\n                      <p>Add your image here  </p>\n                    )}\n                  </div>}\n                  <h3>{result}</h3>\n                  <div className=\"previews\" onChange={hideDropBox}>\n                    {Image.map((upFile) => {\n                    //   blobToBase64(Image[0]).then((res) => {\n                    //     sendData(res);\n                    //   });\n                      return (\n                        <img\n                          key={Math.floor(Math.random() * 10)}\n                          src={upFile.preview}\n                          style={{\n                            width: \"639.5px\",\n                            height: \"353px\",\n                            border: \"3px solid #ccc\",\n                          }}\n                          alt=\"preview\"\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n\n                <div className=\"upload-section \">\n                  <a className=\"fileUpload button\" {...getRootProps()} >\n                    <input {...getInputProps()} />\n                    {isDragAActive ? (\n                      <p>Drop the Image here ...</p>\n                    ) : (\n                      <p style={{ color: \"white\", marginBottom: \"0\" }}>\n                        Upload{\" \"} \n                      </p>\n                    )}\n                  </a>\n                  \n                  <Button variant=\"primary\" onClick={onUploadButton}>\n                  {send && <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\" \n                    aria-hidden=\"true\"\n                  />}{'    '}\n                    {send ? '...Loading' : 'Send'}\n                    \n                    </Button>\n                  <br />\n                  <br />\n\n                  <p clas=\"notice\">\n                    Note: By uploading files here you agree to have them\n                    temporarily stored in our training dataset to make it better for you \n                  </p>\n                </div>\n                <div className=\"url-section\">URL Section</div>\n              </div>\n              <div className=\"col-sm-4 col-sm-offset-1\">\n                <div className=\"row api-results\">\n                  <div className=\"col-xs-12\">\n                    <script type=\"text/html\" id=\"result-template\">\n                      <div className=\"food-group\" data-role=\"collapsible\">\n                        <h4>\n                          <div className=\"score\"></div>\n                          <div className=\"group-name\">Fruit</div>\n                        </h4>\n                        <div className=\"food-list\">\n                          <div className=\"food-item\">\n                            <span className=\"item-name\">Banana</span>{\" \"}\n                            <span className=\"serving-size\"></span>\n                            <span className=\"calories\"></span>\n                          </div>\n                        </div>\n                      </div>\n                    </script>\n\n                    <div id=\"test-result\" style={{ display: \"none\" }}>\n                      <h5>Food AI </h5>\n                      <div className=\"recognizing-status\">Recognizing...</div>\n                      <div className=\"result-content\"></div>\n                    </div>\n                  </div>\n                  <div className=\"col-xs-12\" id=\"json-result\"></div>\n                </div>\n\n                <div className=\"row example-images\">\n                <div className=\"col-xs-12\">\n                    <h5>result</h5>\n                    {console.log(\"im in parent\",result)}\n                    <FoodTableR result={result} />\n                  </div>  \n                \n                  <div className=\"col-xs-12\">\n                    <h5>TRY WITH EXAMPLE IMAGES</h5>\n                  </div>\n                  <div className=\"col-xl-6\">\n                    <img src={image1} />\n                  </div>\n                  <div className=\"col-xl-6 \">\n                    <img src={image2} />\n                  </div>\n                  <div className=\"col-xl-6\">\n                    <img src={image3} />\n                  </div>\n                  <div className=\"col-xl-6\">\n                    <img src={image4} />\n                  </div>\n                  {/* <div className=\"col-xl-6\">\n                    <img src={image5} />\n                  </div>\n                  <div className=\"col-xl-6\">\n                    <img src={image6} />\n                  </div> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FoodAiScreen;\n","E:\\PFE-test\\frontend\\src\\screens\\HomePageScreen\\HomePageScreen.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\Loader.js",[],"E:\\PFE-test\\frontend\\src\\components\\Message.js",[],"E:\\PFE-test\\frontend\\src\\components\\Paginate.js",[],"E:\\PFE-test\\frontend\\src\\components\\ProductCarousel.js",[],"E:\\PFE-test\\frontend\\src\\components\\Product.js",["684"],"import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nfunction Product({ product }) {\n    return (\n        <Card className=\"my-3 p-3 rounded br3 \" className='custom-dd' >\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} />\n            </Link>\n\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title className=\"card-title\" as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                    </div>\n                </Card.Text>\n\n\n                <Card.Text as=\"h3\">\n                    ${product.price}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","E:\\PFE-test\\frontend\\src\\components\\Rating.js",[],"E:\\PFE-test\\frontend\\src\\components\\FormContainer.js",[],"E:\\PFE-test\\frontend\\src\\actions\\cartActions.js",[],"E:\\PFE-test\\frontend\\src\\actions\\orderActions.js",["685","686","687"],"import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n        \n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n        console.log('finish call api')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","E:\\PFE-test\\frontend\\src\\actions\\productActions.js",["688"],"E:\\PFE-test\\frontend\\src\\constants\\foodConstant.js",[],"E:\\PFE-test\\frontend\\src\\constants\\cartConstants.js",[],"E:\\PFE-test\\frontend\\src\\actions\\userActions.js",["689"],"E:\\PFE-test\\frontend\\src\\constants\\productConstants.js",[],"E:\\PFE-test\\frontend\\src\\constants\\orderConstants.js",[],"E:\\PFE-test\\frontend\\src\\constants\\userConstants.js",[],"E:\\PFE-test\\frontend\\src\\components\\CheckoutSteps.js",[],"E:\\PFE-test\\frontend\\src\\components\\Contact.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\About.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\FoodTableR\\FoodTableR.jsx",["690","691","692","693","694"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { foodNutritionList } from \"../../actions/foodAction\";\nimport { Button } from \"react-bootstrap\";\nimport \"./FoodTableR.css\";\n\nfunction FoodTableR({result}) {\n  const dispatch = useDispatch();\n\n  const foodNutrition = useSelector((state) => state.foodNutrition);\n  const {success, error, loading, nutritions } = foodNutrition;\n\n  \n  console.log(result);\n\n  useEffect(()=>{\n    if(result)\n    {console.log(\"useEffect trigred\");\n    console.log('state', loading, success)\n    // console.log('function',  foodNutritionList(result))\n    if(result){\n      dispatch(foodNutritionList(result));}\n    } else{\n      dispatch(foodNutritionList(\"pizza\"));\n    }\n   \n\n    \n  },[result])\n\n   useEffect(() => {\n      if (!loading && success){\n    console.log(\"nutritions : \",nutritions[0]);\n    console.log(\"sugar : \",nutritions[0].sugar_g);\n    }else if(!(loading && success)){\n      console.log(\"error\",error);\n    }\n   }, [success])\n\n  return (\n    <div>\n       {loading && <Loader />}\n       <div className='item'>\n        <div className='item-top'>\n          <div className='item-head'>\n            <h4>{nutritions[0]?.name}</h4>\n          </div>\n          \n          <div className='item-content'>\n            \n            <div className='item-info'>\n              <span className='item-info-a'>{nutritions[0]?.calories}</span>\n              <span className='item-info-b'>Calories</span>\n            </div>\n            \n            <div className='item-info'>\n              <span className='item-info-a'>{nutritions[0]?.carbohydrates_total_g}</span>\n              <span className='item-info-b'>Carbs</span>\n            </div>\n            \n            <div className='item-info'>\n              <span className='item-info-a'>{nutritions[0]?.protein_g}</span>\n              <span className='item-info-b'>Protein</span>\n            </div>\n            \n          </div>\n        </div>\n        \n     \n      </div> \n      \n      {console.log(\"object\")}\n    </div>\n  );\n}\n\nexport default FoodTableR;\n","E:\\PFE-test\\frontend\\src\\components\\ImageLinkForm\\ImageLinkForm.jsx",["695","696"],"import React,{useState} from 'react'\nimport './ImageLinkForm.css'\n\nfunction ImageLinkForm({onInputChange,onButtonSubmit}) {\n\n\n    const fileSelectedHandler = (e) => {\n        console.log(e.target.files[0]);\n    }\n\n    return (\n        <div>\n            <p className='f3 c foodP'>\n                {'This Food Ai will classify your food'}\n            </p>\n            <div className='center'>\n                <div className='form center pa4 br3 shadow-5'>\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\n                    <button\n                    className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}\n                    >Detect</button>\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageLinkForm\n","E:\\PFE-test\\frontend\\src\\components\\Offer.jsx",["697"],"import React from 'react'\n\nfunction Offer() {\n    return (\n        <div id='offer'>\n            <div className='pr-heading'>\n                <h1>A big <span>Offer</span> FOR THIS SUMMER</h1>\n                <p className='details'>Lorem ipsum dolor sit amet </p> \n                <div className='pr-btns'>\n                    <a href=\"#\" className='pr-btn'>JOIN NOW</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Offer\n","E:\\PFE-test\\frontend\\src\\components\\Feature.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\Headers.jsx",["698"],"import React from 'react'\n\nfunction Header() {\n    return (\n        <div id=\"heading\">\n            <div className='pr-heading'>\n                <h1 className='h2-header'>SETUP UP YOUR</h1>\n                <h1><span className='span-header'>FITNESS</span> WITH US</h1>\n                <p className='details'>Build Your Body And Fitness With Professional Traier</p>\n                <div className='pr-btns'>\n                    <a href=\"#\" className='pr-btn'>JOIN US</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","E:\\PFE-test\\frontend\\src\\components\\FoodRecognition\\FoodRecognition.jsx",["699","700"],"import React from 'react'\nimport './FoodRecognition.css'\nimport {useDropzone} from 'react-dropzone'\n\nfunction FoodRecognition({imageUrl}) {\n    return (\n        <div className='center ma centred'>\n            <div className='absolute mt2 center'>\n            <img className='inputimage'  src={imageUrl} width='500px' height='auto'/>\n            </div>\n        </div>\n    )\n}\n\nexport default FoodRecognition\n","E:\\PFE-test\\frontend\\src\\actions\\foodAction.js",[],"E:\\PFE-test\\frontend\\src\\components\\FeaturesBox.jsx",[],"E:\\PFE-test\\frontend\\src\\components\\Header.js",["701"],"E:\\PFE-test\\frontend\\src\\components\\SearchBox.js",["702"],"import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction SearchBox() {\n  const [keyword, setKeyword] = useState(\"\");\n\n  let history = useHistory();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword) {\n      history.push(`/?keyword=${keyword}&page=1`);\n    } else {\n      history.push(history.push(history.location.pathname));\n    }\n  };\n  return (\n    <Form\n      onSubmit={submitHandler}\n      inline\n      className=\"text-center justify-content-center mt-5\"\n    >\n      <Form.Control\n        type=\"text\"\n        name=\"q\"\n        onChange={(e) => setKeyword(e.target.value)}\n        className=\"mr-sm-2 ml-sm-5\"\n      ></Form.Control>\n\n      <i class=\"fas fa-search ml-3\" onClick={submitHandler}></i>\n    </Form>\n  );\n}\n\nexport default SearchBox;\n","E:\\PFE-test\\frontend\\src\\screens\\Dashboard.js",["703","704","705","706","707","708","709","710","711","712","713","714"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Loader from \"../components/Loader\";\r\nimport OrderListScreen from \"./OrderListScreen\";\r\nimport Orders from \"../components/Orders\";\r\nimport Users from \"../components/Users\";\r\nimport ProductList from \"../components/ProductsList\";\r\nimport NameCustomComponent from \"../components/NameCustomComponent \";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport ProfileAdmin from \"../components/ProfileAdmin\";\r\n\r\nconst drawerComponents = {\r\n  Orders: { icon: <DescriptionIcon />, component: <Orders /> },\r\n  Users: { icon: <PeopleIcon />, component: <Users /> },\r\n  Products: { icon: <ShoppingCartIcon />, component: <ProductList /> },\r\n  Trainees: { icon: <AccountCircleIcon />, component: <ProfileAdmin /> },\r\n};\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Dashboard({ history }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [drawerText, setDrawerText] = useState(\"Orders\");\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    history.push(\"/gym\");\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDrawerCompent = (text) => {\r\n    setDrawerText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, {\r\n                [classes.hide]: open,\r\n              })}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Dashboard\r\n            </Typography>\r\n            <Avatar style={{ backgroundColor: \"green\" }}>\r\n              {\" \"}\r\n              {userInfo.name[0]}\r\n            </Avatar>\r\n            {userInfo ? (\r\n              <NavDropdown title={userInfo.name} id=\"username\">\r\n                {/* <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer> */}\r\n\r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronRightIcon />\r\n              ) : (\r\n                <ChevronLeftIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {Object.keys(drawerComponents).map((drawerComponentKey) => (\r\n              <ListItem\r\n                button\r\n                key={drawerComponentKey}\r\n                onClick={() => handleDrawerCompent(drawerComponentKey)}\r\n              >\r\n                <ListItemIcon>\r\n                  {drawerComponents[drawerComponentKey].icon}\r\n                </ListItemIcon>\r\n                <ListItemText primary={drawerComponentKey} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {drawerComponents[drawerText].component}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\PFE-test\\frontend\\src\\components\\Orders.jsx",["715","716","717"],"import React,{useState,useEffect} from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport Button from '@material-ui/core/Button';\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport NameCustomComponent from '../components/NameCustomComponent ';\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction Orders()  {\r\n\r\n    const dispatch = useDispatch()\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const [data,setData] = useState('')\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n            console.log('inside useeffect :     ',orderList[\"orders\"])\r\n            setData(orderList[\"orders\"])  \r\n            console.log('data',data);  \r\n        } else {\r\n          console.log(history)\r\n              history.push('/login')\r\n        }\r\n\r\n    }, [dispatch,userInfo,history])\r\n\r\n\r\n\r\n    const columns=[\r\n        {\r\n            title:'ID',field:'_id'\r\n        },\r\n     \r\n        {\r\n            title:'Name',field:'user.username',render: (row) => <NameCustomComponent name={row.user.name} />\r\n        },\r\n        {\r\n            title:'Date',field:'createdAt'\r\n        },\r\n        {\r\n            title:'Total',field:'totalPrice'\r\n        },\r\n        {   \r\n          title:'Paid',field:'isPaid',render: (row) => row.isPaid ? (<Button variant=\"contained\" color=\"primary\">\r\n          Paid\r\n        </Button>) : (<Button variant=\"contained\" color=\"secondary\">\r\n            Pending \r\n        </Button>)\r\n      },\r\n        {\r\n            title:'Delivred',field:'isDelivered',render: (row) => row.isDelivered ? (\r\n            <Button variant=\"contained\" color=\"primary\" style={{ backgroundColor: '#357a38' }}>\r\n             Delivred\r\n            </Button>) : (\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                 Pending \r\n              </Button>)\r\n          \r\n        },\r\n\r\n    ]\r\n\r\n    \r\n\r\n    return(<div>\r\n        {loading\r\n            ? (<Loader />)\r\n            : error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                : (\r\n        <MaterialTable title=\"Material Table\"\r\n        title='All Orders'\r\n        data={orderList['orders']}\r\n        columns={columns}\r\n        editable={{\r\n            onRowAdd: (newRow) => new Promise((resolve, reject) => {\r\n              const updatedRows = [...data, { id: Math.floor(Math.random() * 100), ...newRow }]\r\n              setTimeout(() => {\r\n                setData(updatedRows)\r\n                resolve()\r\n              }, 2000)\r\n            }),\r\n            onRowDelete: selectedRow => new Promise((resolve, reject) => {\r\n              const index = selectedRow.tableData.id;\r\n              const updatedRows = [...data]\r\n              updatedRows.splice(index, 1)\r\n              setTimeout(() => {\r\n                setData(updatedRows)\r\n                resolve()\r\n              }, 2000)\r\n            }),\r\n            onRowUpdate:(updatedRow,oldRow)=>new Promise((resolve,reject)=>{\r\n              const index=oldRow.tableData.id;\r\n              const updatedRows=[...data]\r\n              updatedRows[index]=updatedRow\r\n              setTimeout(() => {\r\n                setData(updatedRows)\r\n                resolve()\r\n              }, 2000)\r\n            })\r\n  \r\n          }}\r\n\r\n        \r\n        \r\n        options = {{\r\n            filtering:true,\r\n            exportButton:true,\r\n            actionsColumnIndex: -1, addRowPosition: \"first\",\r\n\r\n        }}\r\n        />  )}   \r\n    </div>)\r\n}\r\nexport default Orders; \r\n","E:\\PFE-test\\frontend\\src\\components\\NameCustomComponent .jsx",[],"E:\\PFE-test\\frontend\\src\\components\\Users.jsx",["718","719","720","721","722","723","724","725","726","727","728","729","730"],"E:\\PFE-test\\frontend\\src\\components\\ProductsList.jsx",["731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NameCustomComponent from \"./NameCustomComponent \";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n  listProductDetails,\r\n  updateProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\nimport FormProductEdit from \"./FormProductEdit\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nexport const ProductsList = ({ history, match }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const {\r\n    error: errorDetails,\r\n    loading: loadingDetails,\r\n    product,\r\n  } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const [productId, setProductId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(listProducts());\r\n\r\n      console.log(\"updated\");\r\n      // history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== Number(productId)) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n      }\r\n    }\r\n\r\n    console.log(\"useeffect 1\");\r\n  }, [dispatch, productId, history, successUpdate]);\r\n\r\n  useEffect(() => {\r\n    setName(product.name);\r\n    setPrice(product.price);\r\n    setImage(product.image);\r\n    setBrand(product.brand);\r\n    setCategory(product.category);\r\n    setCountInStock(product.countInStock);\r\n    setDescription(product.description);\r\n    console.log(\"rerender dispatch \");\r\n  }, [product]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", file);\r\n    formData.append(\"product_id\", productId);\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/products/upload/\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      setProductId(createdProduct._id);\r\n      setOpen(true);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n  ]);\r\n\r\n  // let keyword = history.location.search\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listProducts());\r\n      console.log(\"useeffect:\", productList[\"products\"]);\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, successDelete, userInfo]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    dispatch(createProduct());\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseChange = () => {\r\n    setOpen(false);\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShowClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleShowCloseDelete = () => {\r\n    setShow(false);\r\n    dispatch(deleteProduct(productId));\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      field: \"_id\",\r\n    },\r\n\r\n    {\r\n      title: \"Name\",\r\n      field: \"username\",\r\n      render: (row) => <NameCustomComponent name={row.name} />,\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      field: \"price\",\r\n    },\r\n    {\r\n      title: \"Left\",\r\n      field: \"countInStock\",\r\n    },\r\n\r\n    {\r\n      title: \"Preview\",\r\n      field: \"image\",\r\n      render: (row) => <img src={row.image} style={{ height: \"50px\" }}></img>,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleShowClose} className=\"mt-5\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Delete Product{\" \"}\r\n            <i\r\n              style={{ color: \"#ff7676\" }}\r\n              class=\"fas fa-exclamation-triangle\"\r\n            ></i>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure , you want to delete this Product !\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleShowClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={handleShowCloseDelete}\r\n            style={{ backgroundColor: \"red\", color: \"white\" }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Button variant=\"fab\" color=\"primary\" mini onClick={handleClickOpen}>\r\n            <Icon style={{ fontSize: 40 }} color=\"primary\">\r\n              add_circle\r\n            </Icon>\r\n          </Button>\r\n          {/* <FormAddProduct/> */}\r\n          {/* <Button variant='fab' color='primary' mini onClick={handleClickOpen}>\r\n            <Icon style={{ fontSize: 40 }} color=\"primary\">add_circle</Icon>\r\n\r\n        </Button> */}\r\n          <MaterialTable\r\n            title=\"Material Table\"\r\n            title=\"All Products\"\r\n            data={productList[\"products\"]}\r\n            columns={columns}\r\n            actions={[\r\n              (rowData) => ({\r\n                icon: \"edit\",\r\n                tooltip: \"Edit User\",\r\n                onClick: () => {\r\n                  console.log(rowData._id);\r\n                  setProductId(rowData._id);\r\n                  setOpen(true);\r\n                },\r\n              }),\r\n              (rowData) => ({\r\n                icon: \"delete\",\r\n                tooltip: \"Delete User\",\r\n                onClick: () => {\r\n                  setShow(true);\r\n                  console.log(\"rowdata : \", rowData._id);\r\n                  setProductId(rowData._id);\r\n                  console.log(\"product id : \", productId);\r\n\r\n                  //   if (\r\n                  //     window.confirm(\r\n                  //       \"Are you sure you want to delete this Product?\"\r\n                  //     )\r\n                  //   ) {\r\n                  //     dispatch(deleteProduct(rowData._id));\r\n                  //     console.log(rowData._id);\r\n                  //   }\r\n                },\r\n                disabled: rowData.isAdmin == true,\r\n              }),\r\n            ]}\r\n            options={{\r\n              filtering: true,\r\n              exportButton: true,\r\n              actionsColumnIndex: -1,\r\n              addRowPosition: \"first\",\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        {console.log(\"dialog open \", open)}\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          {/* <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  type=\"email\"\r\n                  fullWidth\r\n                /> */}\r\n          <FormContainer>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : errorDetails ? (\r\n              <Message variant=\"danger\">{errorDetails}</Message>\r\n            ) : (\r\n              <Form>\r\n                <Form.Group controlId=\"name\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"price\">\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"Enter price\"\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"image\">\r\n                  <Form.Label>Image</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter image\"\r\n                    value={image}\r\n                    onChange={(e) => setImage(e.target.value)}\r\n                  ></Form.Control>\r\n\r\n                  <Form.File\r\n                    id=\"image-file\"\r\n                    label=\"Choose File\"\r\n                    custom\r\n                    onChange={uploadFileHandler}\r\n                  ></Form.File>\r\n                  {uploading && <Loader />}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"brand\">\r\n                  <Form.Label>Brand</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter brand\"\r\n                    value={brand}\r\n                    onChange={(e) => setBrand(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"countinstock\">\r\n                  <Form.Label>Stock</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"Enter stock\"\r\n                    value={countInStock}\r\n                    onChange={(e) => setCountInStock(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"category\">\r\n                  <Form.Label>Category</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter category\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"description\">\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter description\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form>\r\n            )}\r\n          </FormContainer>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleCloseChange} color=\"primary\" variant=\"raised\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductsList;\r\n","E:\\PFE-test\\frontend\\src\\components\\employeeService.js",[],"E:\\PFE-test\\frontend\\src\\components\\PageHeader.js",["752"],"E:\\PFE-test\\frontend\\src\\components\\FormProductEdit.jsx",["753","754","755","756","757"],"import React,{useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { Paper } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle'; \r\nimport Button from '@material-ui/core/Button';\r\nimport { Fragment } from 'react';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nfunction FormProductEdit({show}) {\r\n\r\n    const [open, setOpen] = React.useState(true);\r\n    console.log('showww',open)\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleToggle = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n        <Button variant='fab' color='primary' mini onClick={handleClickOpen}>\r\n            <Icon style={{ fontSize: 40 }} color=\"primary\">add_circle</Icon>\r\n\r\n        </Button>\r\n\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" variant='raised'>\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>   \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FormProductEdit\r\n","E:\\PFE-test\\frontend\\src\\components\\ProfileAdmin.jsx",["758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774"],"import React,{useState,useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Row, Col, Table , Container } from 'react-bootstrap'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ProfileAdmin({history}) {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { error, loading, user } = userDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n        history.push('/login')\r\n    } else {\r\n        if (!user || !user.name || success || userInfo._id !== user._id) {\r\n            dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n            dispatch(getUserDetails('profile'))\r\n        } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n    }\r\n}, [dispatch, history, userInfo, user, success])\r\n\r\nconst submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (password != confirmPassword) {\r\n        setMessage('Passwords do not match')\r\n    } else {\r\n        dispatch(updateUserProfile({\r\n            'id': user._id,\r\n            'name': name,\r\n            'email': email,\r\n            'password': password\r\n        }))\r\n        setMessage('')\r\n        dispatch(getUserDetails('profile'))\r\n    }\r\n\r\n}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={3} >\r\n        <Row className=\"justify-content-center\">\r\n        <Col md={4} className=\"text-center justify-content-center\">\r\n        \r\n                <h2 style={{color : 'black'}}>User Profile</h2>\r\n                <Avatar style={{backgroundColor:\"green\"}} md=\"3\" style={{marginLeft : '45%' , backgroundColor:'green',height:'50px',width:'50px'}}> {userInfo.name[0]}</Avatar>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name' >\r\n                        <Form.Label >Name</Form.Label>\r\n                        <Form.Control\r\n                            size='lg'\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                          \r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            size='lg'\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            size='lg'\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            size='lg'\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant=\"contained\" color=\"primary\"  size=\"large\"  startIcon={<SaveIcon />}>\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n\r\n        \r\n        \r\n     \r\n      </Paper>\r\n    </div>\r\n  );\r\n}","E:\\PFE-test\\frontend\\src\\components\\PersonalInfo.jsx",["775","776"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { traineeInfo } from \"../actions/userActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport \"date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function BasicButtonGroup() {\r\n  const classes = useStyles();\r\n  const [sex, setSex] = React.useState(\"btn1\");\r\n\r\n  const btns = [\"Male\", \"Female\", \"Other\"];\r\n\r\n  const [birthDate, setBirthDate] = useState(new Date(\"2014-08-18T21:11:54\"));\r\n\r\n  const [height, setHeight] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n\r\n  const handleDateChange = (date) => {\r\n    setBirthDate(date);\r\n  };\r\n  const UserTrainee = useSelector((state) => state.UserTrainee);\r\n  const { trainee } = UserTrainee;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(traineeInfo({ ...trainee, height, weight, birthDate, sex }));\r\n  }, [height, weight, birthDate, sex]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      Sex :\r\n      <ButtonGroup\r\n        color=\"primary\"\r\n        label=\"sex\"\r\n        aria-label=\"outlined primary button group\"\r\n      >\r\n        {btns.map((btn) => (\r\n          <Button\r\n            onClick={() => setSex(btn)}\r\n            variant={btn === sex ? \"contained\" : \"outlined\"}\r\n          >\r\n            {btn}\r\n          </Button>\r\n        ))}\r\n      </ButtonGroup>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container justify=\"space-around\">\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"MM/dd/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"Date picker inline\"\r\n            value={birthDate}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </MuiPickersUtilsProvider>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"height\"\r\n          value={height}\r\n          onChange={(e) => {\r\n            setHeight(e.target.value);\r\n          }}\r\n        />\r\n        cm\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"weight\"\r\n          value={weight}\r\n          onChange={(e) => {\r\n            setWeight(e.target.value);\r\n          }}\r\n        />\r\n        Kg\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","E:\\PFE-test\\frontend\\src\\components\\Activities.jsx",["777","778"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { traineeInfo } from \"../actions/userActions\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: \"50%\",\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow:\r\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n    backgroundColor: \"#f5f8fa\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n    \"$root.Mui-focusVisible &\": {\r\n      outline: \"2px auto rgba(19,124,189,.6)\",\r\n      outlineOffset: 2,\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n    \"input:disabled ~ &\": {\r\n      boxShadow: \"none\",\r\n      background: \"rgba(206,217,224,.5)\",\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: \"#137cbd\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage: \"radial-gradient(#fff,#fff 28%,transparent 32%)\",\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n});\r\n\r\n// Inspired by blueprintjs\r\nfunction StyledRadio(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Radio\r\n      className={classes.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n      icon={<span className={classes.icon} />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function Activities() {\r\n  const [activitie, setActivitie] = React.useState(\"Lightly Active\");\r\n\r\n  const UserTrainee = useSelector((state) => state.UserTrainee);\r\n  const { trainee } = UserTrainee;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(traineeInfo({ ...trainee, activitie }));\r\n  }, [activitie]);\r\n\r\n  console.log(activitie);\r\n  const handleRadioChange = (event) => {\r\n    setActivitie(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">How Are You ?</FormLabel>\r\n      <RadioGroup\r\n        onChange={handleRadioChange}\r\n        defaultValue={activitie}\r\n        aria-label=\"gender\"\r\n        name=\"customized-radios\"\r\n      >\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Sedentary\"\r\n            control={<StyledRadio />}\r\n            label=\"Sedentary\"\r\n          />\r\n          <p className=\"text-radio\">\r\n            Work a desk job and do very little exercise or housework\r\n          </p>\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Lightly Active\"\r\n            control={<StyledRadio />}\r\n            label=\"Lightly Active\"\r\n          />\r\n          <p className=\"text-radio\">Exercise 3x a week </p>\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Moderately Active\"\r\n            control={<StyledRadio />}\r\n            label=\"Moderately Active\"\r\n          />\r\n          <p className=\"text-radio\">Exercise 4-5x per week </p>\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Very Active\"\r\n            control={<StyledRadio />}\r\n            label=\"Very Active\"\r\n          />\r\n          <p className=\"text-radio\">Exercise 6-7x per week </p>\r\n        </div>\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","E:\\PFE-test\\frontend\\src\\components\\Consultation.jsx",["779","780","781","782","783","784","785"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { traineeInfo } from \"../actions/userActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: \"50%\",\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow:\r\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n    backgroundColor: \"#f5f8fa\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n    \"$root.Mui-focusVisible &\": {\r\n      outline: \"2px auto rgba(19,124,189,.6)\",\r\n      outlineOffset: 2,\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n    \"input:disabled ~ &\": {\r\n      boxShadow: \"none\",\r\n      background: \"rgba(206,217,224,.5)\",\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: \"#137cbd\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage: \"radial-gradient(#fff,#fff 28%,transparent 32%)\",\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n}));\r\n\r\n// Inspired by blueprintjs\r\nfunction StyledRadio(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Radio\r\n      className={classes.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n      icon={<span className={classes.icon} />}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function Consultation() {\r\n  const classes = useStyles();\r\n  const [objective, setObjective] = React.useState(\"Gain Muscles\");\r\n  const [experience, setExperience] = React.useState(\"yes\");\r\n\r\n  const UserTrainee = useSelector((state) => state.UserTrainee);\r\n  const { trainee } = UserTrainee;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(traineeInfo({ ...trainee, objective, experience }));\r\n  }, [objective, experience]);\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">How Are You ?</FormLabel>\r\n      <RadioGroup\r\n        onChange={(e) => {\r\n          setObjective(e.target.value);\r\n        }}\r\n        defaultValue={objective}\r\n        aria-label=\"objectif\"\r\n        name=\"customized-radios\"\r\n      >\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Gain Muscles\"\r\n            control={<StyledRadio />}\r\n            label=\"Gain Muscles\"\r\n          />\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Health (General)\"\r\n            control={<StyledRadio />}\r\n            label=\"Health (General)\"\r\n          />\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Muscular strength/power\"\r\n            control={<StyledRadio />}\r\n            label=\"Muscular strength/power\"\r\n          />\r\n        </div>\r\n        <div className=\"onboard-radio\">\r\n          <FormControlLabel\r\n            value=\"Weight loss\"\r\n            control={<StyledRadio />}\r\n            label=\"Weight loss\"\r\n          />\r\n        </div>\r\n      </RadioGroup>\r\n\r\n      <h4>Do you have experience with exercise ?</h4>\r\n      <div class=\"select\">\r\n        <select\r\n          name=\"slct\"\r\n          id=\"slct\"\r\n          onChange={(e) => {\r\n            setExperience(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"yes\">Yes</option>\r\n          <option value=\"no\">No</option>\r\n        </select>\r\n      </div>\r\n    </FormControl>\r\n  );\r\n}\r\n","E:\\PFE-test\\frontend\\src\\components\\TrainingPlan.jsx",["786"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TextareaAutosize } from \"@material-ui/core\";\r\nimport { traineeInfo } from \"../actions/userActions\";\r\n\r\nfunction TrainingPlan() {\r\n  const [equipement, setEquipement] = React.useState(\"free dumble weight\");\r\n  const [days, setDays] = React.useState(\"2-3\");\r\n  const [healthIssues, setHealthIssues] = useState(\"\");\r\n\r\n  const UserTrainee = useSelector((state) => state.UserTrainee);\r\n  const { trainee } = UserTrainee;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(traineeInfo({ ...trainee, equipement, days, healthIssues }));\r\n  }, [equipement, days, healthIssues]);\r\n\r\n  return (\r\n    <div>\r\n      <h4>what equipement do you have acces to ?</h4>\r\n      <div class=\"select\">\r\n        <select\r\n          name=\"slct\"\r\n          id=\"slct\"\r\n          onChange={(e) => {\r\n            setEquipement(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"free dumble weight\">Free dumble weight</option>\r\n          <option value=\"gym machines\">Gym machines</option>\r\n          <option value=\"2\">cables weight</option>\r\n          <option value=\"Body weight\">Body weight</option>\r\n        </select>\r\n      </div>\r\n      <h4>How many days you want to train ?</h4>\r\n      <div class=\"select\">\r\n        <select\r\n          name=\"slct\"\r\n          id=\"slct\"\r\n          onChange={(e) => {\r\n            setDays(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"2-3\">2-3</option>\r\n          <option value=\"3-4\">3-4</option>\r\n          <option value=\"4-5\">4-5</option>\r\n        </select>\r\n      </div>\r\n      <h4>do you have any injury or health issues ?</h4>\r\n      <TextareaAutosize\r\n        aria-label=\"minimum height\"\r\n        rowsMin={5}\r\n        cols={40}\r\n        placeholder=\"Write here ...\"\r\n        onChange={(e) => {\r\n          setHealthIssues(e.target.value);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrainingPlan;\r\n","E:\\PFE-test\\frontend\\src\\components\\TraineeDetails.jsx",["787","788","789","790","791"],{"ruleId":"792","replacedBy":"793"},{"ruleId":"794","replacedBy":"795"},{"ruleId":"796","severity":1,"message":"797","line":1,"column":10,"nodeType":"798","messageId":"799","endLine":1,"endColumn":19},{"ruleId":"796","severity":1,"message":"800","line":3,"column":34,"nodeType":"798","messageId":"799","endLine":3,"endColumn":37},{"ruleId":"792","replacedBy":"801"},{"ruleId":"794","replacedBy":"802"},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"804","severity":1,"message":"805","line":12,"column":25,"nodeType":"806","endLine":12,"endColumn":37},{"ruleId":"804","severity":1,"message":"805","line":21,"column":37,"nodeType":"806","endLine":21,"endColumn":73},{"ruleId":"804","severity":1,"message":"805","line":22,"column":37,"nodeType":"806","endLine":22,"endColumn":73},{"ruleId":"804","severity":1,"message":"805","line":23,"column":37,"nodeType":"806","endLine":23,"endColumn":73},{"ruleId":"804","severity":1,"message":"805","line":24,"column":37,"nodeType":"806","endLine":24,"endColumn":73},{"ruleId":"804","severity":1,"message":"805","line":25,"column":37,"nodeType":"806","endLine":25,"endColumn":73},{"ruleId":"807","severity":1,"message":"808","line":142,"column":84,"nodeType":"809","messageId":"810","endLine":142,"endColumn":86},{"ruleId":"796","severity":1,"message":"811","line":1,"column":27,"nodeType":"798","messageId":"799","endLine":1,"endColumn":36},{"ruleId":"796","severity":1,"message":"812","line":2,"column":10,"nodeType":"798","messageId":"799","endLine":2,"endColumn":14},{"ruleId":"807","severity":1,"message":"813","line":53,"column":22,"nodeType":"809","messageId":"810","endLine":53,"endColumn":24},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"814","severity":1,"message":"815","line":35,"column":8,"nodeType":"816","endLine":35,"endColumn":26,"suggestions":"817"},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"814","severity":1,"message":"818","line":43,"column":8,"nodeType":"816","endLine":43,"endColumn":46,"suggestions":"819"},{"ruleId":"814","severity":1,"message":"820","line":65,"column":8,"nodeType":"816","endLine":65,"endColumn":62,"suggestions":"821"},{"ruleId":"796","severity":1,"message":"811","line":1,"column":27,"nodeType":"798","messageId":"799","endLine":1,"endColumn":36},{"ruleId":"807","severity":1,"message":"813","line":34,"column":22,"nodeType":"809","messageId":"810","endLine":34,"endColumn":24},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"796","severity":1,"message":"822","line":2,"column":8,"nodeType":"798","messageId":"799","endLine":2,"endColumn":21},{"ruleId":"796","severity":1,"message":"823","line":4,"column":8,"nodeType":"798","messageId":"799","endLine":4,"endColumn":23},{"ruleId":"796","severity":1,"message":"824","line":13,"column":8,"nodeType":"798","messageId":"799","endLine":13,"endColumn":14},{"ruleId":"796","severity":1,"message":"825","line":14,"column":8,"nodeType":"798","messageId":"799","endLine":14,"endColumn":14},{"ruleId":"796","severity":1,"message":"826","line":16,"column":8,"nodeType":"798","messageId":"799","endLine":16,"endColumn":15},{"ruleId":"796","severity":1,"message":"827","line":17,"column":17,"nodeType":"798","messageId":"799","endLine":17,"endColumn":22},{"ruleId":"796","severity":1,"message":"828","line":84,"column":9,"nodeType":"798","messageId":"799","endLine":84,"endColumn":21},{"ruleId":"796","severity":1,"message":"829","line":88,"column":9,"nodeType":"798","messageId":"799","endLine":88,"endColumn":22},{"ruleId":"796","severity":1,"message":"830","line":92,"column":9,"nodeType":"798","messageId":"799","endLine":92,"endColumn":23},{"ruleId":"796","severity":1,"message":"831","line":97,"column":9,"nodeType":"798","messageId":"799","endLine":97,"endColumn":20},{"ruleId":"796","severity":1,"message":"832","line":101,"column":9,"nodeType":"798","messageId":"799","endLine":101,"endColumn":22},{"ruleId":"833","severity":1,"message":"834","line":251,"column":21,"nodeType":"806","endLine":251,"endColumn":41},{"ruleId":"833","severity":1,"message":"834","line":353,"column":21,"nodeType":"806","endLine":353,"endColumn":41},{"ruleId":"833","severity":1,"message":"834","line":356,"column":21,"nodeType":"806","endLine":356,"endColumn":41},{"ruleId":"833","severity":1,"message":"834","line":359,"column":21,"nodeType":"806","endLine":359,"endColumn":41},{"ruleId":"833","severity":1,"message":"834","line":362,"column":21,"nodeType":"806","endLine":362,"endColumn":41},{"ruleId":"796","severity":1,"message":"835","line":21,"column":5,"nodeType":"798","messageId":"799","endLine":21,"endColumn":30},{"ruleId":"796","severity":1,"message":"836","line":14,"column":5,"nodeType":"798","messageId":"799","endLine":14,"endColumn":20},{"ruleId":"796","severity":1,"message":"837","line":19,"column":5,"nodeType":"798","messageId":"799","endLine":19,"endColumn":24},{"ruleId":"796","severity":1,"message":"838","line":28,"column":5,"nodeType":"798","messageId":"799","endLine":28,"endColumn":24},{"ruleId":"796","severity":1,"message":"839","line":117,"column":17,"nodeType":"798","messageId":"799","endLine":117,"endColumn":21},{"ruleId":"840","severity":1,"message":"841","line":57,"column":31,"nodeType":"842","messageId":"843","endLine":57,"endColumn":33},{"ruleId":"796","severity":1,"message":"844","line":3,"column":9,"nodeType":"798","messageId":"799","endLine":3,"endColumn":20},{"ruleId":"833","severity":1,"message":"834","line":9,"column":13,"nodeType":"806","endLine":9,"endColumn":86},{"ruleId":"796","severity":1,"message":"803","line":1,"column":15,"nodeType":"798","messageId":"799","endLine":1,"endColumn":23},{"ruleId":"796","severity":1,"message":"845","line":7,"column":11,"nodeType":"798","messageId":"799","endLine":7,"endColumn":30},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"796","severity":1,"message":"846","line":4,"column":8,"nodeType":"798","messageId":"799","endLine":4,"endColumn":15},{"ruleId":"796","severity":1,"message":"847","line":6,"column":10,"nodeType":"798","messageId":"799","endLine":6,"endColumn":16},{"ruleId":"814","severity":1,"message":"848","line":31,"column":5,"nodeType":"816","endLine":31,"endColumn":13,"suggestions":"849"},{"ruleId":"814","severity":1,"message":"850","line":40,"column":7,"nodeType":"816","endLine":40,"endColumn":16,"suggestions":"851"},{"ruleId":"804","severity":1,"message":"805","line":11,"column":21,"nodeType":"806","endLine":11,"endColumn":52},{"ruleId":"804","severity":1,"message":"805","line":10,"column":21,"nodeType":"806","endLine":10,"endColumn":52},{"ruleId":"796","severity":1,"message":"852","line":7,"column":8,"nodeType":"798","messageId":"799","endLine":7,"endColumn":9},{"ruleId":"796","severity":1,"message":"853","line":8,"column":8,"nodeType":"798","messageId":"799","endLine":8,"endColumn":14},{"ruleId":"792","replacedBy":"854"},{"ruleId":"794","replacedBy":"855"},{"ruleId":"796","severity":1,"message":"797","line":1,"column":10,"nodeType":"798","messageId":"799","endLine":1,"endColumn":19},{"ruleId":"796","severity":1,"message":"856","line":2,"column":10,"nodeType":"798","messageId":"799","endLine":2,"endColumn":21},{"ruleId":"796","severity":1,"message":"857","line":2,"column":23,"nodeType":"798","messageId":"799","endLine":2,"endColumn":34},{"ruleId":"796","severity":1,"message":"858","line":5,"column":8,"nodeType":"798","messageId":"799","endLine":5,"endColumn":14},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"807","severity":1,"message":"808","line":158,"column":54,"nodeType":"809","messageId":"810","endLine":158,"endColumn":56},{"ruleId":"814","severity":1,"message":"859","line":70,"column":6,"nodeType":"816","endLine":70,"endColumn":29,"suggestions":"860"},{"ruleId":"807","severity":1,"message":"813","line":75,"column":18,"nodeType":"809","messageId":"810","endLine":75,"endColumn":20},{"ruleId":"796","severity":1,"message":"812","line":2,"column":10,"nodeType":"798","messageId":"799","endLine":2,"endColumn":14},{"ruleId":"807","severity":1,"message":"813","line":53,"column":22,"nodeType":"809","messageId":"810","endLine":53,"endColumn":24},{"ruleId":"796","severity":1,"message":"811","line":1,"column":27,"nodeType":"798","messageId":"799","endLine":1,"endColumn":36},{"ruleId":"796","severity":1,"message":"811","line":1,"column":27,"nodeType":"798","messageId":"799","endLine":1,"endColumn":36},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"814","severity":1,"message":"815","line":35,"column":8,"nodeType":"816","endLine":35,"endColumn":26,"suggestions":"861"},{"ruleId":"814","severity":1,"message":"820","line":65,"column":8,"nodeType":"816","endLine":65,"endColumn":62,"suggestions":"862"},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"814","severity":1,"message":"818","line":43,"column":8,"nodeType":"816","endLine":43,"endColumn":46,"suggestions":"863"},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"804","severity":1,"message":"805","line":12,"column":25,"nodeType":"806","endLine":12,"endColumn":37},{"ruleId":"804","severity":1,"message":"805","line":21,"column":37,"nodeType":"806","endLine":21,"endColumn":73},{"ruleId":"804","severity":1,"message":"805","line":22,"column":37,"nodeType":"806","endLine":22,"endColumn":73},{"ruleId":"804","severity":1,"message":"805","line":23,"column":37,"nodeType":"806","endLine":23,"endColumn":73},{"ruleId":"804","severity":1,"message":"805","line":24,"column":37,"nodeType":"806","endLine":24,"endColumn":73},{"ruleId":"804","severity":1,"message":"805","line":25,"column":37,"nodeType":"806","endLine":25,"endColumn":73},{"ruleId":"796","severity":1,"message":"864","line":6,"column":10,"nodeType":"798","messageId":"799","endLine":6,"endColumn":16},{"ruleId":"796","severity":1,"message":"865","line":6,"column":18,"nodeType":"798","messageId":"799","endLine":6,"endColumn":21},{"ruleId":"796","severity":1,"message":"797","line":6,"column":23,"nodeType":"798","messageId":"799","endLine":6,"endColumn":32},{"ruleId":"796","severity":1,"message":"800","line":6,"column":34,"nodeType":"798","messageId":"799","endLine":6,"endColumn":37},{"ruleId":"796","severity":1,"message":"866","line":9,"column":8,"nodeType":"798","messageId":"799","endLine":9,"endColumn":17},{"ruleId":"796","severity":1,"message":"822","line":2,"column":8,"nodeType":"798","messageId":"799","endLine":2,"endColumn":21},{"ruleId":"796","severity":1,"message":"823","line":4,"column":8,"nodeType":"798","messageId":"799","endLine":4,"endColumn":23},{"ruleId":"796","severity":1,"message":"824","line":13,"column":8,"nodeType":"798","messageId":"799","endLine":13,"endColumn":14},{"ruleId":"796","severity":1,"message":"825","line":14,"column":8,"nodeType":"798","messageId":"799","endLine":14,"endColumn":14},{"ruleId":"796","severity":1,"message":"826","line":16,"column":8,"nodeType":"798","messageId":"799","endLine":16,"endColumn":15},{"ruleId":"796","severity":1,"message":"827","line":17,"column":17,"nodeType":"798","messageId":"799","endLine":17,"endColumn":22},{"ruleId":"796","severity":1,"message":"828","line":84,"column":9,"nodeType":"798","messageId":"799","endLine":84,"endColumn":21},{"ruleId":"796","severity":1,"message":"829","line":88,"column":9,"nodeType":"798","messageId":"799","endLine":88,"endColumn":22},{"ruleId":"796","severity":1,"message":"830","line":92,"column":9,"nodeType":"798","messageId":"799","endLine":92,"endColumn":23},{"ruleId":"796","severity":1,"message":"831","line":97,"column":9,"nodeType":"798","messageId":"799","endLine":97,"endColumn":20},{"ruleId":"796","severity":1,"message":"832","line":101,"column":9,"nodeType":"798","messageId":"799","endLine":101,"endColumn":22},{"ruleId":"833","severity":1,"message":"834","line":251,"column":21,"nodeType":"806","endLine":251,"endColumn":41},{"ruleId":"833","severity":1,"message":"834","line":353,"column":21,"nodeType":"806","endLine":353,"endColumn":41},{"ruleId":"833","severity":1,"message":"834","line":356,"column":21,"nodeType":"806","endLine":356,"endColumn":41},{"ruleId":"833","severity":1,"message":"834","line":359,"column":21,"nodeType":"806","endLine":359,"endColumn":41},{"ruleId":"833","severity":1,"message":"834","line":362,"column":21,"nodeType":"806","endLine":362,"endColumn":41},{"ruleId":"867","severity":1,"message":"868","line":8,"column":49,"nodeType":"869","endLine":8,"endColumn":70},{"ruleId":"796","severity":1,"message":"836","line":14,"column":5,"nodeType":"798","messageId":"799","endLine":14,"endColumn":20},{"ruleId":"796","severity":1,"message":"837","line":19,"column":5,"nodeType":"798","messageId":"799","endLine":19,"endColumn":24},{"ruleId":"796","severity":1,"message":"838","line":28,"column":5,"nodeType":"798","messageId":"799","endLine":28,"endColumn":24},{"ruleId":"796","severity":1,"message":"839","line":117,"column":17,"nodeType":"798","messageId":"799","endLine":117,"endColumn":21},{"ruleId":"796","severity":1,"message":"835","line":17,"column":3,"nodeType":"798","messageId":"799","endLine":17,"endColumn":28},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"796","severity":1,"message":"846","line":4,"column":8,"nodeType":"798","messageId":"799","endLine":4,"endColumn":15},{"ruleId":"796","severity":1,"message":"847","line":6,"column":10,"nodeType":"798","messageId":"799","endLine":6,"endColumn":16},{"ruleId":"814","severity":1,"message":"848","line":31,"column":5,"nodeType":"816","endLine":31,"endColumn":13,"suggestions":"870"},{"ruleId":"814","severity":1,"message":"850","line":40,"column":7,"nodeType":"816","endLine":40,"endColumn":16,"suggestions":"871"},{"ruleId":"796","severity":1,"message":"803","line":1,"column":15,"nodeType":"798","messageId":"799","endLine":1,"endColumn":23},{"ruleId":"796","severity":1,"message":"845","line":7,"column":11,"nodeType":"798","messageId":"799","endLine":7,"endColumn":30},{"ruleId":"804","severity":1,"message":"805","line":10,"column":21,"nodeType":"806","endLine":10,"endColumn":52},{"ruleId":"804","severity":1,"message":"805","line":11,"column":21,"nodeType":"806","endLine":11,"endColumn":52},{"ruleId":"796","severity":1,"message":"844","line":3,"column":9,"nodeType":"798","messageId":"799","endLine":3,"endColumn":20},{"ruleId":"833","severity":1,"message":"834","line":9,"column":13,"nodeType":"806","endLine":9,"endColumn":86},{"ruleId":"796","severity":1,"message":"800","line":3,"column":34,"nodeType":"798","messageId":"799","endLine":3,"endColumn":37},{"ruleId":"796","severity":1,"message":"847","line":2,"column":10,"nodeType":"798","messageId":"799","endLine":2,"endColumn":16},{"ruleId":"796","severity":1,"message":"872","line":20,"column":8,"nodeType":"798","messageId":"799","endLine":20,"endColumn":17},{"ruleId":"796","severity":1,"message":"873","line":21,"column":10,"nodeType":"798","messageId":"799","endLine":21,"endColumn":15},{"ruleId":"796","severity":1,"message":"874","line":22,"column":8,"nodeType":"798","messageId":"799","endLine":22,"endColumn":16},{"ruleId":"796","severity":1,"message":"875","line":26,"column":8,"nodeType":"798","messageId":"799","endLine":26,"endColumn":25},{"ruleId":"796","severity":1,"message":"876","line":28,"column":8,"nodeType":"798","messageId":"799","endLine":28,"endColumn":14},{"ruleId":"796","severity":1,"message":"877","line":29,"column":8,"nodeType":"798","messageId":"799","endLine":29,"endColumn":23},{"ruleId":"796","severity":1,"message":"878","line":33,"column":8,"nodeType":"798","messageId":"799","endLine":33,"endColumn":27},{"ruleId":"796","severity":1,"message":"864","line":35,"column":10,"nodeType":"798","messageId":"799","endLine":35,"endColumn":16},{"ruleId":"796","severity":1,"message":"865","line":35,"column":18,"nodeType":"798","messageId":"799","endLine":35,"endColumn":21},{"ruleId":"796","severity":1,"message":"797","line":35,"column":23,"nodeType":"798","messageId":"799","endLine":35,"endColumn":32},{"ruleId":"796","severity":1,"message":"800","line":35,"column":34,"nodeType":"798","messageId":"799","endLine":35,"endColumn":37},{"ruleId":"796","severity":1,"message":"879","line":36,"column":10,"nodeType":"798","messageId":"799","endLine":36,"endColumn":23},{"ruleId":"796","severity":1,"message":"880","line":16,"column":29,"nodeType":"798","messageId":"799","endLine":16,"endColumn":35},{"ruleId":"814","severity":1,"message":"881","line":36,"column":8,"nodeType":"816","endLine":36,"endColumn":35,"suggestions":"882"},{"ruleId":"867","severity":1,"message":"868","line":83,"column":9,"nodeType":"869","endLine":83,"endColumn":27},{"ruleId":"796","severity":1,"message":"883","line":10,"column":8,"nodeType":"798","messageId":"799","endLine":10,"endColumn":17},{"ruleId":"796","severity":1,"message":"884","line":14,"column":8,"nodeType":"798","messageId":"799","endLine":14,"endColumn":25},{"ruleId":"796","severity":1,"message":"885","line":18,"column":8,"nodeType":"798","messageId":"799","endLine":18,"endColumn":21},{"ruleId":"796","severity":1,"message":"886","line":19,"column":8,"nodeType":"798","messageId":"799","endLine":19,"endColumn":12},{"ruleId":"796","severity":1,"message":"887","line":39,"column":18,"nodeType":"798","messageId":"799","endLine":39,"endColumn":30},{"ruleId":"796","severity":1,"message":"888","line":39,"column":41,"nodeType":"798","messageId":"799","endLine":39,"endColumn":55},{"ruleId":"796","severity":1,"message":"889","line":55,"column":9,"nodeType":"798","messageId":"799","endLine":55,"endColumn":19},{"ruleId":"814","severity":1,"message":"890","line":64,"column":6,"nodeType":"816","endLine":64,"endColumn":50,"suggestions":"891"},{"ruleId":"892","severity":1,"message":"893","line":67,"column":5,"nodeType":"894","messageId":"895","endLine":69,"endColumn":6},{"ruleId":"814","severity":1,"message":"896","line":83,"column":6,"nodeType":"816","endLine":83,"endColumn":29,"suggestions":"897"},{"ruleId":"796","severity":1,"message":"898","line":91,"column":9,"nodeType":"798","messageId":"799","endLine":91,"endColumn":24},{"ruleId":"867","severity":1,"message":"868","line":185,"column":11,"nodeType":"869","endLine":185,"endColumn":28},{"ruleId":"807","severity":1,"message":"808","line":226,"column":41,"nodeType":"809","messageId":"810","endLine":226,"endColumn":43},{"ruleId":"796","severity":1,"message":"899","line":6,"column":10,"nodeType":"798","messageId":"799","endLine":6,"endColumn":19},{"ruleId":"796","severity":1,"message":"900","line":6,"column":21,"nodeType":"798","messageId":"799","endLine":6,"endColumn":31},{"ruleId":"796","severity":1,"message":"901","line":18,"column":8,"nodeType":"798","messageId":"799","endLine":18,"endColumn":23},{"ruleId":"796","severity":1,"message":"883","line":19,"column":8,"nodeType":"798","messageId":"799","endLine":19,"endColumn":17},{"ruleId":"796","severity":1,"message":"884","line":23,"column":8,"nodeType":"798","messageId":"799","endLine":23,"endColumn":25},{"ruleId":"796","severity":1,"message":"902","line":43,"column":27,"nodeType":"798","messageId":"799","endLine":43,"endColumn":35},{"ruleId":"796","severity":1,"message":"903","line":43,"column":37,"nodeType":"798","messageId":"799","endLine":43,"endColumn":42},{"ruleId":"796","severity":1,"message":"904","line":43,"column":44,"nodeType":"798","messageId":"799","endLine":43,"endColumn":48},{"ruleId":"796","severity":1,"message":"905","line":47,"column":14,"nodeType":"798","messageId":"799","endLine":47,"endColumn":27},{"ruleId":"796","severity":1,"message":"906","line":48,"column":12,"nodeType":"798","messageId":"799","endLine":48,"endColumn":23},{"ruleId":"796","severity":1,"message":"907","line":54,"column":14,"nodeType":"798","messageId":"799","endLine":54,"endColumn":27},{"ruleId":"796","severity":1,"message":"908","line":55,"column":12,"nodeType":"798","messageId":"799","endLine":55,"endColumn":23},{"ruleId":"796","severity":1,"message":"888","line":63,"column":14,"nodeType":"798","messageId":"799","endLine":63,"endColumn":28},{"ruleId":"796","severity":1,"message":"909","line":77,"column":10,"nodeType":"798","messageId":"799","endLine":77,"endColumn":18},{"ruleId":"796","severity":1,"message":"910","line":77,"column":20,"nodeType":"798","messageId":"799","endLine":77,"endColumn":31},{"ruleId":"814","severity":1,"message":"911","line":96,"column":6,"nodeType":"816","endLine":96,"endColumn":51,"suggestions":"912"},{"ruleId":"814","severity":1,"message":"913","line":167,"column":6,"nodeType":"816","endLine":167,"endColumn":41,"suggestions":"914"},{"ruleId":"796","severity":1,"message":"889","line":199,"column":9,"nodeType":"798","messageId":"799","endLine":199,"endColumn":19},{"ruleId":"833","severity":1,"message":"834","line":229,"column":24,"nodeType":"806","endLine":229,"endColumn":72},{"ruleId":"867","severity":1,"message":"868","line":279,"column":13,"nodeType":"869","endLine":279,"endColumn":33},{"ruleId":"807","severity":1,"message":"808","line":310,"column":43,"nodeType":"809","messageId":"810","endLine":310,"endColumn":45},{"ruleId":"796","severity":1,"message":"847","line":2,"column":47,"nodeType":"798","messageId":"799","endLine":2,"endColumn":53},{"ruleId":"796","severity":1,"message":"803","line":1,"column":15,"nodeType":"798","messageId":"799","endLine":1,"endColumn":23},{"ruleId":"796","severity":1,"message":"915","line":2,"column":10,"nodeType":"798","messageId":"799","endLine":2,"endColumn":20},{"ruleId":"796","severity":1,"message":"873","line":3,"column":10,"nodeType":"798","messageId":"799","endLine":3,"endColumn":15},{"ruleId":"796","severity":1,"message":"916","line":12,"column":8,"nodeType":"798","messageId":"799","endLine":12,"endColumn":18},{"ruleId":"796","severity":1,"message":"917","line":28,"column":11,"nodeType":"798","messageId":"799","endLine":28,"endColumn":23},{"ruleId":"796","severity":1,"message":"918","line":3,"column":26,"nodeType":"798","messageId":"799","endLine":3,"endColumn":31},{"ruleId":"796","severity":1,"message":"797","line":3,"column":34,"nodeType":"798","messageId":"799","endLine":3,"endColumn":43},{"ruleId":"796","severity":1,"message":"919","line":4,"column":10,"nodeType":"798","messageId":"799","endLine":4,"endColumn":22},{"ruleId":"796","severity":1,"message":"920","line":4,"column":24,"nodeType":"798","messageId":"799","endLine":4,"endColumn":30},{"ruleId":"796","severity":1,"message":"921","line":4,"column":32,"nodeType":"798","messageId":"799","endLine":4,"endColumn":38},{"ruleId":"796","severity":1,"message":"922","line":4,"column":40,"nodeType":"798","messageId":"799","endLine":4,"endColumn":46},{"ruleId":"796","severity":1,"message":"923","line":4,"column":48,"nodeType":"798","messageId":"799","endLine":4,"endColumn":56},{"ruleId":"796","severity":1,"message":"924","line":11,"column":8,"nodeType":"798","messageId":"799","endLine":11,"endColumn":13},{"ruleId":"796","severity":1,"message":"925","line":12,"column":8,"nodeType":"798","messageId":"799","endLine":12,"endColumn":18},{"ruleId":"796","severity":1,"message":"926","line":13,"column":8,"nodeType":"798","messageId":"799","endLine":13,"endColumn":22},{"ruleId":"796","severity":1,"message":"927","line":14,"column":8,"nodeType":"798","messageId":"799","endLine":14,"endColumn":19},{"ruleId":"796","severity":1,"message":"883","line":15,"column":8,"nodeType":"798","messageId":"799","endLine":15,"endColumn":17},{"ruleId":"796","severity":1,"message":"928","line":16,"column":8,"nodeType":"798","messageId":"799","endLine":16,"endColumn":12},{"ruleId":"796","severity":1,"message":"929","line":17,"column":8,"nodeType":"798","messageId":"799","endLine":17,"endColumn":21},{"ruleId":"796","severity":1,"message":"886","line":19,"column":8,"nodeType":"798","messageId":"799","endLine":19,"endColumn":12},{"ruleId":"807","severity":1,"message":"813","line":72,"column":18,"nodeType":"809","messageId":"810","endLine":72,"endColumn":20},{"ruleId":"867","severity":1,"message":"868","line":94,"column":66,"nodeType":"869","endLine":94,"endColumn":147},{"ruleId":"796","severity":1,"message":"930","line":13,"column":3,"nodeType":"798","messageId":"799","endLine":13,"endColumn":21},{"ruleId":"814","severity":1,"message":"859","line":49,"column":6,"nodeType":"816","endLine":49,"endColumn":38,"suggestions":"931"},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"814","severity":1,"message":"859","line":81,"column":6,"nodeType":"816","endLine":81,"endColumn":17,"suggestions":"932"},{"ruleId":"796","severity":1,"message":"803","line":1,"column":17,"nodeType":"798","messageId":"799","endLine":1,"endColumn":25},{"ruleId":"796","severity":1,"message":"925","line":10,"column":8,"nodeType":"798","messageId":"799","endLine":10,"endColumn":18},{"ruleId":"796","severity":1,"message":"933","line":11,"column":8,"nodeType":"798","messageId":"799","endLine":11,"endColumn":16},{"ruleId":"796","severity":1,"message":"934","line":12,"column":8,"nodeType":"798","messageId":"799","endLine":12,"endColumn":14},{"ruleId":"796","severity":1,"message":"847","line":13,"column":8,"nodeType":"798","messageId":"799","endLine":13,"endColumn":14},{"ruleId":"796","severity":1,"message":"935","line":85,"column":9,"nodeType":"798","messageId":"799","endLine":85,"endColumn":16},{"ruleId":"814","severity":1,"message":"859","line":95,"column":6,"nodeType":"816","endLine":95,"endColumn":29,"suggestions":"936"},{"ruleId":"814","severity":1,"message":"859","line":17,"column":6,"nodeType":"816","endLine":17,"endColumn":38,"suggestions":"937"},{"ruleId":"796","severity":1,"message":"938","line":3,"column":16,"nodeType":"798","messageId":"799","endLine":3,"endColumn":21},{"ruleId":"796","severity":1,"message":"939","line":10,"column":11,"nodeType":"798","messageId":"799","endLine":10,"endColumn":18},{"ruleId":"796","severity":1,"message":"940","line":10,"column":29,"nodeType":"798","messageId":"799","endLine":10,"endColumn":34},{"ruleId":"814","severity":1,"message":"941","line":26,"column":6,"nodeType":"816","endLine":26,"endColumn":16,"suggestions":"942"},{"ruleId":"814","severity":1,"message":"943","line":47,"column":6,"nodeType":"816","endLine":47,"endColumn":15,"suggestions":"944"},"no-native-reassign",["945"],"no-negated-in-lhs",["946"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.",["945"],["946"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Link' is defined but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["947"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["948"],"React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["949"],"'ImageLinkForm' is defined but never used.","'FoodRecognition' is defined but never used.","'image5' is defined but never used.","'image6' is defined but never used.","'analimg' is defined but never used.","'Alert' is defined but never used.","'imageHandler' is assigned a value but never used.","'onInputChange' is assigned a value but never used.","'onButtonSubmit' is assigned a value but never used.","'uploadImage' is assigned a value but never used.","'convertBase64' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useDropzone' is defined but never used.","'fileSelectedHandler' is assigned a value but never used.","'Message' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'loading', and 'success'. Either include them or remove the dependency array.",["950"],"React Hook useEffect has missing dependencies: 'error', 'loading', and 'nutritions'. Either include them or remove the dependency array.",["951"],"'$' is defined but never used.","'Popper' is defined but never used.",["945"],["946"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Header' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'trainee'. Either include them or remove the dependency array.",["952"],["953"],["954"],["955"],"'Navbar' is defined but never used.","'Nav' is defined but never used.","'SearchBox' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["956"],["957"],"'InboxIcon' is defined but never used.","'Paper' is defined but never used.","'MailIcon' is defined but never used.","'DirectionsRunIcon' is defined but never used.","'Loader' is defined but never used.","'OrderListScreen' is defined but never used.","'NameCustomComponent' is defined but never used.","'LinkContainer' is defined but never used.","'orders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'orderList'. Either include them or remove the dependency array.",["958"],"'TextField' is defined but never used.","'DialogContentText' is defined but never used.","'FormContainer' is defined but never used.","'Icon' is defined but never used.","'errorDetails' is assigned a value but never used.","'loadingDetails' is assigned a value but never used.","'handleShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userList'. Either include it or remove the dependency array.",["959"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'dispatch', 'user._id', 'user.email', 'user.isAdmin', and 'user.name'. Either include them or remove the dependency array.",["960"],"'handleClickOpen' is assigned a value but never used.","'listUsers' is defined but never used.","'deleteUser' is defined but never used.","'FormProductEdit' is defined but never used.","'products' is assigned a value but never used.","'pages' is assigned a value but never used.","'page' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'showForm' is assigned a value but never used.","'setShowForm' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product._id' and 'product.name'. Either include them or remove the dependency array.",["961"],"React Hook useEffect has missing dependencies: 'history' and 'productList'. Either include them or remove the dependency array.",["962"],"'makeStyles' is defined but never used.","'PeopleIcon' is defined but never used.","'handleToggle' is assigned a value but never used.","'Table' is defined but never used.","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'MDBBtn' is defined but never used.","'MDBInput' is defined but never used.","'Input' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'FormControl' is defined but never used.","'Grid' is defined but never used.","'AccountCircle' is defined but never used.","'KeyboardTimePicker' is defined but never used.",["963"],["964"],"'MenuItem' is defined but never used.","'Select' is defined but never used.","'classes' is assigned a value but never used.",["965"],["966"],"'Modal' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["967"],"React Hook useEffect has missing dependencies: 'personelInfo' and 'traineeInfo'. Either include them or remove the dependency array.",["968"],"no-global-assign","no-unsafe-negation",{"desc":"969","fix":"970"},{"desc":"971","fix":"972"},{"desc":"973","fix":"974"},{"desc":"975","fix":"976"},{"desc":"977","fix":"978"},{"desc":"979","fix":"980"},{"desc":"969","fix":"981"},{"desc":"973","fix":"982"},{"desc":"971","fix":"983"},{"desc":"975","fix":"984"},{"desc":"977","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},{"desc":"994","fix":"995"},{"desc":"996","fix":"997"},{"desc":"998","fix":"999"},{"desc":"1000","fix":"1001"},{"desc":"1002","fix":"1003"},{"desc":"1004","fix":"1005"},{"desc":"1006","fix":"1007"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"1008","text":"1009"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"1010","text":"1011"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [dispatch, loading, result, success]",{"range":"1014","text":"1015"},"Update the dependencies array to be: [error, loading, nutritions, success]",{"range":"1016","text":"1017"},"Update the dependencies array to be: [name, email, password, dispatch, trainee]",{"range":"1018","text":"1019"},{"range":"1020","text":"1009"},{"range":"1021","text":"1013"},{"range":"1022","text":"1011"},{"range":"1023","text":"1015"},{"range":"1024","text":"1017"},"Update the dependencies array to be: [dispatch, userInfo, history, orderList, data]",{"range":"1025","text":"1026"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo, userList]",{"range":"1027","text":"1028"},"Update the dependencies array to be: [userId, successUpdate, dispatch, user.name, user._id, user.email, user.isAdmin]",{"range":"1029","text":"1030"},"Update the dependencies array to be: [dispatch, productId, history, successUpdate, product.name, product._id]",{"range":"1031","text":"1032"},"Update the dependencies array to be: [dispatch, history, productList, successDelete, userInfo]",{"range":"1033","text":"1034"},"Update the dependencies array to be: [height, weight, birthDate, sex, dispatch, trainee]",{"range":"1035","text":"1036"},"Update the dependencies array to be: [activitie, dispatch, trainee]",{"range":"1037","text":"1038"},"Update the dependencies array to be: [objective, experience, dispatch, trainee]",{"range":"1039","text":"1040"},"Update the dependencies array to be: [equipement, days, healthIssues, dispatch, trainee]",{"range":"1041","text":"1042"},"Update the dependencies array to be: [dispatch, id]",{"range":"1043","text":"1044"},"Update the dependencies array to be: [personelInfo, success, traineeInfo]",{"range":"1045","text":"1046"},[1268,1286],"[success, history, order._id, dispatch]",[1432,1470],"[user, userId, successUpdate, history, dispatch]",[2272,2326],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]",[902,910],"[dispatch, loading, result, success]",[1157,1166],"[error, loading, nutritions, success]",[2226,2249],"[name, email, password, dispatch, trainee]",[1279,1297],[2283,2337],[1432,1470],[872,880],[1118,1127],[1158,1185],"[dispatch, userInfo, history, orderList, data]",[2413,2457],"[dispatch, history, successDelete, userInfo, userList]",[2879,2902],"[userId, successUpdate, dispatch, user.name, user._id, user.email, user.isAdmin]",[3257,3302],"[dispatch, productId, history, successUpdate, product.name, product._id]",[4847,4882],"[dispatch, history, productList, successDelete, userInfo]",[1492,1524],"[height, weight, birthDate, sex, dispatch, trainee]",[2336,2347],"[activitie, dispatch, trainee]",[2810,2833],"[objective, experience, dispatch, trainee]",[676,708],"[equipement, days, healthIssues, dispatch, trainee]",[1045,1055],"[dispatch, id]",[1879,1888],"[personelInfo, success, traineeInfo]"]